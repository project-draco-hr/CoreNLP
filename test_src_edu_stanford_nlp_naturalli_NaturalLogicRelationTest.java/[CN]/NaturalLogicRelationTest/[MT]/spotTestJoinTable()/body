{
  assertEquals(NaturalLogicRelation.COVER,NaturalLogicRelation.NEGATION.join(NaturalLogicRelation.FORWARD_ENTAILMENT));
  assertEquals(NaturalLogicRelation.FORWARD_ENTAILMENT,NaturalLogicRelation.ALTERNATION.join(NaturalLogicRelation.NEGATION));
  assertEquals(NaturalLogicRelation.REVERSE_ENTAILMENT,NaturalLogicRelation.COVER.join(NaturalLogicRelation.ALTERNATION));
  assertEquals(NaturalLogicRelation.EQUIVALENCE,NaturalLogicRelation.NEGATION.join(NaturalLogicRelation.NEGATION));
  for (  NaturalLogicRelation rel : NaturalLogicRelation.values()) {
    assertEquals(rel,NaturalLogicRelation.EQUIVALENCE.join(rel));
    assertEquals(NaturalLogicRelation.INDEPENDENCE,NaturalLogicRelation.INDEPENDENCE.join(rel));
    assertEquals(NaturalLogicRelation.INDEPENDENCE,rel.join(NaturalLogicRelation.INDEPENDENCE));
  }
}
