{
  this.window=window;
  this.classIndex=classIndex;
  this.numClasses=classIndex.size();
  this.labelIndices=labelIndices;
  this.data=data;
  this.flags=flags;
  this.map=map;
  this.labels=labels;
  this.prior=prior;
  this.backgroundSymbol=flags.backgroundSymbol;
  this.sigma=flags.sigma;
  this.outputLayerSize=numClasses;
  this.outputLayerSize4Edge=numClasses * numClasses;
  this.numHiddenUnits=flags.numHiddenUnits;
  this.inputLayerSize=numHiddenUnits * numClasses;
  this.inputLayerSize4Edge=numHiddenUnits * numClasses * numClasses;
  this.numNodeFeatures=numNodeFeatures;
  this.numEdgeFeatures=numEdgeFeatures;
  this.useOutputLayer=flags.useOutputLayer;
  this.useHiddenLayer=flags.useHiddenLayer;
  this.useSigmoid=flags.useSigmoid;
  this.docWindowLabels=new int[data.length][];
  if (!useOutputLayer) {
    System.err.println("Output layer not activated, inputLayerSize must be equal to numClasses, setting it to " + numClasses);
    this.inputLayerSize=numClasses;
    this.inputLayerSize4Edge=numClasses * numClasses;
  }
 else   if (flags.softmaxOutputLayer && !(flags.sparseOutputLayer || flags.tieOutputLayer)) {
    throw new RuntimeException("flags.softmaxOutputLayer == true, but neither flags.sparseOutputLayer or flags.tieOutputLayer is true");
  }
}
