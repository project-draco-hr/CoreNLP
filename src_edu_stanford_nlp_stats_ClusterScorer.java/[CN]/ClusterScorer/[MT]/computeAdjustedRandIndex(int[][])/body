{
  int[] rowCounts=new int[confusionMatrix.length];
  int[] colCounts=new int[confusionMatrix[0].length];
  int totalCount=0;
  for (int i=0; i < confusionMatrix.length; i++) {
    for (int j=0; j < confusionMatrix[i].length; j++) {
      int c=confusionMatrix[i][j];
      rowCounts[i]+=c;
      colCounts[j]+=c;
      totalCount+=c;
    }
  }
  double eachTerm=0.0;
  for (int i=0; i < confusionMatrix.length; i++) {
    for (int j=0; j < confusionMatrix[i].length; j++) {
      eachTerm+=SloppyMath.nChooseK(confusionMatrix[i][j],2);
    }
  }
  double rowTerm=0.0;
  for (int i=0; i < rowCounts.length; i++) {
    rowTerm+=SloppyMath.nChooseK(rowCounts[i],2);
  }
  double colTerm=0.0;
  for (int j=0; j < colCounts.length; j++) {
    colTerm+=SloppyMath.nChooseK(colCounts[j],2);
  }
  double allTerm=SloppyMath.nChooseK(totalCount,2);
  double result=(eachTerm - ((rowTerm * colTerm) / allTerm)) / ((0.5 * (rowTerm + colTerm)) - ((rowTerm * colTerm) / allTerm));
  return result;
}
