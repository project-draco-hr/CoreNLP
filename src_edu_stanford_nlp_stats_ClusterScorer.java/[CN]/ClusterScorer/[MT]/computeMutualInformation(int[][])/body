{
  double[] rowCounts=new double[confusionMatrix.length];
  double[] colCounts=new double[confusionMatrix[0].length];
  double totalCount=0;
  for (int i=0; i < confusionMatrix.length; i++) {
    for (int j=0; j < confusionMatrix[i].length; j++) {
      int c=confusionMatrix[i][j];
      rowCounts[i]+=c;
      colCounts[j]+=c;
      totalCount+=c;
    }
  }
  double result=0.0;
  for (int i=0; i < confusionMatrix.length; i++) {
    for (int j=0; j < confusionMatrix[i].length; j++) {
      int c=confusionMatrix[i][j];
      if (c > 0) {
        double prob=c / totalCount;
        double prodMarginals=(rowCounts[i] / totalCount) * (colCounts[j] / totalCount);
        result+=(prob * Math.log(prob / prodMarginals));
      }
    }
  }
  return result;
}
