{
  Stack<TreeNode<E,T>> todo=new Stack<TreeNode<E,T>>();
  todo.push(node);
  while (!todo.isEmpty()) {
    TreeNode<E,T> n=todo.pop();
    if (n == null || n.isEmpty())     continue;
    if (target.first.compareTo(n.maxEnd) > 0)     continue;
    if (n.value.getInterval().overlaps(target)) {
      return true;
    }
    if (n.left != null) {
      todo.add(n.left);
    }
    if (target.second.compareTo(n.value.getInterval().first()) < 0) {
      continue;
    }
    if (n.right != null) {
      todo.add(n.right);
    }
  }
  return false;
}
