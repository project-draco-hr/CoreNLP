{
  this.instanceIndex=instanceIndex;
  Map<Integer,Double> setNonZeros=Generics.newHashMap();
  for (int i=0; i < vals.length; i++) {
    if (vals[i] != 0.0) {
      Integer in=Integer.valueOf(indexOf(e.get(i)[0],e.get(i)[1]));
      Double oldVal=setNonZeros.put(in,Double.valueOf(vals[i]));
      if (oldVal != null && oldVal.doubleValue() != vals[i]) {
        throw new IllegalStateException("Incorrect function specification: Feature has two values at one point: " + oldVal + " and "+ vals[i]);
      }
    }
  }
  Integer[] keys=setNonZeros.keySet().toArray(new Integer[setNonZeros.keySet().size()]);
  indexedValues=new int[keys.length];
  valuesI=new double[keys.length];
  for (int j=0; j < keys.length; j++) {
    indexedValues[j]=keys[j].intValue();
    valuesI[j]=setNonZeros.get(keys[j]).doubleValue();
  }
  domain=e;
}
