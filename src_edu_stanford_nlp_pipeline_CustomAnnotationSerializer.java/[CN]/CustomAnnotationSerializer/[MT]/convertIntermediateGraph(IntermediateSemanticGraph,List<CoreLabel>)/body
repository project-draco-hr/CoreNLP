{
  SemanticGraph graph=new SemanticGraph();
  Map<Integer,IndexedWord> nodes=new HashMap<Integer,IndexedWord>();
  for (  IntermediateNode in : ig.nodes) {
    CoreLabel token=sentence.get(in.index - 1);
    IndexedWord word=new IndexedWord(in.docId,in.sentIndex,in.index,token);
    word.set(ValueAnnotation.class,word.get(TextAnnotation.class));
    if (in.copyAnnotation >= 0) {
      word.set(CopyAnnotation.class,in.copyAnnotation);
    }
    nodes.put(word.index(),word);
  }
  for (  IndexedWord node : nodes.values()) {
    graph.addVertex(node);
  }
  for (  IntermediateEdge ie : ig.edges) {
    IndexedWord source=nodes.get(ie.source);
    assert(source != null);
    IndexedWord target=nodes.get(ie.target);
    assert(target != null);
synchronized (LOCK) {
      GrammaticalRelation rel=GrammaticalRelation.valueOf(ie.dep);
      graph.addEdge(source,target,rel,1.0,ie.isExtra);
    }
  }
  if (!graph.isEmpty()) {
    graph.resetRoots();
  }
  return graph;
}
