{
  if (graph == null) {
    pw.println();
    pw.println();
    return;
  }
  boolean outputHeader=false;
  for (  IndexedWord node : graph.vertexSet()) {
    if (!outputHeader) {
      String docId=node.get(CoreAnnotations.DocIDAnnotation.class);
      if (docId != null && docId.length() > 0)       pw.print(docId);
 else       pw.print("-");
      pw.print("\t");
      pw.print(node.get(CoreAnnotations.SentenceIndexAnnotation.class));
      outputHeader=true;
    }
    pw.print("\t");
    pw.print(node.index());
    if (node.containsKey(CoreAnnotations.CopyAnnotation.class)) {
      pw.print("-");
      pw.print(node.get(CoreAnnotations.CopyAnnotation.class));
    }
    if (graph.getRoots().contains(node)) {
      if (node.containsKey(CoreAnnotations.CopyAnnotation.class)) {
        pw.print("-R");
      }
 else {
        pw.print("-0-R");
      }
    }
  }
  pw.println();
  boolean first=true;
  for (  SemanticGraphEdge edge : graph.edgeIterable()) {
    if (!first)     pw.print("\t");
    String rel=edge.getRelation().toString();
    rel=rel.replaceAll("\\s+","");
    pw.print(rel);
    pw.print(" ");
    pw.print(edge.getSource().index());
    pw.print(" ");
    pw.print(edge.getTarget().index());
    if (edge.isExtra() || edge.getSource().copyCount() > 0 || edge.getTarget().copyCount() > 0) {
      pw.print(" ");
      pw.print(edge.isExtra());
      pw.print(" ");
      pw.print(edge.getSource().copyCount());
      pw.print(" ");
      pw.print(edge.getTarget().copyCount());
    }
    first=false;
  }
  pw.println();
}
