{
  List<CoreMap> sentences=conllDoc.getAnnotation().get(CoreAnnotations.SentencesAnnotation.class);
  List<List<Mention>> allGoldMentions=new ArrayList<>();
  CollectionValuedMap<String,CoreMap> corefChainMap=conllDoc.getCorefChainMap();
  for (int i=0; i < sentences.size(); i++) {
    allGoldMentions.add(new ArrayList<>());
  }
  int maxCorefClusterId=-1;
  for (  String corefIdStr : corefChainMap.keySet()) {
    int id=Integer.parseInt(corefIdStr);
    if (id > maxCorefClusterId) {
      maxCorefClusterId=id;
    }
  }
  int newMentionID=maxCorefClusterId + 1;
  for (  String corefIdStr : corefChainMap.keySet()) {
    int id=Integer.parseInt(corefIdStr);
    int clusterMentionCnt=0;
    for (    CoreMap m : corefChainMap.get(corefIdStr)) {
      clusterMentionCnt++;
      Mention mention=new Mention();
      mention.goldCorefClusterID=id;
      if (clusterMentionCnt == 1) {
        mention.mentionID=id;
        mention.originalRef=-1;
      }
 else {
        mention.mentionID=newMentionID;
        mention.originalRef=id;
        newMentionID++;
      }
      if (maxID < mention.mentionID)       maxID=mention.mentionID;
      int sentIndex=m.get(CoreAnnotations.SentenceIndexAnnotation.class);
      CoreMap sent=sentences.get(sentIndex);
      mention.startIndex=m.get(CoreAnnotations.TokenBeginAnnotation.class) - sent.get(CoreAnnotations.TokenBeginAnnotation.class);
      mention.endIndex=m.get(CoreAnnotations.TokenEndAnnotation.class) - sent.get(CoreAnnotations.TokenBeginAnnotation.class);
      mention.originalSpan=m.get(CoreAnnotations.TokensAnnotation.class);
      mention.dependency=sentences.get(sentIndex).get(SemanticGraphCoreAnnotations.EnhancedDependenciesAnnotation.class);
      allGoldMentions.get(sentIndex).add(mention);
    }
  }
  return allGoldMentions;
}
