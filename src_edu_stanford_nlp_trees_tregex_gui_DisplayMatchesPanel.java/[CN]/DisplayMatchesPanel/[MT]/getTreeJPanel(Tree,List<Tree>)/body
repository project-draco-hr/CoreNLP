{
  final ScrollableTreeJPanel treeJP=new ScrollableTreeJPanel(SwingConstants.CENTER,SwingConstants.TOP);
  treeJP.setFontName(fontName);
  treeJP.setFontSize(fontSize);
  treeJP.setDefaultColor(defaultColor);
  treeJP.setMatchedColor(matchedColor);
  treeJP.setTree(t);
  treeJP.setMatchedParts(matchedParts);
  treeJP.setBackground(Color.WHITE);
  treeJP.setFocusable(true);
  final JPopupMenu treePopup=new JPopupMenu();
  JMenuItem copy=new JMenuItem("Copy");
  copy.setActionCommand((String)TransferHandler.getCopyAction().getValue(Action.NAME));
  copy.addActionListener(new TregexGUI.TransferActionListener());
  int mask=TregexGUI.isMacOSX() ? InputEvent.META_MASK : InputEvent.CTRL_MASK;
  copy.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C,mask));
  treePopup.add(copy);
  treeJP.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      treeJP.requestFocusInWindow();
    }
    private void maybeShowPopup(    MouseEvent e){
      if (e.isPopupTrigger())       treePopup.show(e.getComponent(),e.getX(),e.getY());
    }
    @Override public void mousePressed(    MouseEvent e){
      maybeShowPopup(e);
    }
    @Override public void mouseReleased(    MouseEvent e){
      maybeShowPopup(e);
    }
  }
);
  DisplayMouseMotionAdapter d=new DisplayMouseMotionAdapter();
  treeJP.addMouseMotionListener(d);
  treeJP.addMouseListener(d);
  treeJP.setTransferHandler(new DisplayTransferHandler());
  InputMap imap=treeJP.getInputMap();
  imap.put(KeyStroke.getKeyStroke("ctrl C"),TransferHandler.getCopyAction().getValue(Action.NAME));
  ActionMap map=treeJP.getActionMap();
  map.put(TransferHandler.getCopyAction().getValue(Action.NAME),TransferHandler.getCopyAction());
  return treeJP;
}
