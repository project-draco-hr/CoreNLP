{
  double p=0.0;
  for (int i=0; i < entities.length; i++) {
    Entity entity=entities[i];
    if ((i == 0 || entities[i - 1] != entity) && entity != null) {
      int length=entity.words.size();
      String tag1=classIndex.get(entity.type);
      int[] other=entities[i].otherOccurrences;
      for (int j=0; j < other.length; j++) {
        if (entity.words.size() > 0 && entities[other[j]] == null) {
          p-=penalty8;
          continue;
        }
        Entity otherEntity=entities[other[j]];
        if (otherEntity == null) {
          continue;
        }
        int oLength=otherEntity.words.size();
        String tag2=classIndex.get(otherEntity.type);
        boolean exact=false;
        int[] oOther=otherEntity.otherOccurrences;
        for (int k=0; k < oOther.length; k++) {
          if (oOther[k] == i) {
            exact=true;
            break;
          }
        }
        if (exact) {
          if (length != oLength) {
            if (tag1.equals(tag2)) {
              p-=Math.abs(oLength - length) * penalty1;
            }
 else             if (!(tag1.equals(ORG) && tag2.equals(LOC)) && !(tag2.equals(LOC) && tag1.equals(ORG))) {
              p-=(oLength + length) * penalty1;
            }
          }
          if (tag1.equals(tag2)) {
          }
 else           if ((tag1.equals(ORG) && tag2.equals(LOC)) || (tag1.equals(LOC) && tag2.equals(ORG))) {
            p-=length * penalty11;
          }
 else {
            p-=length * penalty3;
          }
        }
 else {
          if (tag1.equals(tag2)) {
          }
 else           if (tag1.equals(LOC) && tag2.equals(ORG)) {
          }
 else           if ((tag1.equals(MISC) && tag2.equals(ORG)) || (tag1.equals(LOC) && tag2.equals(MISC))) {
            p-=length * penalty4;
          }
 else           if (tag1.equals(MISC) && tag2.equals(LOC)) {
            p-=length * penalty5;
          }
 else {
            p-=length * penalty6;
          }
        }
      }
    }
  }
  return p;
}
