{
  assertEquals(NaturalLogicRelation.EQUIVALENT,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.EQUIVALENT));
  assertEquals(NaturalLogicRelation.REVERSE_ENTAILMENT,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.FORWARD_ENTAILMENT));
  assertEquals(NaturalLogicRelation.FORWARD_ENTAILMENT,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.REVERSE_ENTAILMENT));
  assertEquals(NaturalLogicRelation.INDEPENDENCE,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.NEGATION));
  assertEquals(NaturalLogicRelation.INDEPENDENCE,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.ALTERNATION));
  assertEquals(NaturalLogicRelation.INDEPENDENCE,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.COVER));
  assertEquals(NaturalLogicRelation.INDEPENDENCE,multiplicativeAntiMultiplicative.projectLexicalRelation(NaturalLogicRelation.INDEPENDENCE));
}
