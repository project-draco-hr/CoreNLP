{
  if (args.length > 0 && args[0].equals("redwood")) {
    Redwood.log(Redwood.DBG,"at the top");
    Redwood.startTrack("Adaptor test controlled by redwood");
    Logger topLogger=Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
    topLogger.warning("I'm warning you!");
    topLogger.severe("Now I'm using my severe voice.");
    topLogger.info("FYI");
    Redwood.log(Redwood.DBG,"adapting");
    JavaUtilLoggingAdaptor.adapt();
    topLogger.warning("I'm warning you in Redwood!");
    JavaUtilLoggingAdaptor.adapt();
    topLogger.severe("Now I'm using my severe voice in Redwood!");
    topLogger.info("FYI: Redwood rocks");
    topLogger.setLevel(Level.OFF);
    topLogger.severe("We shouldn't see this message.");
    Redwood.log(Redwood.DBG,"at the bottom");
    Redwood.endTrack("Adaptor test controlled by redwood");
  }
 else {
    Logger topLogger=Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
    Logger logger=Logger.getLogger(JavaUtilLoggingAdaptor.class.getName());
    topLogger.info("Starting test");
    logger.log(Level.INFO,"Hello from the class logger");
    Redwood.log("Hello from Redwood!");
    RedwoodConfiguration.empty().rootHandler(RedirectOutputHandler.fromJavaUtilLogging(topLogger)).apply();
    Redwood.log("Hello from Redwood -> Java!");
    Redwood.log("Hello from Redwood -> Java again!");
    logger.log(Level.INFO,"Hello again from the class logger");
    Redwood.startTrack("a track");
    Redwood.log("Inside a track");
    logger.log(Level.INFO,"Hello a third time from the class logger");
    Redwood.endTrack("a track");
    logger.log(Level.INFO,"Hello a fourth time from the class logger");
  }
}
