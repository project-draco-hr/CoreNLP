{
  Set<String> labels=classifier.labels();
  String background=classifier.backgroundSymbol();
  List<List<CoreMap>> sentences=classifier.classify(input);
  Map<String,Color> tagToColorMap=NERGUI.makeTagToColorMap(labels,background);
  StringBuilder result=new StringBuilder();
  int lastEndOffset=0;
  for (  List<CoreMap> sentence : sentences) {
    for (    CoreMap word : sentence) {
      int beginOffset=word.get(CharacterOffsetBeginAnnotation.class);
      int endOffset=word.get(CharacterOffsetEndAnnotation.class);
      String answer=word.get(AnswerAnnotation.class);
      if (beginOffset > lastEndOffset) {
        result.append(StringEscapeUtils.escapeHtml(input.substring(lastEndOffset,beginOffset)));
      }
      if (!background.equals(answer)) {
        Color color=tagToColorMap.get(answer);
        result.append("<span style=\"color:#ffffff;background:" + NERGUI.colorToHTML(color) + "\">");
      }
      result.append(StringEscapeUtils.escapeHtml(input.substring(beginOffset,endOffset)));
      if (!background.equals(answer)) {
        result.append("</span>");
      }
      lastEndOffset=endOffset;
    }
  }
  if (lastEndOffset < input.length()) {
    result.append(StringEscapeUtils.escapeHtml(input.substring(lastEndOffset)));
  }
  result.append("<br><br>");
  result.append("Potential tags:");
  for (  String label : tagToColorMap.keySet()) {
    result.append("<br>&nbsp;&nbsp;");
    Color color=tagToColorMap.get(label);
    result.append("<span style=\"color:#ffffff;background:" + NERGUI.colorToHTML(color) + "\">");
    result.append(StringEscapeUtils.escapeHtml(label));
    result.append("</span>");
  }
  out.print(result.toString());
}
