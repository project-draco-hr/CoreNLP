{
  ClassicCounter<Subcategory> result=new ClassicCounter<Subcategory>();
  s=new ArrayList<String>(s);
  s.add(Lexicon.BOUNDARY);
  parser.parse(s);
  double biggest=Double.NEGATIVE_INFINITY;
  for (int i=0; i < Subcategory.SUBCATEGORIES.size(); i++) {
    String goalStr="ROOT_" + i;
    double logProbOfSequence=Double.NEGATIVE_INFINITY;
    logProbOfSequence=parser.getSentenceProbability(goalStr);
    if (logProbOfSequence > biggest) {
      biggest=logProbOfSequence;
    }
    result.incrementCount(Subcategory.SUBCATEGORIES.get(i),logProbOfSequence);
  }
  if (biggest == Double.NEGATIVE_INFINITY) {
    throw new RuntimeException("No parses found for sentence: " + s);
  }
  return result;
}
