{
  List<List<Integer>> partition=new ArrayList<List<Integer>>();
  List<Integer> nodes=new ArrayList<Integer>(graph.keySet());
  Collections.sort(nodes,new Comparator<Integer>(){
    public int compare(    Integer a,    Integer b){
      return graph.get(b).size() - graph.get(a).size();
    }
  }
);
  Set<Integer> contigent=new HashSet<Integer>();
  Set<Integer> colored=new HashSet<Integer>();
  while (!nodes.isEmpty()) {
    contigent.clear();
    colored.clear();
    for (    Integer node : nodes) {
      if (!contigent.contains(node)) {
        colored.add(node);
        contigent.addAll(graph.get(node));
      }
    }
    partition.add(new ArrayList<Integer>(colored));
    nodes.removeAll(colored);
  }
  if (VERBOSE) {
    System.err.println("Graph successfully colored using " + partition.size() + " colors");
  }
  return partition;
}
