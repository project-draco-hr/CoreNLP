{
  int docSize=document.size();
  int[][][] data=new int[docSize][windowSize][];
  int[] labels=new int[docSize];
  if (flags.useReverse) {
    Collections.reverse(document);
  }
  testIndex=new HashIndex<String>();
  testIndex.addAll(featureIndex.objectsList());
  for (int j=0; j < docSize; j++) {
    CRFDatum<List<String>,CRFLabel> d=makeDatum(document,j,featureFactory);
    List<List<String>> features=d.asFeatures();
    for (int k=0, fSize=features.size(); k < fSize; k++) {
      Collection<String> cliqueFeatures=features.get(k);
      data[j][k]=new int[cliqueFeatures.size()];
      Iterator<String> iter=cliqueFeatures.iterator();
      int m=0;
      while (iter.hasNext()) {
        String feature=iter.next();
        int index=featureIndex.indexOf(feature);
        if (index >= 0) {
          data[j][k][m]=index;
          m++;
        }
 else         if (testIndex.indexOf(feature) < 0) {
          testIndex.add(feature);
        }
      }
      if (m < data[j][k].length) {
        int[] f=new int[m];
        System.arraycopy(data[j][k],0,f,0,m);
        data[j][k]=f;
      }
    }
    CoreLabel wi=document.get(j);
    labels[j]=classIndex.indexOf(wi.get(AnswerAnnotation.class));
  }
  System.err.println("TESTINDEX: " + testIndex.size());
  if (flags.useReverse) {
    Collections.reverse(document);
  }
  return new Triple<int[][][],int[],double[][][]>(data,labels,null);
}
