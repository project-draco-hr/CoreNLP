{
  Collection<String> features=new ArrayList<String>();
  CoreLabel c=cInfo.get(loc);
  CoreLabel n=cInfo.get(loc + 1);
  CoreLabel n2=cInfo.get(loc + 2);
  CoreLabel p=cInfo.get(loc - 1);
  CoreLabel p2=cInfo.get(loc - 2);
  String charc=c.get(CoreAnnotations.CharAnnotation.class);
  String charn=n.get(CoreAnnotations.CharAnnotation.class);
  String charn2=n2.get(CoreAnnotations.CharAnnotation.class);
  String charp=p.get(CoreAnnotations.CharAnnotation.class);
  String charp2=p2.get(CoreAnnotations.CharAnnotation.class);
  features.add(charc + "-c");
  features.add(charn + "-n1");
  features.add(charn2 + "-n2");
  features.add(charp + "-p");
  features.add(charp2 + "-p2");
  if (charc.length() > 1) {
    features.add("length");
  }
  boolean seenPunc=false;
  boolean seenDigit=false;
  for (int i=0; i < charc.length(); ++i) {
    char charcC=charc.charAt(i);
    if (!seenPunc && Characters.isPunctuation(charcC)) {
      seenPunc=true;
      features.add("haspunc");
    }
    if (!seenDigit && Character.isDigit(charcC)) {
      seenDigit=true;
      features.add("hasdigit");
    }
    String cuBlock=Characters.unicodeBlockStringOf(charcC);
    features.add(cuBlock + "-uBlock");
    String cuType=String.valueOf(Character.getType(charcC));
    features.add(cuType + "-uType");
  }
  String word=c.word();
  int index=c.index();
  features.add(Math.min(MAX_BEFORE,index) + "-before");
  features.add(Math.min(MAX_AFTER,word.length() - charc.length() - index) + "-after");
  features.add(Math.min(MAX_LENGTH,word.length()) + "-length");
  features.add("cliqueC");
  return features;
}
