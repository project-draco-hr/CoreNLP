{
  if (isRoot)   return (negDesc ? !sg.getRoots().contains(node) : sg.getRoots().contains(node));
  if (isEmpty)   return (negDesc ? !node.equals(IndexedWord.NO_WORD) : node.equals(IndexedWord.NO_WORD));
  for (  Map.Entry<String,Pattern> attr : attributes.entrySet()) {
    String key=attr.getKey();
    String nodeValue;
    Object value=node.get(AnnotationLookup.getCoreKey(key).coreKey);
    if (value == null)     nodeValue=null;
 else     nodeValue=value.toString();
    if (nodeValue == null)     return negDesc;
    Pattern valuePattern=attr.getValue();
    boolean matches=false;
    if (ignoreCase) {
      if (Pattern.compile(valuePattern.pattern(),Pattern.CASE_INSENSITIVE).matcher(nodeValue).matches())       matches=true;
    }
 else {
      if (nodeValue.matches(valuePattern.pattern()))       matches=true;
    }
    if (!matches) {
      return negDesc;
    }
  }
  return !negDesc;
}
