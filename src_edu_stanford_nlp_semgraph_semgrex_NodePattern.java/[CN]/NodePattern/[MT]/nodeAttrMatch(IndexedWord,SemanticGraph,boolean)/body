{
  if (isRoot)   return (negDesc ? !sg.getRoots().contains(node) : sg.getRoots().contains(node));
  if (isEmpty)   return (negDesc ? !node.equals(IndexedWord.NO_WORD) : node.equals(IndexedWord.NO_WORD));
  for (  Map.Entry<String,Pair<Object,Object>> attr : attributes.entrySet()) {
    String key=attr.getKey();
    String nodeValue;
    Class c=Env.lookupAnnotationKey(env,key);
    Object value=node.get(c);
    if (value == null)     nodeValue=null;
 else     nodeValue=value.toString();
    if (nodeValue == null)     return negDesc;
    Object toMatch=ignoreCase ? attr.getValue().second : attr.getValue().first;
    boolean matches;
    if (toMatch instanceof Boolean) {
      matches=((Boolean)toMatch);
    }
 else     if (toMatch instanceof String) {
      if (ignoreCase) {
        matches=nodeValue.equalsIgnoreCase(toMatch.toString());
      }
 else {
        matches=nodeValue.equals(toMatch.toString());
      }
    }
 else     if (toMatch instanceof Pattern) {
      matches=((Pattern)toMatch).matcher(nodeValue).matches();
    }
 else {
      throw new IllegalStateException("Unknown matcher type: " + toMatch + " (of class + "+ toMatch.getClass()+ ")");
    }
    if (!matches) {
      return negDesc;
    }
  }
  return !negDesc;
}
