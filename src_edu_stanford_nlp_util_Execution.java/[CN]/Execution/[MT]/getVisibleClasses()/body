{
  List<Class<?>> classes=new ArrayList<>();
  String pathSep=System.getProperty("path.separator");
  String[] cp=System.getProperties().getProperty("java.class.path",null).split(pathSep);
  for (  String entry : cp) {
    log("Checking cp " + entry);
    if (entry.equals(".") || entry.trim().length() == 0) {
      continue;
    }
    File f=new File(entry);
    if (f.isDirectory()) {
      LazyFileIterator iter=new LazyFileIterator(f,".*class$");
      while (iter.hasNext()) {
        Class<?> clazz=filePathToClass(entry,iter.next().getPath());
        if (clazz != null) {
          classes.add(clazz);
        }
      }
    }
 else     if (!isIgnored(entry)) {
      try {
        JarFile jar=new JarFile(f);
        Enumeration<JarEntry> e=jar.entries();
        while (e.hasMoreElements()) {
          JarEntry jarEntry=e.nextElement();
          String clazz=jarEntry.getName();
          if (clazz.matches(".*class$")) {
            clazz=clazz.substring(0,clazz.length() - 6).replaceAll("/",".");
            try {
              classes.add(Class.forName(clazz,false,ClassLoader.getSystemClassLoader()));
            }
 catch (            ClassNotFoundException ex) {
              warn("Could not load class in jar: " + f + " at path: "+ clazz);
            }
catch (            NoClassDefFoundError ex) {
              debug("Could not scan class: " + clazz + " (in jar: "+ f+ ")");
            }
          }
        }
      }
 catch (      IOException e) {
        warn("Could not open jar file: " + f + "(are you sure the file exists?)");
      }
    }
 else {
    }
  }
  return classes.toArray(new Class<?>[classes.size()]);
}
