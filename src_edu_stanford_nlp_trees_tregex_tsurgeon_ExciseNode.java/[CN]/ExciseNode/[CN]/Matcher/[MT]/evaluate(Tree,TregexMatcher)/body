{
  Tree topNode=childMatcher[0].evaluate(tree,tregex);
  Tree bottomNode=childMatcher[1].evaluate(tree,tregex);
  if (Tsurgeon.verbose) {
    System.err.println("Excising...original tree:");
    tree.pennPrint(System.err);
    System.err.println("top: " + topNode + "\nbottom:"+ bottomNode);
  }
  if (topNode == tree) {
    if (bottomNode.children().length == 1) {
      return bottomNode.children()[0];
    }
 else {
      return null;
    }
  }
  Tree parent=topNode.parent(tree);
  if (Tsurgeon.verbose)   System.err.println("Parent: " + parent);
  int i=Trees.objectEqualityIndexOf(parent,topNode);
  parent.removeChild(i);
  for (  Tree child : bottomNode.children()) {
    parent.addChild(i,child);
    i++;
  }
  if (Tsurgeon.verbose)   tree.pennPrint(System.err);
  return tree;
}
