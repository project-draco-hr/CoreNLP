{
  Collection<TypedDependency> newTypedDeps=new ArrayList<>();
  Map<IndexedWord,Set<TypedDependency>> map=Generics.newHashMap();
  for (  TypedDependency typedDep : list) {
    if (!map.containsKey(typedDep.gov())) {
      map.put(typedDep.gov(),Generics.<TypedDependency>newHashSet());
    }
    map.get(typedDep.gov()).add(typedDep);
  }
  for (  TypedDependency td1 : list) {
    if (td1.reln() != GrammaticalRelation.KILL) {
      IndexedWord td1Dep=td1.dep();
      String td1DepPOS=td1Dep.tag();
      Set<TypedDependency> possibles=map.get(td1Dep);
      if (possibles != null) {
        for (        TypedDependency td2 : possibles) {
          if (td1.reln() == DEPENDENT && td2.reln() == DEPENDENT && td1DepPOS.equals("P")) {
            GrammaticalRelation td3reln=ChineseGrammaticalRelations.valueOf(td1Dep.value());
            if (td3reln == null) {
              td3reln=GrammaticalRelation.valueOf(Language.Chinese,td1Dep.value());
            }
            TypedDependency td3=new TypedDependency(td3reln,td1.gov(),td2.dep());
            newTypedDeps.add(td3);
            td1.setReln(GrammaticalRelation.KILL);
            td2.setReln(GrammaticalRelation.KILL);
          }
        }
        if (td1.reln().equals(GrammaticalRelation.KILL)) {
          for (          TypedDependency td2 : possibles) {
            if (!td2.reln().equals(GrammaticalRelation.KILL)) {
              td2.setGov(td1.gov());
            }
          }
        }
      }
    }
  }
  for (  TypedDependency td : list) {
    if (!td.reln().equals(GrammaticalRelation.KILL)) {
      newTypedDeps.add(td);
    }
  }
  list.clear();
  list.addAll(newTypedDeps);
}
