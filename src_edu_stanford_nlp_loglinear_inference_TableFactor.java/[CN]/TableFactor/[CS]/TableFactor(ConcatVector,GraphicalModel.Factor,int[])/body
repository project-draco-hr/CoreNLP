{
  super();
  assert(observations.length == factor.neigborIndices.length);
  int size=0;
  for (  int observation : observations)   if (observation == -1)   size++;
  neighborIndices=new int[size];
  dimensions=new int[size];
  int[] forwardPointers=new int[size];
  int[] factorAssignment=new int[factor.neigborIndices.length];
  int cursor=0;
  for (int i=0; i < factor.neigborIndices.length; i++) {
    if (observations[i] == -1) {
      neighborIndices[cursor]=factor.neigborIndices[i];
      dimensions[cursor]=factor.featuresTable.getDimensions()[i];
      forwardPointers[cursor]=i;
      cursor++;
    }
 else     factorAssignment[i]=observations[i];
  }
  assert(cursor == size);
  values=new double[combinatorialNeighborStatesCount()];
  for (  int[] assn : this) {
    for (int i=0; i < assn.length; i++) {
      factorAssignment[forwardPointers[i]]=assn[i];
    }
    setAssignmentLogValue(assn,factor.featuresTable.getAssignmentValue(factorAssignment).get().dotProduct(weights));
  }
}
