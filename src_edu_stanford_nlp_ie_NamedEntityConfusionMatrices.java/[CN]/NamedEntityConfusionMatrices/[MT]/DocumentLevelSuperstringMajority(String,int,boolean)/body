{
  boolean entityLevel=true;
  List<HashMap<String,int[]>> hashMapsofDocuments=Generics.newArrayList();
  List<Map<String,List<String>>> hashMapsofSubtoSuperStrings=Generics.newArrayList();
  BufferedReader br=new BufferedReader(new FileReader(file));
  while (true) {
    HashMap<String,int[]> entities=namedEntitiesLabelCounts(br,false,1,3,ignoreCase,entityLevel);
    if (entities == null)     break;
    hashMapsofDocuments.add(entities);
    hashMapsofSubtoSuperStrings.add(subStringToSuperStringIndex(entities,superStringPosition));
  }
  br.close();
  int tokenColumn=1;
  int labelColumn=3;
  br=new BufferedReader(new FileReader(file));
  String line;
  String entitySoFar="", prevEntityLabel="";
  int lineNo=0;
  int docNo=0;
  while ((line=br.readLine()) != null) {
    lineNo++;
    String word=entryAtColumnNumber(line,tokenColumn);
    String currEntityLabel=entryAtColumnNumber(line,labelColumn);
    if (currEntityLabel.equals("O") || currEntityLabel.equals("")) {
      if (lineNo > 1) {
        printMajoritySuperStringIndexed(hashMapsofDocuments.get(docNo),hashMapsofSubtoSuperStrings.get(docNo),entitySoFar,prevEntityLabel,ignoreCase);
      }
      entitySoFar=word;
      prevEntityLabel=currEntityLabel;
    }
 else     if (sameEntity(prevEntityLabel,currEntityLabel,entityLevel)) {
      entitySoFar=entitySoFar + "~" + word;
      prevEntityLabel=currEntityLabel;
    }
 else {
      if (lineNo > 1) {
        printMajoritySuperStringIndexed(hashMapsofDocuments.get(docNo),hashMapsofSubtoSuperStrings.get(docNo),entitySoFar,prevEntityLabel,ignoreCase);
      }
      entitySoFar=word;
      prevEntityLabel=currEntityLabel;
    }
    if (line.trim().equals(""))     docNo++;
  }
  printMajoritySuperStringIndexed(hashMapsofDocuments.get(hashMapsofDocuments.size() - 1),hashMapsofSubtoSuperStrings.get(hashMapsofDocuments.size() - 1),entitySoFar,prevEntityLabel,ignoreCase);
  br.close();
}
