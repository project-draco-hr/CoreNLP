{
  int label;
  if (entityLabel.equals("")) {
    System.out.println(entityLabel);
    return;
  }
  int[] totalSubstringCounts=new int[5];
  String[] eTokens=entityTokens.split("~");
  for (int i=0; i < eTokens.length; i++) {
    String sub="";
    for (int j=i; j < eTokens.length; j++) {
      if (j > i)       sub=sub + "~";
      sub=sub + eTokens[j];
      if (entityTokens.equals(sub))       continue;
      int[] counts=(int[])entities.get(sub);
      if (counts != null) {
        for (int k=0; k < totalSubstringCounts.length; k++)         totalSubstringCounts[k]+=counts[k];
      }
    }
  }
  int max=0;
  int maxIndex=0;
  for (int i=0; i < 5; i++)   if (totalSubstringCounts[i] > max) {
    max=totalSubstringCounts[i];
    maxIndex=i;
  }
  int entityNum=labelToNum(totalSubstringCounts,entityLabel);
  if (totalSubstringCounts[entityNum] == max)   label=entityNum;
 else   label=maxIndex;
  StringTokenizer st=new StringTokenizer(entityTokens,"~");
  int numTokens=st.countTokens();
  for (int i=0; i < numTokens; i++) {
    if (numToName(label).equalsIgnoreCase("O"))     System.out.println(numToName(label));
 else     System.out.println("I-" + numToName(label));
  }
}
