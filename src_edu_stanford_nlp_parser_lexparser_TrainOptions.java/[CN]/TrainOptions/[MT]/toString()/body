{
  return ("Train parameters:" + " smooth=" + smoothing + " PA="+ PA+ " GPA="+ gPA+ " selSplit="+ selectiveSplit+ " ("+ selectiveSplitCutOff+ ((deleteSplitters != null) ? ("; deleting " + deleteSplitters) : "")+ ")"+ " mUnary="+ markUnary+ " mUnaryTags="+ markUnaryTags+ " sPPT="+ splitPrePreT+ " tagPA="+ tagPA+ " tagSelSplit="+ tagSelectiveSplit+ " ("+ tagSelectiveSplitCutOff+ ")"+ " rightRec="+ rightRec+ " leftRec="+ leftRec+ " collinsPunc="+ collinsPunc+ " markov="+ markovFactor+ " mOrd="+ markovOrder+ " hSelSplit="+ hSelSplit+ " ("+ HSEL_CUT+ ")"+ " compactGrammar="+ compactGrammar()+ " postPA="+ postPA+ " postGPA="+ postGPA+ " selPSplit="+ selectivePostSplit+ " ("+ selectivePostSplitCutOff+ ")"+ " tagSelPSplit="+ tagSelectivePostSplit+ " ("+ tagSelectivePostSplitCutOff+ ")"+ " postSplitWithBase="+ postSplitWithBaseCategory+ " fractionBeforeUnseenCounting="+ fractionBeforeUnseenCounting+ " openClassTypesThreshold="+ openClassTypesThreshold+ " preTransformer="+ preTransformer+ " taggedFiles="+ taggedFiles+ " predictSplits="+ predictSplits+ " splitCount="+ splitCount+ " splitRecombineRate="+ splitRecombineRate+ " simpleBinarizedLabels="+ simpleBinarizedLabels+ " noRebinarization="+ noRebinarization+ " trainingThreads="+ trainingThreads+ " dvKBest="+ dvKBest+ " dvIterations="+ dvIterations+ " dvBatchSize="+ dvBatchSize+ " regCost="+ regCost+ " qnIterationsPerBatch="+ qnIterationsPerBatch+ " qnEstimates="+ qnEstimates+ " qnTolerance="+ qnTolerance+ " debugOutputSeconds="+ debugOutputSeconds+ " dvSeed="+ dvSeed+ " learningRate="+ learningRate+ " deltaMargin="+ deltaMargin+ " unknownNumberVector="+ unknownNumberVector+ " unknownDashedWordVectors="+ unknownDashedWordVectors+ " unknownCapsVector="+ unknownCapsVector+ " unknownChineseYearVector="+ unknownChineseYearVector+ " unknownChineseNumberVector="+ unknownChineseNumberVector+ " unknownChinesePercentVector="+ unknownChinesePercentVector+ " dvSimplifiedModel="+ dvSimplifiedModel+ " scalingForInit="+ scalingForInit+ " maxTrainTimeSeconds="+ maxTrainTimeSeconds+ " unkWord="+ unkWord+ " lowercaseWordVectors="+ lowercaseWordVectors+ " transformMatrixType="+ transformMatrixType+ " useContextWords="+ useContextWords);
}
