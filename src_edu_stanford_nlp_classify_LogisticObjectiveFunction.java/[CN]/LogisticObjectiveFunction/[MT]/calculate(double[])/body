{
  if (dataValues != null) {
    calculateRVF(x);
    return;
  }
  value=0.0;
  Arrays.fill(derivative,0.0);
  for (int d=0; d < data.length; d++) {
    int[] features=data[d];
    double sum=0;
    for (    int feature1 : features) {
      sum+=x[feature1];
    }
    double expSum, derivativeIncrement;
    if (labels[d] == 0) {
      expSum=Math.exp(sum);
      derivativeIncrement=1.0 / (1.0 + (1.0 / expSum));
    }
 else {
      expSum=Math.exp(-sum);
      derivativeIncrement=-1.0 / (1.0 + (1.0 / expSum));
    }
    if (dataweights == null) {
      value+=Math.log(1.0 + expSum);
    }
 else {
      value+=Math.log(1.0 + expSum) * dataweights[d];
      derivativeIncrement*=dataweights[d];
    }
    for (    int feature : features) {
      derivative[feature]+=derivativeIncrement;
    }
  }
  value+=prior.compute(x,derivative);
}
