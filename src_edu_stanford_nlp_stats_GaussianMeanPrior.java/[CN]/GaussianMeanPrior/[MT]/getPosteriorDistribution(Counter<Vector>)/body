{
  double n=evidence.totalCount();
  if (n == 0.0) {
    return this;
  }
  double[] sampleMean=new double[mean.size()];
  for (  Vector x : evidence.keySet()) {
    if (x.size() != mean.size())     throw new RuntimeException("I am dist of dim " + mean.size() + " but you're giving me an x of size() "+ x.size());
    double count=evidence.getCount(x);
    for (int i=0; i < x.size(); i++) {
      sampleMean[i]+=(x.get(i) * count);
    }
  }
  for (int i=0; i < sampleMean.length; i++) {
    sampleMean[i]/=n;
  }
  Matrix postVar=precision.copy();
  postVar.add(n,likePrecision);
  postVar=invert(postVar);
  Vector m=mean.copy();
  precision.mult(mean,m);
  Vector barX=new DenseVector(sampleMean);
  likePrecision.mult(n,barX.copy(),barX);
  m.add(barX);
  postVar.mult(m.copy(),m);
  return new GaussianMeanPrior(m,postVar,likelihoodVar);
}
