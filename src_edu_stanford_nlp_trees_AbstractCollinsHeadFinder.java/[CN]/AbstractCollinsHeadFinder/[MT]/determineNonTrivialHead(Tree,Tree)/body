{
  Tree theHead=null;
  String motherCat=tlp.basicCategory(t.label().value());
  if (motherCat.startsWith("@")) {
    motherCat=motherCat.substring(1);
  }
  if (DEBUG) {
    log.info("Looking for head of " + t.label() + "; value is |"+ t.label().value()+ "|, "+ " baseCat is |"+ motherCat+ '|');
  }
  String[][] how=nonTerminalInfo.get(motherCat);
  Tree[] kids=t.children();
  if (how == null) {
    if (DEBUG) {
      log.info("Warning: No rule found for " + motherCat + " (first char: "+ motherCat.charAt(0)+ ')');
      log.info("Known nonterms are: " + nonTerminalInfo.keySet());
    }
    if (defaultRule != null) {
      if (DEBUG) {
        log.info("  Using defaultRule");
      }
      return traverseLocate(kids,defaultRule,true);
    }
 else {
      TreePrint printer=new TreePrint("penn");
      StringWriter buffer=new StringWriter();
      printer.printTree(t,new PrintWriter(buffer));
      throw new IllegalArgumentException("No head rule defined for " + motherCat + " using "+ this.getClass()+ " in "+ buffer.toString());
    }
  }
  for (int i=0; i < how.length; i++) {
    boolean lastResort=(i == how.length - 1);
    theHead=traverseLocate(kids,how[i],lastResort);
    if (theHead != null) {
      break;
    }
  }
  if (DEBUG) {
    log.info("  Chose " + theHead.label());
  }
  return theHead;
}
