{
  if (nonTerminalInfo == null) {
    throw new IllegalStateException("Classes derived from AbstractCollinsHeadFinder must create and fill HashMap nonTerminalInfo.");
  }
  if (t == null || t.isLeaf()) {
    throw new IllegalArgumentException("Can't return head of null or leaf Tree.");
  }
  if (DEBUG) {
    System.err.println("determineHead for " + t.value());
  }
  Tree[] kids=t.children();
  Tree theHead;
  if ((theHead=findMarkedHead(t)) != null) {
    if (DEBUG) {
      System.err.println("Find marked head method returned " + theHead.label() + " as head of "+ t.label());
    }
    return theHead;
  }
  if (kids.length == 1) {
    if (DEBUG) {
      System.err.println("Only one child determines " + kids[0].label() + " as head of "+ t.label());
    }
    return kids[0];
  }
  return determineNonTrivialHead(t,parent);
}
