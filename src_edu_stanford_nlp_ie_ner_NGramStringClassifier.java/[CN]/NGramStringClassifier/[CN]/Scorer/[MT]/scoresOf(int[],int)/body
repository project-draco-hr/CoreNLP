{
  tot++;
  int p=(100 * pos) / length();
  if (p > percent) {
    long secs2=System.currentTimeMillis();
    percent=p;
    System.err.println(p + "%   " + (num * 1000 / (secs2 - secs))+ " hits per sec, legal="+ ((100 * hit) / tot)+ "% [hit="+ hit+ ", tot="+ tot+ "]");
    num=0;
    secs=secs2;
  }
  String[] answers=new String[1 + leftWindow() + rightWindow()];
  String[] pre=new String[leftWindow()];
  for (int i=0; i < 1 + leftWindow() + rightWindow(); i++) {
    int absPos=pos - leftWindow() + i;
    answers[i]=tagIndex.get(tags[absPos]);
    LineInfo li=lineInfos.get(absPos);
    li.answer=answers[i];
    if (i < leftWindow()) {
      pre[i]=answers[i];
    }
  }
  double[] scores=new double[tagIndex.size()];
  if (!legalTags.contains(Arrays.asList(pre))) {
    Arrays.fill(scores,-1000);
    return scores;
  }
  num++;
  hit++;
  Datum<String,String> d=makeDatum(lineInfos,pos);
  Counter<String> c=classifier.scoresOf(d);
  if (false && justify) {
    System.out.println("Considering position " + pos + ", word is "+ (lineInfos.get(pos)).word);
    System.out.println("History: " + Arrays.asList(pre));
  }
  for (Iterator i=c.keySet().iterator(); i.hasNext(); ) {
    Object o=i.next();
    int t=tagIndex.indexOf(o.toString());
    if (t > -1) {
      int[] tA=getPossibleValues(pos);
      for (int j=0; j < tA.length; j++) {
        if (tA[j] == t) {
          scores[j]=c.getCount(o);
          if (false && justify) {
            System.out.println("Label " + o + " got score "+ scores[j]);
          }
        }
      }
    }
  }
  if (normalize) {
    double tot=Double.NEGATIVE_INFINITY;
    for (int i=0; i < scores.length; i++) {
      tot=addLPs(tot,scores[i]);
    }
    for (int i=0; i < scores.length; i++) {
      scores[i]-=tot;
    }
  }
  return scores;
}
