{
  Collection<TypedDependency> newTypedDeps=new ArrayList<>();
  for (  String[] mwp : MULTIWORD_PREPS) {
    newTypedDeps.clear();
    IndexedWord mwp1=null;
    IndexedWord governor=null;
    TypedDependency prep=null;
    TypedDependency dep=null;
    TypedDependency pobj=null;
    for (    TypedDependency td : list) {
      if (Math.abs(td.gov().index() - td.dep().index()) == 1 && td.gov().value().equalsIgnoreCase(mwp[1]) && td.dep().value().equalsIgnoreCase(mwp[0])) {
        mwp1=td.gov();
        dep=td;
      }
    }
    if (mwp1 == null) {
      continue;
    }
    for (    TypedDependency td1 : list) {
      if (td1.dep().equals(mwp1) && td1.reln() == PREPOSITIONAL_MODIFIER) {
        prep=td1;
        governor=prep.gov();
      }
    }
    if (prep == null) {
      continue;
    }
    for (    TypedDependency td2 : list) {
      if (td2.gov().equals(mwp1) && td2.reln() == PREPOSITIONAL_OBJECT) {
        pobj=td2;
        GrammaticalRelation gr=EnglishGrammaticalRelations.getPrep(mwp[0] + '_' + mwp[1]);
        newTypedDeps.add(new TypedDependency(gr,governor,pobj.dep()));
      }
      if (td2.gov().equals(mwp1) && td2.reln() == PREPOSITIONAL_COMPLEMENT) {
        pobj=td2;
        GrammaticalRelation gr=EnglishGrammaticalRelations.getPrepC(mwp[0] + '_' + mwp[1]);
        newTypedDeps.add(new TypedDependency(gr,governor,pobj.dep()));
      }
    }
    if (pobj == null) {
      return;
    }
    prep.setReln(KILL);
    dep.setReln(KILL);
    pobj.setReln(KILL);
    for (    TypedDependency td1 : list) {
      if (td1.reln() != KILL) {
        if (td1.gov().equals(mwp1)) {
          td1.setGov(governor);
        }
        if (!newTypedDeps.contains(td1)) {
          newTypedDeps.add(td1);
        }
      }
    }
    list.clear();
    list.addAll(newTypedDeps);
  }
}
