{
  List<TypedDependency> refs=new ArrayList<TypedDependency>();
  for (Iterator<TypedDependency> iter=list.iterator(); iter.hasNext(); ) {
    TypedDependency td=iter.next();
    if (td.reln() == REFERENT) {
      refs.add(td);
      iter.remove();
    }
  }
  for (  TypedDependency ref : refs) {
    TreeGraphNode dep=ref.dep();
    TreeGraphNode ant=ref.gov();
    for (    TypedDependency td : list) {
      if (td.dep() == dep && td.reln() != REFERENT && td.gov() != ant) {
        if (DEBUG)         System.err.print("referent: changing " + td);
        td.setDep(ant);
        if (DEBUG)         System.err.println(" to " + td);
      }
    }
  }
}
