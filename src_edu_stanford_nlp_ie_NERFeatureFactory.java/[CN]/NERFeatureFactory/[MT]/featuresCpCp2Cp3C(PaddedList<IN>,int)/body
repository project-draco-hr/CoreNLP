{
  CoreLabel c=cInfo.get(loc);
  CoreLabel p=cInfo.get(loc - 1);
  CoreLabel p2=cInfo.get(loc - 2);
  CoreLabel p3=cInfo.get(loc - 3);
  Collection<String> featuresCpCp2Cp3C=new ArrayList<String>();
  if (flags.useTaggySequences) {
    if (flags.useTags) {
      if (flags.maxLeft >= 3 && !flags.dontExtendTaggy) {
        featuresCpCp2Cp3C.add(p3.getString(PartOfSpeechAnnotation.class) + '-' + p2.getString(PartOfSpeechAnnotation.class)+ '-'+ p.getString(PartOfSpeechAnnotation.class)+ '-'+ c.getString(PartOfSpeechAnnotation.class)+ "-TTTS");
        if (flags.useTaggySequencesShapeInteraction) {
          featuresCpCp2Cp3C.add(p3.getString(PartOfSpeechAnnotation.class) + '-' + p2.getString(PartOfSpeechAnnotation.class)+ '-'+ p.getString(PartOfSpeechAnnotation.class)+ '-'+ c.getString(PartOfSpeechAnnotation.class)+ '-'+ c.get(ShapeAnnotation.class)+ "-TTTS-CS");
        }
      }
    }
    if (flags.useDistSim) {
      if (flags.maxLeft >= 3 && !flags.dontExtendTaggy) {
        featuresCpCp2Cp3C.add(p3.get(DistSimAnnotation.class) + '-' + p2.get(DistSimAnnotation.class)+ '-'+ p.get(DistSimAnnotation.class)+ '-'+ c.get(DistSimAnnotation.class)+ "-DISTSIM_TTTS1");
        if (flags.useTaggySequencesShapeInteraction) {
          featuresCpCp2Cp3C.add(p3.get(DistSimAnnotation.class) + '-' + p2.get(DistSimAnnotation.class)+ '-'+ p.get(DistSimAnnotation.class)+ '-'+ c.get(DistSimAnnotation.class)+ '-'+ c.get(ShapeAnnotation.class)+ "-DISTSIM_TTTS1-CS");
        }
      }
    }
  }
  if (flags.maxLeft >= 3) {
    if (flags.useLongSequences) {
      featuresCpCp2Cp3C.add("PPPSEQ");
    }
    if (flags.useBoundarySequences && getWord(p).equals(CoNLLDocumentReaderAndWriter.BOUNDARY)) {
      featuresCpCp2Cp3C.add("BNDRY-SPAN-PPPSEQ");
    }
  }
  return featuresCpCp2Cp3C;
}
