{
  for (int i=0; i < Math.min(keys.length,values.length); i++) {
    String key=keys[i];
    String value=values[i];
    KeyLookup lookup=AnnotationLookup.getCoreKey(key);
    if (lookup == null) {
      if (key != null) {
        throw new UnsupportedOperationException("Unknown key " + key);
      }
    }
 else {
      try {
        Class<?> valueClass=AnnotationLookup.getValueType(lookup.coreKey);
        if (valueClass.equals(String.class)) {
          this.set((Class<? extends CoreAnnotation>)lookup.coreKey,values[i]);
        }
 else         if (valueClass == Integer.class) {
          this.set((Class<? extends CoreAnnotation>)lookup.coreKey,Integer.parseInt(values[i]));
        }
 else         if (valueClass == Double.class) {
          this.set((Class<? extends CoreAnnotation>)lookup.coreKey,Double.parseDouble(values[i]));
        }
 else         if (valueClass == Long.class) {
          this.set((Class<? extends CoreAnnotation>)lookup.coreKey,Long.parseLong(values[i]));
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
        System.err.println("CORE: CoreLabel.initFromStrings: " + "Bad type for " + key + ". Value was: "+ value+ "; expected "+ AnnotationLookup.getValueType(lookup.coreKey));
      }
    }
  }
}
