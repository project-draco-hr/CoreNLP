{
  DirectedMultiGraph<Integer,String> g=new DirectedMultiGraph<Integer,String>();
  g.addVertex(1);
  g.addVertex(2);
  assertEquals(0,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  g.add(1,2,"foo");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(2));
  assertEquals(1,g.getInDegree(2));
  g.add(1,2,"bar");
  assertEquals(2,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(2));
  assertEquals(2,g.getInDegree(2));
  g.add(1,3,"foo");
  assertEquals(3,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(2));
  assertEquals(2,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.add(2,3,"foo");
  assertEquals(3,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(1,g.getOutDegree(2));
  assertEquals(2,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(2,g.getInDegree(3));
  g.removeVertex(2);
  assertEquals(1,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.add(2,1,"foo");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(1,g.getInDegree(1));
  assertEquals(1,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.add(2,1,"bar");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(2,g.getInDegree(1));
  assertEquals(2,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.add(2,1,"baz");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(3,g.getInDegree(1));
  assertEquals(3,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.removeEdge(2,1,"blah");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(3,g.getInDegree(1));
  assertEquals(3,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.removeEdge(2,1,"bar");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(2,g.getInDegree(1));
  assertEquals(2,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.removeEdges(2,1);
  assertEquals(1,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(0,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(0,g.getOutDegree(3));
  assertEquals(1,g.getInDegree(3));
  g.add(2,3,"bar");
  g.add(3,4,"bar");
  g.add(3,5,"bar");
  g.add(3,6,"bar");
  g.add(3,7,"bar");
  g.add(3,8,"bar");
  g.add(3,9,"bar");
  g.add(3,10,"bar");
  g.add(3,10,"foo");
  assertEquals(1,g.getOutDegree(1));
  assertEquals(0,g.getInDegree(1));
  assertEquals(1,g.getOutDegree(2));
  assertEquals(0,g.getInDegree(2));
  assertEquals(8,g.getOutDegree(3));
  assertEquals(2,g.getInDegree(3));
}
