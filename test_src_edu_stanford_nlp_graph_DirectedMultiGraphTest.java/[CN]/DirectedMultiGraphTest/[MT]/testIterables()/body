{
  DirectedMultiGraph<Integer,String> g=new DirectedMultiGraph<Integer,String>();
  g.addVertex(1);
  g.addVertex(2);
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1));
  checkIterator(g.incomingEdgeIterable(2));
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.edgeIterable());
  g.add(1,2,"1-2");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2");
  checkIterator(g.incomingEdgeIterable(2),"1-2");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.edgeIterable(),"1-2");
  g.add(1,2,"1-2b");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.edgeIterable(),"1-2","1-2b");
  g.add(1,3,"1-3");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b","1-3");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b","1-3");
  checkIterator(g.getEdges(1,2),"1-2","1-2b");
  checkIterator(g.getEdges(1,3),"1-3");
  g.add(1,3,"1-3b");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b","1-3","1-3b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3","1-3b");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b","1-3","1-3b");
  g.removeEdge(1,3,"1-3b");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b","1-3");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b","1-3");
  g.removeEdge(1,3,"1-3b");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b","1-3");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b","1-3");
  g.removeEdge(1,3,"1-3");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3));
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b");
  g.add(1,3,"1-3");
  g.add(1,3,"1-3b");
  checkIterator(g.incomingEdgeIterable(1));
  checkIterator(g.outgoingEdgeIterable(1),"1-2","1-2b","1-3","1-3b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3","1-3b");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-2","1-2b","1-3","1-3b");
  g.add(1,1,"1-1");
  checkIterator(g.incomingEdgeIterable(1),"1-1");
  checkIterator(g.outgoingEdgeIterable(1),"1-1","1-2","1-2b","1-3","1-3b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2));
  checkIterator(g.incomingEdgeIterable(3),"1-3","1-3b");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-1","1-2","1-2b","1-3","1-3b");
  g.add(2,1,"2-1");
  checkIterator(g.incomingEdgeIterable(1),"1-1","2-1");
  checkIterator(g.outgoingEdgeIterable(1),"1-1","1-2","1-2b","1-3","1-3b");
  checkIterator(g.incomingEdgeIterable(2),"1-2","1-2b");
  checkIterator(g.outgoingEdgeIterable(2),"2-1");
  checkIterator(g.incomingEdgeIterable(3),"1-3","1-3b");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-1","1-2","1-2b","1-3","1-3b","2-1");
  checkIterator(g.getEdges(1,1),"1-1");
  checkIterator(g.getEdges(1,2),"1-2","1-2b");
  checkIterator(g.getEdges(1,3),"1-3","1-3b");
  checkIterator(g.getEdges(3,1));
  g.removeVertex(2);
  checkIterator(g.incomingEdgeIterable(1),"1-1");
  checkIterator(g.outgoingEdgeIterable(1),"1-1","1-3","1-3b");
  checkIterator(g.incomingEdgeIterable(3),"1-3","1-3b");
  checkIterator(g.outgoingEdgeIterable(3));
  checkIterator(g.edgeIterable(),"1-1","1-3","1-3b");
}
