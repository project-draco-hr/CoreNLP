{
  final int i=findInsertionPoint(k);
  if (i < 0) {
    final double oldvalue=value[-i - 1];
    value[-i - 1]+=adjust;
    return oldvalue;
  }
  if (state[i] == FREE)   free--;
  state[i]=OCCUPIED;
  key[i]=k;
  value[i]=adjust;
  if (++count >= maxFill) {
    int newP=Math.min(p + growthFactor,PRIMES.length - 1);
    while (PRIMES[newP] == PRIMES[p])     newP++;
    rehash(newP);
  }
  if (free == 0)   rehash(p);
  return defRetValue;
}
