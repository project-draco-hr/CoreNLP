{
  if (findIterator == null) {
    try {
      if (hyp) {
        List<IndexedWord> topoSort=topologicalSortCache.get(System.identityHashCode(sg));
        if (topoSort == null || topoSort.size() != sg.size()) {
          topoSort=sg.topologicalSort();
          topologicalSortCache.put(System.identityHashCode(sg),topoSort);
        }
        findIterator=topoSort.iterator();
      }
 else       if (sg_aligned == null) {
        return false;
      }
 else {
        List<IndexedWord> topoSort=topologicalSortCache.get(System.identityHashCode(sg_aligned));
        if (topoSort == null || topoSort.size() != sg_aligned.size()) {
          topoSort=sg_aligned.topologicalSort();
          topologicalSortCache.put(System.identityHashCode(sg_aligned),topoSort);
        }
        findIterator=topoSort.iterator();
      }
    }
 catch (    Exception ex) {
      if (hyp) {
        findIterator=sg.vertexSet().iterator();
      }
 else       if (sg_aligned == null) {
        return false;
      }
 else {
        findIterator=sg_aligned.vertexSet().iterator();
      }
    }
  }
  if (findCurrent != null && matches()) {
    return true;
  }
  while (findIterator.hasNext()) {
    findCurrent=findIterator.next();
    resetChildIter(findCurrent);
    if (matches()) {
      return true;
    }
  }
  return false;
}
