{
  Properties props=StringUtils.argsToProperties(args);
  boolean debug=false;
  String filepath=props.getProperty("i");
  String outfile=props.getProperty("o");
  if (filepath == null || outfile == null) {
    usage();
    System.exit(-1);
  }
  PrintWriter fout=new PrintWriter(outfile);
  logger.info("Writing to " + outfile);
  String ext=props.getProperty("ext");
  Options options;
  if (ext != null) {
    options=new Options(".*" + ext + "$");
  }
 else {
    options=new Options();
  }
  options.annotateTreeCoref=true;
  options.annotateTreeNer=true;
  CorpusStats corpusStats=new CorpusStats();
  CoNLLDocumentReader reader=new CoNLLDocumentReader(filepath,options);
  int docCnt=0;
  int sentCnt=0;
  int tokenCnt=0;
  for (CoNLLDocument doc; (doc=reader.getNextDocument()) != null; ) {
    corpusStats.process(doc);
    docCnt++;
    Annotation anno=doc.getAnnotation();
    if (debug)     System.out.println("Document " + docCnt + ": "+ anno.get(CoreAnnotations.DocIDAnnotation.class));
    for (    CoreMap sentence : anno.get(CoreAnnotations.SentencesAnnotation.class)) {
      if (debug)       System.out.println("Parse: " + sentence.get(TreeCoreAnnotations.TreeAnnotation.class));
      if (debug)       System.out.println("Sentence Tokens: " + StringUtils.join(sentence.get(CoreAnnotations.TokensAnnotation.class),","));
      writeTabSep(fout,sentence,doc.corefChainMap);
      sentCnt++;
      tokenCnt+=sentence.get(CoreAnnotations.TokensAnnotation.class).size();
    }
    if (debug) {
      for (      CoreMap ner : doc.nerChunks) {
        System.out.println("NER Chunk: " + ner);
      }
      for (      String id : doc.corefChainMap.keySet()) {
        System.out.println("Coref: " + id + " = "+ StringUtils.join(doc.corefChainMap.get(id),";"));
      }
    }
  }
  fout.close();
  System.out.println("Total document count: " + docCnt);
  System.out.println("Total sentence count: " + sentCnt);
  System.out.println("Total token count: " + tokenCnt);
  System.out.println(corpusStats);
}
