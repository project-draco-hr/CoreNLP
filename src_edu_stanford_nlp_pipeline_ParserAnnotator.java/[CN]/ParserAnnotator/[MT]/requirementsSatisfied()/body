{
  if (this.BUILD_GRAPHS) {
    if (this.saveBinaryTrees) {
      return Collections.unmodifiableSet(new ArraySet<>(Arrays.asList(CoreAnnotations.PartOfSpeechAnnotation.class,TreeCoreAnnotations.TreeAnnotation.class,TreeCoreAnnotations.BinarizedTreeAnnotation.class,SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class,CoreAnnotations.BeginIndexAnnotation.class,CoreAnnotations.EndIndexAnnotation.class,CoreAnnotations.CategoryAnnotation.class)));
    }
 else {
      return Collections.unmodifiableSet(new ArraySet<>(Arrays.asList(CoreAnnotations.PartOfSpeechAnnotation.class,TreeCoreAnnotations.TreeAnnotation.class,SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class,CoreAnnotations.BeginIndexAnnotation.class,CoreAnnotations.EndIndexAnnotation.class,CoreAnnotations.CategoryAnnotation.class)));
    }
  }
 else {
    if (this.saveBinaryTrees) {
      return Collections.unmodifiableSet(new ArraySet<>(Arrays.asList(CoreAnnotations.PartOfSpeechAnnotation.class,TreeCoreAnnotations.TreeAnnotation.class,TreeCoreAnnotations.BinarizedTreeAnnotation.class,CoreAnnotations.CategoryAnnotation.class)));
    }
 else {
      return Collections.unmodifiableSet(new ArraySet<>(Arrays.asList(CoreAnnotations.PartOfSpeechAnnotation.class,TreeCoreAnnotations.TreeAnnotation.class,CoreAnnotations.CategoryAnnotation.class)));
    }
  }
}
