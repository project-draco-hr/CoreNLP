{
  short slen=(short)s.length();
  short tlen=(short)t.length();
  if (slen == 0) {
    return tlen <= threshold ? tlen : -1;
  }
 else   if (tlen == 0) {
    return slen <= threshold ? slen : -1;
  }
  if (abs(slen - tlen) > threshold)   return -1;
  if (slen > tlen) {
    CharSequence tmp=s;
    s=t;
    t=tmp;
    slen=tlen;
    tlen=(short)t.length();
  }
  initMemoiseTables(threshold,back2,back1,cost,slen);
  for (short j=1; j <= tlen; j++) {
    cost[0]=j;
    int min=max(1,j - threshold);
    int max=min(slen,(short)(j + threshold));
    if (min > 1) {
      cost[min - 1]=Short.MAX_VALUE;
    }
    iterateOverStripe(s,t,j,cost,back1,back2,min,max);
    short[] tempCost=back2;
    back2=back1;
    back1=cost;
    cost=tempCost;
  }
  if (back1[slen] > threshold) {
    return -1;
  }
  return back1[slen];
}
