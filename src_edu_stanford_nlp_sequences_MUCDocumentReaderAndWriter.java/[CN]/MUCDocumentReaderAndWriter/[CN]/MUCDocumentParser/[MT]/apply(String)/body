{
  if (doc == null) {
    return null;
  }
  String section="";
  String entity="O";
  String entityClass="";
  int pNum=0;
  int sNum=0;
  int wNum=0;
  PTBTokenizer ptb=PTBTokenizer.newPTBTokenizer(new BufferedReader(new StringReader(doc)),false,true);
  List<CoreLabel> words=ptb.tokenize();
  List<CoreLabel> result=new ArrayList();
  CoreLabel prev=null;
  String prevString="";
  Matcher matcher;
  for (  CoreLabel word : words) {
    matcher=sgml.matcher(word.word());
    if (matcher.matches()) {
      String tag=matcher.group(1);
      if (word.word().equalsIgnoreCase("<p>")) {
        pNum++;
        sNum=0;
        wNum=0;
        if (prev != null) {
          String s=prev.get(CoreAnnotations.AfterAnnotation.class);
          s+=word.originalText() + word.after();
          prev.set(CoreAnnotations.AfterAnnotation.class,s);
        }
        prevString+=word.before() + word.originalText();
      }
 else       if (word.word().equalsIgnoreCase("<s>")) {
        sNum++;
        wNum=0;
        if (prev != null) {
          String s=prev.get(CoreAnnotations.AfterAnnotation.class);
          s+=word.originalText() + word.after();
          prev.set(CoreAnnotations.AfterAnnotation.class,s);
        }
        prevString+=word.before() + word.originalText();
      }
 else {
        matcher=beginEntity.matcher(word.word());
        if (matcher.matches()) {
          entityClass=matcher.group(1);
          entity=matcher.group(2);
          if (prev != null) {
            String s=prev.get(CoreAnnotations.AfterAnnotation.class);
            s+=word.after();
            prev.set(CoreAnnotations.AfterAnnotation.class,s);
          }
          prevString+=word.before();
        }
 else {
          matcher=endEntity.matcher(word.word());
          if (matcher.matches()) {
            entityClass="";
            entity="O";
            if (prev != null) {
              String s=prev.get(CoreAnnotations.AfterAnnotation.class);
              s+=word.after();
              prev.set(CoreAnnotations.AfterAnnotation.class,s);
            }
            prevString+=word.before();
          }
 else           if (word.word().equalsIgnoreCase("<doc>")) {
            prevString+=word.before() + word.originalText();
          }
 else           if (word.word().equalsIgnoreCase("</doc>")) {
            String s=prev.get(CoreAnnotations.AfterAnnotation.class);
            s+=word.originalText();
            prev.set(CoreAnnotations.AfterAnnotation.class,s);
          }
 else {
            section=tag.toUpperCase();
            if (prev != null) {
              String s=prev.get(CoreAnnotations.AfterAnnotation.class);
              s+=word.originalText() + word.after();
              prev.set(CoreAnnotations.AfterAnnotation.class,s);
            }
            prevString+=word.before() + word.originalText();
          }
        }
      }
    }
 else {
      CoreLabel wi=new CoreLabel();
      wi.setWord(word.word());
      wi.set(CoreAnnotations.OriginalTextAnnotation.class,word.originalText());
      wi.set(CoreAnnotations.BeforeAnnotation.class,prevString + word.before());
      wi.set(CoreAnnotations.AfterAnnotation.class,word.after());
      wi.set(CoreAnnotations.WordPositionAnnotation.class,"" + wNum);
      wi.set(CoreAnnotations.SentencePositionAnnotation.class,"" + sNum);
      wi.set(CoreAnnotations.ParaPositionAnnotation.class,"" + pNum);
      wi.set(CoreAnnotations.SectionAnnotation.class,section);
      wi.set(CoreAnnotations.AnswerAnnotation.class,entity);
      wi.set(CoreAnnotations.EntityClassAnnotation.class,entityClass);
      wNum++;
      prevString="";
      result.add(wi);
      prev=wi;
    }
  }
  return result;
}
