{
  CoreMap sentence=doc.get(CoreAnnotations.SentencesAnnotation.class).get(0);
  SemanticGraph depparse=sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);
  log.info("| " + sentence.get(CoreAnnotations.TextAnnotation.class));
  BitSet consumedAsSubjects=new BitSet();
  @SuppressWarnings("MismatchedQueryAndUpdateOfCollection") List<Span> subjectSpans=new ArrayList<>();
  NEXTNODE:   for (  IndexedWord head : depparse.topologicalSort()) {
    if (head.tag().startsWith("N") || head.tag().equals("PRP")) {
      Optional<List<IndexedWord>> subjectChunk=segmenter.getValidChunk(depparse,head,segmenter.VALID_SUBJECT_ARCS,Optional.empty(),true);
      if (subjectChunk.isPresent()) {
        for (        IndexedWord tok : subjectChunk.get()) {
          if (consumedAsSubjects.get(tok.index())) {
            continue NEXTNODE;
          }
        }
        for (        IndexedWord tok : subjectChunk.get()) {
          consumedAsSubjects.set(tok.index());
        }
        subjectSpans.add(toSpan(subjectChunk.get()));
      }
    }
  }
}
