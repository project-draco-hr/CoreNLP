{
  yTy=ArrayMath.innerProduct(y,y);
  xTx=new TwoDimensionalCounter<Integer,Integer>();
  xTy=new double[numFeatures];
  Arrays.fill(xTy,0);
  if (values == null) {
    for (int n=0; n < data.length; n++) {
      for (int i=0; i < data[n].length; i++) {
        int featureAti=data[n][i];
        xTy[featureAti]+=y[n];
        for (int j=i; j < data[n].length; j++) {
{
            int featureAtj=data[n][j];
            if (featureAti < featureAtj)             xTx.incrementCount(featureAti,featureAtj);
 else             xTx.incrementCount(featureAtj,featureAti);
          }
        }
      }
    }
  }
 else {
    for (int n=0; n < data.length; n++) {
      for (int i=0; i < data[n].length; i++) {
        int featureAti=data[n][i];
        xTy[featureAti]+=y[n] * values[n][i];
        for (int j=i; j < data[n].length; j++) {
          int featureAtj=data[n][j];
          double value=values[n][i] * values[n][j];
          if (featureAti < featureAtj)           xTx.incrementCount(featureAti,featureAtj,value);
 else           xTx.incrementCount(featureAtj,featureAti,value);
        }
      }
    }
  }
}
