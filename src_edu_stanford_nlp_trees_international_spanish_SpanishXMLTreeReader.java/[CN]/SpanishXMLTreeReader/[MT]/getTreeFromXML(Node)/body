{
  final Element eRoot=(Element)root;
  if (isWordNode(eRoot)) {
    return buildWordNode(eRoot);
  }
 else   if (isEllipticNode(eRoot)) {
    return buildEllipticNode(eRoot);
  }
 else {
    List<Tree> kids=new ArrayList<>();
    for (Node childNode=eRoot.getFirstChild(); childNode != null; childNode=childNode.getNextSibling()) {
      if (childNode.getNodeType() != Node.ELEMENT_NODE)       continue;
      Tree t=getTreeFromXML(childNode);
      if (t == null) {
        System.err.printf("%s: Discarding empty tree (root: %s)%n",this.getClass().getName(),childNode.getNodeName());
      }
 else {
        kids.add(t);
      }
    }
    return (kids.size() == 0) ? null : buildConstituentNode(eRoot,kids);
  }
}
