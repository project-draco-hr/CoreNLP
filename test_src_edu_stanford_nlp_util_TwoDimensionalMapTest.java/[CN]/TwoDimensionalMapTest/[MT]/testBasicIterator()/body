{
  TwoDimensionalMap<String,String,String> map=new TwoDimensionalMap<String,String,String>();
  Iterator<TwoDimensionalMap.Entry<String,String,String>> mapIterator=map.iterator();
  assertFalse(mapIterator.hasNext());
  map.put("A","B","C");
  mapIterator=map.iterator();
  assertTrue(mapIterator.hasNext());
  TwoDimensionalMap.Entry<String,String,String> entry=mapIterator.next();
  assertEquals("A",entry.getFirstKey());
  assertEquals("B",entry.getSecondKey());
  assertEquals("C",entry.getValue());
  assertFalse(mapIterator.hasNext());
  map.put("A","E","F");
  map.put("D","E","F");
  map.put("G","H","I");
  map.put("J","K","L");
  assertEquals(5,map.size());
  int count=0;
  Set<String> firstKeys=new HashSet<String>();
  Set<String> values=new HashSet<String>();
  for (  TwoDimensionalMap.Entry<String,String,String> e : map) {
    ++count;
    firstKeys.add(e.getFirstKey());
    values.add(e.getValue());
  }
  assertTrue(firstKeys.contains("A"));
  assertTrue(firstKeys.contains("D"));
  assertTrue(firstKeys.contains("G"));
  assertTrue(firstKeys.contains("J"));
  assertTrue(values.contains("C"));
  assertTrue(values.contains("F"));
  assertTrue(values.contains("I"));
  assertTrue(values.contains("L"));
  assertEquals(5,count);
  assertEquals(4,firstKeys.size());
  assertEquals(4,values.size());
}
