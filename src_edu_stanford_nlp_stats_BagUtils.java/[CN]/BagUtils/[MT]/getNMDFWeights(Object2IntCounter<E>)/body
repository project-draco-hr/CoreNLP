{
  final IntSet uniqueDf=new IntOpenHashSet(df.values());
  final DoubleList logUniqueDf=new DoubleArrayList(uniqueDf.size());
  for (  int e : uniqueDf) {
    logUniqueDf.add(Math.log(e));
  }
  final double logmean=CollectionsMath.mean(logUniqueDf);
  final double logvar=CollectionsMath.variance(logUniqueDf);
  final Object2DoubleCounter<E> weights=new Object2DoubleOpenHashCounter<E>();
  for (  Object2IntMap.Entry<E> entry : df.object2IntEntrySet()) {
    final double dist=Math.log(entry.getIntValue()) - logmean;
    weights.put(entry.getKey(),Math.exp(-.5 * (dist * dist / logvar)));
  }
  return weights;
}
