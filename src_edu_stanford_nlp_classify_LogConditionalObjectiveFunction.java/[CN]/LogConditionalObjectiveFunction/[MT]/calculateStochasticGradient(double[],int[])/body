{
  if (derivative == null) {
    derivative=new double[domainDimension()];
  }
  Arrays.fill(derivative,0.0);
  double[] sums=new double[numClasses];
  double[] probs=new double[numClasses];
  double[] counts=new double[numClasses];
  Arrays.fill(counts,0.0);
  for (  int d : batch) {
    int[] features=data[d];
    Arrays.fill(sums,0.0);
    for (int c=0; c < numClasses; c++) {
      for (      int feature : features) {
        int i=indexOf(feature,c);
        sums[c]+=x[i];
      }
    }
    double total=ArrayMath.logSum(sums);
    int ld=labels[d];
    for (int c=0; c < numClasses; c++) {
      probs[c]=Math.exp(sums[c] - total);
      for (      int feature : features) {
        int i=indexOf(feature,c);
        derivative[i]+=probs[ld] * probs[c];
      }
    }
    for (    int feature : features) {
      int i=indexOf(feature,labels[d]);
      derivative[i]-=probs[ld];
    }
  }
}
