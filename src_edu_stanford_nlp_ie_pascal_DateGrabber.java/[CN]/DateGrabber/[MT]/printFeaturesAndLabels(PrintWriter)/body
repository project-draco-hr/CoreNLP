{
  for (int i=0; i < dateCollector.size(); i++) {
    PascalDate pd=dateCollector.get(i);
    StringBuffer sb=new StringBuffer();
    int numTokens=pd.prevTokens.length;
    for (int t=0; t < numTokens; ++t) {
      sb.append("prevToken" + t + "="+ pd.prevTokens[numTokens - t - 1]+ " ");
      sb.append("prevToken" + "=" + pd.prevTokens[numTokens - t - 1] + " ");
    }
    sb.append("isRange=" + (pd.isRange ? "true " : "false "));
    sb.append("orderOnPage=" + pd.orderOnPageIndex + " ");
    sb.append("fractionOfPage=" + pd.tokenIndex + " ");
    sb.append("numOccur=" + pd.numOccurrences + " ");
    sb.append("orderOfFirst=" + pd.orderOfFirst + " ");
    sb.append("temporalOrder=" + pd.temporalOrderIndex + " ");
    sb.append("label=" + pd.pascalTag + " ");
    output.println(sb.toString());
  }
}
