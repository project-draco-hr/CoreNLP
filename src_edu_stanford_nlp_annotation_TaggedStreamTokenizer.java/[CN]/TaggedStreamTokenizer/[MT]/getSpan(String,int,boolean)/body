{
  if (!discardHtml || checkKeepers(startTag.toLowerCase())) {
    addToCache(HtmlLexerConstants.HTML_TAG,startTag);
  }
  Vector<String> tokens=new Vector<String>();
  boolean gotEOF=false;
  Token t;
  while (true) {
    t=parser.getNextToken();
    if (t.kind == HtmlLexerConstants.EOF) {
      gotEOF=true;
      if (discardBody) {
        return getEOF();
      }
 else {
        break;
      }
    }
    if (t.kind == endKind) {
      break;
    }
    tokens.addElement(t.toString());
  }
  String endTagText=t.image;
  if (!discardBody) {
    for (int i=0; i < tokens.size(); i++) {
      String s=tokens.elementAt(i);
      if (s.equals("")) {
        continue;
      }
      HtmlLexer l=new HtmlLexer(new StringReader(s));
      while (true) {
        t=l.getNextToken();
        if (t.kind == HtmlLexerConstants.EOF) {
          break;
        }
        addToCache(t.kind,t.image);
      }
    }
  }
  if (gotEOF) {
    addToCache(HtmlLexerConstants.EOF,"");
  }
 else   if (!discardHtml || checkKeepers(endTagText.toLowerCase())) {
    addToCache(HtmlLexerConstants.HTML_TAG,endTagText);
  }
  return generateToken();
}
