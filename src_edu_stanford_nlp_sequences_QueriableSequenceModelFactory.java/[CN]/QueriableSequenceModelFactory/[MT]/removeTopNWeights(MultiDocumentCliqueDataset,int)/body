{
  int[] topNFeatures=new int[n];
  double[] topNWeights=new double[n];
  Arrays.fill(topNWeights,Double.NEGATIVE_INFINITY);
  double thresh=Double.NEGATIVE_INFINITY;
  for (int i=0; i < data.metaInfo().numFeatures(); i++) {
    double w=Math.abs(weights[i]);
    if (w > thresh) {
      for (int j=0; j < n; j++) {
        if (topNWeights[j] == thresh) {
          topNFeatures[j]=i;
          topNWeights[j]=w;
          break;
        }
      }
      thresh=Double.POSITIVE_INFINITY;
      for (int j=0; j < n; j++) {
        if (topNWeights[j] < thresh) {
          thresh=topNWeights[j];
        }
      }
    }
  }
  boolean[] features=new boolean[data.metaInfo().numFeatures()];
  Arrays.fill(features,true);
  for (int i=0; i < n; i++) {
    features[topNFeatures[i]]=false;
  }
  return features;
}
