{
  String rawTag=null;
  String[] parts=null;
  String currTag="";
  List<String> currWords=new ArrayList<String>();
  List<Entity> entityList=new ArrayList<Entity>();
  for (int i=0; i < sequence.length; i++) {
    if (sequence[i] != backgroundSymbolIndex) {
      rawTag=classIndex.get(sequence[i]);
      parts=rawTag.split("-");
      if (parts[0].equals("B")) {
        if (currWords.size() > 0) {
          entityList.add(new Entity(i - currWords.size(),currWords,tagIndex.indexOf(currTag)));
          currWords.clear();
        }
        currWords.add(wordDoc.get(i));
        currTag=parts[1];
      }
 else {
        if (currWords.size() > 0 && parts[1].equals(currTag)) {
          currWords.add(wordDoc.get(i));
        }
 else {
          if (currWords.size() > 0) {
            entityList.add(new Entity(i - currWords.size(),currWords,tagIndex.indexOf(currTag)));
            currWords.clear();
          }
          currTag="";
        }
      }
    }
 else {
      if (currWords.size() > 0) {
        entityList.add(new Entity(i - currWords.size(),currWords,tagIndex.indexOf(currTag)));
        currWords.clear();
        currTag="";
      }
    }
  }
  if (currWords.size() > 0) {
    entityList.add(new Entity(sequence.length - currWords.size(),currWords,tagIndex.indexOf(currTag)));
  }
  for (int i=0; i < entityList.size(); i++) {
    Entity curr=entityList.get(i);
    List<Entity> exact=new ArrayList<Entity>();
    List<Entity> subMatch=new ArrayList<Entity>();
    String currStr=curr.surface;
    for (int j=0; j < entityList.size(); j++) {
      if (i == j)       continue;
      Entity other=entityList.get(j);
      if (other.surface.indexOf(currStr) != -1) {
        if (other.surface.length() == currStr.length()) {
          if (i < j)           exact.add(other);
        }
 else {
          subMatch.add(other);
        }
      }
    }
    curr.exactMatch=exact;
    curr.subMatch=subMatch;
  }
  return entityList;
}
