{
  StringBuffer sb=new StringBuffer();
  sb.append("{\"");
  sb.append(surface);
  sb.append("\" start: ");
  sb.append(startPosition);
  sb.append(" type: ");
  sb.append(type);
  if (seqID != -1) {
    sb.append(" seqID: ");
    sb.append(seqID);
  }
  if (exactMatch != null) {
    sb.append(" exact matches: [");
    for (    Entity exact : exactMatch) {
      sb.append(exact.startPosition);
      sb.append(":");
      sb.append(exact.surface);
      sb.append(" ");
    }
    sb.append("],");
  }
  if (subMatch != null) {
    sb.append(" sub matches: [");
    for (    Entity sub : subMatch) {
      sb.append(sub.startPosition);
      sb.append(":");
      sb.append(sub.surface);
      sb.append(" ");
    }
    sb.append("]");
  }
  sb.append("}");
  return sb.toString();
}
