{
  int position=0;
  for (  IN fl : doc) {
    fl.set(CoreAnnotations.PositionAnnotation.class,Integer.toString((position++)));
    if ((flags.wordShape > WordShapeClassifier.NOWORDSHAPE) && (!flags.useShapeStrings)) {
      String word=fl.get(CoreAnnotations.TextAnnotation.class);
      if (flags.wordFunction != null) {
        word=flags.wordFunction.apply(word);
      }
      if (!word.isEmpty() && Character.isLowerCase(word.codePointAt(0))) {
        knownLCWords.add(word);
      }
      String s=intern(WordShapeClassifier.wordShape(word,flags.wordShape,knownLCWords));
      fl.set(CoreAnnotations.ShapeAnnotation.class,s);
    }
    if ("edu.stanford.nlp.wordseg.Sighan2005DocumentReaderAndWriter".equalsIgnoreCase(flags.readerAndWriter)) {
      fl.set(CoreAnnotations.CharAnnotation.class,intern(fix(fl.get(CoreAnnotations.CharAnnotation.class))));
    }
 else {
      fl.set(CoreAnnotations.TextAnnotation.class,intern(fix(fl.get(CoreAnnotations.TextAnnotation.class))));
      if (fl.get(CoreAnnotations.AnswerAnnotation.class) == null) {
        fl.set(CoreAnnotations.GoldAnswerAnnotation.class,fl.get(CoreAnnotations.AnswerAnnotation.class));
      }
    }
  }
}
