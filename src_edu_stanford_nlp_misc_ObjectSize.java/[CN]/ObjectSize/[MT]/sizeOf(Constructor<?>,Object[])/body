{
  long size=0;
  try {
    @SuppressWarnings("unused") Object primer=constr.newInstance(args);
    long startingMemoryUse=getUsedMemory();
    Object[] objects=new Object[NUMOBJ];
    for (int i=0; i < objects.length; i++) {
      objects[i]=constr.newInstance(args);
    }
    long endingMemoryUse=getUsedMemory();
    float approxSize=(endingMemoryUse - startingMemoryUse) / (float)NUMOBJ;
    size=Math.round(approxSize);
    System.err.println("Created object is a " + objects[0].getClass().getName() + " value "+ objects[0]);
  }
 catch (  Exception e) {
    System.out.println("WARNING:couldn't instantiate " + constr);
    e.printStackTrace();
  }
  return size;
}
