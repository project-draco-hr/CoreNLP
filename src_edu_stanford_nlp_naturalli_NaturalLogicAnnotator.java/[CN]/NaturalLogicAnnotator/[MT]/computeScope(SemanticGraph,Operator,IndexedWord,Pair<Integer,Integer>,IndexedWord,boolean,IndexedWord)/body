{
  Pair<Integer,Integer> subjSpan;
  Pair<Integer,Integer> objSpan;
  if (subject == null && object == null) {
    subjSpan=getSubtreeSpan(tree,pivot);
    objSpan=Pair.makePair(subjSpan.second,subjSpan.second);
  }
 else   if (subject == null) {
    subjSpan=includeInSpan(getSubtreeSpan(tree,object),getGeneralizedSubtreeSpan(tree,pivot,Collections.singleton("prep")));
    objSpan=Pair.makePair(subjSpan.second,subjSpan.second);
  }
 else {
    Pair<Integer,Integer> subjectSubtree;
    if (isProperNounSubject) {
      subjectSubtree=getProperNounSubtreeSpan(tree,subject);
    }
 else {
      subjectSubtree=getSubtreeSpan(tree,subject);
    }
    subjSpan=excludeFromSpan(subjectSubtree,quantifierSpan);
    objSpan=excludeFromSpan(includeInSpan(getSubtreeSpan(tree,object),getModifierSubtreeSpan(tree,pivot)),subjectSubtree);
  }
  return new OperatorSpec(operator,quantifierSpan.first - 1,quantifierSpan.second - 1,subjSpan.first - 1,subjSpan.second - 1,objSpan.first - 1,objSpan.second - 1);
}
