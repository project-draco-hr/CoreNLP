{
  List<CoreLabel> sent=sentences.get(sentNum).get(CoreAnnotations.TokensAnnotation.class);
  for (int i=startIndex; i < endIndex; i++) {
    CoreLabel cl=sent.get(i);
    if (cl.get(CoreAnnotations.UtteranceAnnotation.class) != 0)     continue;
    String lemma=cl.lemma();
    String word=cl.word();
    if (dict.reportVerb.contains(lemma) && cl.tag().startsWith("V")) {
      SemanticGraph dependency=sentences.get(sentNum).get(SemanticGraphCoreAnnotations.EnhancedDependenciesAnnotation.class);
      if (dependency == null) {
        dependency=sentences.get(sentNum).get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);
      }
      IndexedWord w=dependency.getNodeByWordPattern(word);
      if (w != null) {
        if (findSubject(doc,dependency,w,sentNum,utterNum))         return true;
        for (        IndexedWord p : dependency.getPathToRoot(w)) {
          if (!p.tag().startsWith("V") && !p.tag().startsWith("MD"))           break;
          if (findSubject(doc,dependency,p,sentNum,utterNum))           return true;
        }
      }
 else {
        Redwood.log("debug-preprocessor","Cannot find node in dependency for word " + word);
      }
    }
  }
  return false;
}
