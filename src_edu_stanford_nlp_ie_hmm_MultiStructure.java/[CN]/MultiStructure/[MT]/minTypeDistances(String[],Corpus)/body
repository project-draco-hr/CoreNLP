{
  int numTargets=targetFields.length;
  int[][] minDists=new int[numTargets][numTargets];
  for (int i=0; i < minDists.length; i++) {
    for (int j=0; j < minDists.length; j++) {
      minDists[i][j]=INFINITY;
    }
  }
  for (int i=0; i < trainCorpus.size(); i++) {
    TypedTaggedDocument doc=(TypedTaggedDocument)trainCorpus.get(i);
    int curType=0;
    int curDist=0;
    for (int j=0; j < doc.size(); j++) {
      TypedTaggedWord word=(TypedTaggedWord)doc.get(j);
      int type=word.type();
      if (type > 0 && type != curType) {
        if (curType > 0) {
          if (curDist < minDists[curType - 1][type - 1]) {
            minDists[curType - 1][type - 1]=curDist;
          }
        }
        curDist=0;
        curType=type;
      }
 else {
        curDist++;
      }
    }
  }
  return minDists;
}
