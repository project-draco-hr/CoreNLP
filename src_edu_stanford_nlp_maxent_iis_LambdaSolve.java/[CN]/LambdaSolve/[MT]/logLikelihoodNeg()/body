{
  double s=0;
  for (int i=0; i < probConds.length; i++) {
    for (int j=0; j < probConds[i].length; j++) {
      probConds[i][j]=0;
    }
    zlambda[i]=0;
  }
  for (int fNo=0, fSize=p.fSize; fNo < fSize; fNo++) {
    Feature f=p.functions.get(fNo);
    double fLambda=-Math.exp(lambda[fNo]);
    double sum=ftildeArr[fNo];
    sum*=p.data.getNumber();
    s-=sum * fLambda;
    if (Math.abs(fLambda) > 200) {
      System.out.println("lambda " + fNo + " too big: "+ fLambda);
    }
    for (int i=0, length=f.len(); i < length; i++) {
      int x=f.getX(i);
      int y=f.getY(i);
      if (ASSUME_BINARY) {
        probConds[x][y]+=fLambda;
      }
 else {
        double val=f.getVal(i);
        probConds[x][y]+=(val * fLambda);
      }
    }
  }
  for (int x=0; x < probConds.length; x++) {
    zlambda[x]=ArrayMath.logSum(probConds[x]);
    s+=zlambda[x] * p.data.ptildeX(x) * p.data.getNumber();
    for (int y=0; y < probConds[x].length; y++) {
      probConds[x][y]=divide(probConds[x][y],zlambda[x]);
    }
  }
  if (s < 0) {
    System.out.println("neg log lik smaller than 0 " + s);
  }
  return s;
}
