{
  for (int x=0; x < p.data.xSize; x++) {
    for (int y=0; y < probConds[x].length; y++) {
      probConds[x][y]=1.0 / probConds[x].length;
    }
  }
  if (VERBOSE) {
    System.err.println(" pcond initialized ");
  }
  for (int x=0; x < p.data.xSize; x++) {
    zlambda[x]=probConds[x].length;
  }
  if (VERBOSE) {
    System.err.println(" zlambda initialized ");
  }
  for (int i=0; i < p.fSize; i++) {
    ftildeArr[i]=p.functions.get(i).ftilde();
    p.functions.get(i).setSum();
    if (ftildeArr[i] == 0) {
    }
    if (smooth) {
      double alfa=.015;
      for (int j=0; j < p.fSize; j++) {
        ftildeArr[j]=(ftildeArr[j] * p.data.xSize + alfa) / p.data.xSize;
      }
    }
    Feature f=p.functions.get(i);
    for (int j=0; j < f.len(); j++) {
      int x=f.getX(j);
      int y=f.getY(j);
      fnumArr[x][y]+=f.getVal(j);
    }
  }
  int constAll=fnumArr[0][0];
  fixedFnumXY=true;
  for (int x=0; x < p.data.xSize; x++) {
    for (int y=0; y < fnumArr[x].length; y++) {
      if (fnumArr[x][y] != constAll) {
        fixedFnumXY=false;
        break;
      }
    }
  }
  if (VERBOSE) {
    System.err.println(" ftildeArr initialized " + (fixedFnumXY ? "fixed sum " : ""));
  }
}
