{
  return new AbstractSet<Class<? extends Key<CoreMap,?>>>(){
    @Override public Iterator<Class<? extends Key<CoreMap,?>>> iterator(){
      return new Iterator<Class<? extends Key<CoreMap,?>>>(){
        private int i;
        @Override public boolean hasNext(){
          return i < size;
        }
        @Override public Class<? extends Key<CoreMap,?>> next(){
          try {
            return keys[i++];
          }
 catch (          ArrayIndexOutOfBoundsException aioobe) {
            throw new NoSuchElementException("ArrayCoreMap keySet iterator exhausted");
          }
        }
        @Override @SuppressWarnings("unchecked") public void remove(){
          ArrayCoreMap.this.remove((Class)keys[i]);
        }
      }
;
    }
    @Override public int size(){
      return size;
    }
  }
;
}
