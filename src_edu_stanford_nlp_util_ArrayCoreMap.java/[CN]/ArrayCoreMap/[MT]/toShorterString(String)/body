{
  StringBuilder s=new StringBuilder(SHORTER_STRING_CHARSTRING_START_SIZE);
  s.append('[');
  Set<String> whatSet=null;
  if (size > SHORTER_STRING_MAX_SIZE_BEFORE_HASHING && what.length > SHORTER_STRING_MAX_SIZE_BEFORE_HASHING) {
    whatSet=new HashSet<>(Arrays.asList(what));
  }
  for (int i=0; i < size; i++) {
    Class klass=keys[i];
    String name=shortNames.get(klass);
    if (name == null) {
      name=klass.getSimpleName();
      int annoIdx=name.lastIndexOf("Annotation");
      if (annoIdx >= 0) {
        name=name.substring(0,annoIdx);
      }
      shortNames.put(klass,name);
    }
    boolean include;
    if (what.length == 0) {
      include=true;
    }
 else     if (whatSet != null) {
      include=whatSet.contains(name);
    }
 else {
      include=false;
      for (      String item : what) {
        if (item.equals(name)) {
          include=true;
          break;
        }
      }
    }
    if (include) {
      if (s.length() > 1) {
        s.append(' ');
      }
      s.append(name);
      s.append('=');
      s.append(values[i]);
    }
  }
  s.append(']');
  return s.toString();
}
