{
  if (way.equals(ConstantsAndVariables.PatternIndexWay.MEMORY))   return new PatternIndexInMemory();
 else   if (way.equals(ConstantsAndVariables.PatternIndexWay.LUCENE)) {
    try {
      Class<? extends PatternIndex> c=(Class<? extends PatternIndex>)Class.forName("edu.stanford.nlp.patterns.surface.PatternIndexLucene");
      Constructor<? extends PatternIndex> ctor=c.getConstructor(String.class);
      PatternIndex index=ctor.newInstance(dir);
      return index;
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException("Lucene option is not distributed (license clash). Email us if you really want it.");
    }
catch (    InvocationTargetException e) {
      throw new RuntimeException(e);
    }
catch (    NoSuchMethodException e) {
      throw new RuntimeException(e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException(e);
    }
catch (    InstantiationException e) {
      throw new RuntimeException(e);
    }
  }
 else   throw new UnsupportedOperationException();
}
