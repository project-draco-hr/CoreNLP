{
  String fileName=args[0];
  String[] tags=new String[]{"LOC","ORG","PERSON","GPE","O"};
  tagIndex.addAll(Arrays.asList(tags));
  String[] classes=new String[]{"O","B-PERSON","B-GPE","I-GPE","B-ORG","I-ORG","I-PERSON","B-LOC","I-LOC"};
  classIndex.addAll(Arrays.asList(classes));
  int backgroundSymbolIndex=classIndex.indexOf("O");
  entityMatrix=new int[tags.length - 1][tags.length - 1];
  for (int i=0; i < entityMatrix.length; i++) {
    entityMatrix[i]=new int[tags.length - 1];
  }
  subEntityMatrix=new int[tags.length - 1][tags.length - 1];
  for (int i=0; i < subEntityMatrix.length; i++) {
    subEntityMatrix[i]=new int[tags.length - 1];
  }
  BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(new File(fileName))));
  String line=null;
  List<String> wordDoc=new ArrayList<String>();
  List<Integer> sequenceList=new ArrayList<Integer>();
  while ((line=br.readLine()) != null) {
    line=line.trim();
    if (line.length() == 0) {
      int[] listOfInt=new int[sequenceList.size()];
      for (int i=0; i < sequenceList.size(); i++)       listOfInt[i]=sequenceList.get(i);
      count(listOfInt,wordDoc);
      sequenceList.clear();
      wordDoc.clear();
    }
 else {
      String[] parts=line.split("\t");
      wordDoc.add(parts[0]);
      String tag=parts[1];
      sequenceList.add(classIndex.indexOf(tag));
    }
  }
  if (wordDoc.size() > 0) {
    int[] listOfInt=new int[sequenceList.size()];
    for (int i=0; i < sequenceList.size(); i++)     listOfInt[i]=sequenceList.get(i);
    count(listOfInt,wordDoc);
  }
  for (int i=0; i < entityMatrix.length; i++) {
    StringBuilder sb=new StringBuilder();
    for (int j=0; j < entityMatrix[i].length; j++) {
      sb.append(tagIndex.get(i));
      sb.append(":");
      sb.append(tagIndex.get(j));
      sb.append(" ");
      sb.append(entityMatrix[i][j]);
      sb.append("\t");
    }
    System.out.println(sb.toString().trim());
  }
  for (int i=0; i < subEntityMatrix.length; i++) {
    StringBuilder sb=new StringBuilder();
    for (int j=0; j < subEntityMatrix[i].length; j++) {
      sb.append(tagIndex.get(i));
      sb.append(":");
      sb.append(tagIndex.get(j));
      sb.append(" ");
      sb.append(subEntityMatrix[i][j]);
      sb.append("\t");
    }
    System.out.println(sb.toString().trim());
  }
}
