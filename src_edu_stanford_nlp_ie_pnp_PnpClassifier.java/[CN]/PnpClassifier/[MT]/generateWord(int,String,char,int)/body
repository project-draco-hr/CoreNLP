{
  StringBuffer word;
  while (true) {
    word=new StringBuffer(initialContext);
    for (int i=0; i < wordLength + 1; i++) {
      double r=rand.nextDouble();
      double totalMass=0;
      StringBuffer ngram=new StringBuffer(word.substring(word.length() - cn + 1));
      ngram.append('X');
      for (char curChar=0; curChar < 256; curChar++) {
        ngram.setCharAt(cn - 1,curChar);
        double ngramProb=getInterpolatedCharProb(ngram.toString(),category);
        totalMass+=ngramProb;
        if (totalMass >= r) {
          word.append(curChar);
          break;
        }
      }
      if (i < wordLength && (word.charAt(word.length() - 1) == ' ' || word.charAt(word.length() - 1) == endSymbol)) {
        break;
      }
    }
    if (word.length() < initialContext.length() + wordLength + 1) {
      continue;
    }
    if (word.charAt(word.length() - 1) == finalChar) {
      break;
    }
  }
  return (word.substring(initialContext.length()));
}
