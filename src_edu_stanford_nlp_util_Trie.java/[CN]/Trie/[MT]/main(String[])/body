{
  Trie<String,Boolean> ts=new Trie<String,Boolean>();
  ts.append(Arrays.asList("o","n","e"),true);
  ts.append(Arrays.asList("o","n","l","y"),true);
  ts.append(Arrays.asList("o","n","e","t","o","n"),true);
  ts.append(Arrays.asList("t","w","o"),true);
  System.out.println("one " + ts.findFirst(Arrays.asList("o","n","e")));
  System.out.println("only " + ts.findFirst(Arrays.asList("o","n","l","y")));
  System.out.println("on " + ts.findFirst(Arrays.asList("o","n")));
  System.out.println("onesin " + ts.findFirst(Arrays.asList("o","n","e","s","i","n")));
  System.out.println("onetonly " + ts.findFirst(Arrays.asList("o","n","e","o","n","l","y")));
  System.out.println("twofer " + ts.findFirst(Arrays.asList("t","w","o","f","e","r")));
  System.out.println("tw " + ts.findFirst(Arrays.asList("t","w")));
  System.out.println("twitch " + ts.findFirst(Arrays.asList("t","w","i","c","h")));
  System.out.println("super " + ts.findFirst(Arrays.asList("s","u","p","e","r")));
  System.out.println("<empty> " + ts.findFirst(Arrays.asList("")));
  System.out.println(ts);
}
