{
  int startsAt=0;
  jjnewStateCnt=53;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 50:
case 25:
          if (curChar == 61 && kind > 19)           kind=19;
        break;
case 52:
      if (curChar == 61) {
        if (kind > 20)         kind=20;
      }
    if (curChar == 61) {
      if (kind > 19)       kind=19;
    }
  break;
case 53:
if ((0x3ff000000000000L & l) != 0L) {
  if (kind > 21)   kind=21;
  jjCheckNAdd(29);
}
if ((0x3ff000000000000L & l) != 0L) {
if (kind > 7) kind=7;
jjCheckNAdd(12);
}
break;
case 5:
if ((0x3ff000000000000L & l) != 0L) {
if (kind > 13) kind=13;
jjCheckNAddStates(0,5);
}
 else if ((0x280000000000L & l) != 0L) jjCheckNAddStates(6,8);
 else if ((0x5000000000000000L & l) != 0L) {
if (kind > 19) kind=19;
}
 else if (curChar == 33) jjCheckNAddTwoStates(25,52);
 else if (curChar == 61) jjCheckNAddTwoStates(25,50);
 else if (curChar == 36) jjAddStates(9,10);
 else if (curChar == 34) jjCheckNAddStates(11,13);
 else if (curChar == 47) jjCheckNAddStates(14,16);
 else if (curChar == 35) jjCheckNAddStates(17,19);
if ((0x3ff000000000000L & l) != 0L) {
if (kind > 21) kind=21;
jjCheckNAdd(29);
}
 else if (curChar == 36) jjCheckNAddTwoStates(31,33);
 else if (curChar == 62) jjCheckNAdd(25);
 else if (curChar == 60) jjCheckNAdd(25);
 else if (curChar == 47) jjstateSet[jjnewStateCnt++]=0;
break;
case 54:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(45,46);
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(43,44);
if ((0x3ff000000000000L & l) != 0L) {
if (kind > 14) kind=14;
jjCheckNAdd(42);
}
break;
case 0:
if (curChar == 47) jjCheckNAddStates(20,22);
break;
case 1:
if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(20,22);
break;
case 2:
if ((0x2400L & l) != 0L && kind > 5) kind=5;
break;
case 3:
if (curChar == 10 && kind > 5) kind=5;
break;
case 4:
if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;
break;
case 6:
if (curChar == 35) jjCheckNAddStates(17,19);
break;
case 7:
if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(17,19);
break;
case 8:
if ((0x2400L & l) != 0L && kind > 6) kind=6;
break;
case 9:
if (curChar == 10 && kind > 6) kind=6;
break;
case 10:
if (curChar == 13) jjstateSet[jjnewStateCnt++]=9;
break;
case 12:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 7) kind=7;
jjCheckNAdd(12);
break;
case 14:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 12) kind=12;
jjstateSet[jjnewStateCnt++]=14;
break;
case 15:
case 16:
if (curChar == 47) jjCheckNAddStates(14,16);
break;
case 18:
if ((0xffff7fffffffdbffL & l) != 0L) jjCheckNAddStates(14,16);
break;
case 19:
if (curChar == 47 && kind > 17) kind=17;
break;
case 20:
case 21:
if (curChar == 34) jjCheckNAddStates(11,13);
break;
case 23:
if ((0xfffffffbffffdbffL & l) != 0L) jjCheckNAddStates(11,13);
break;
case 24:
if (curChar == 34 && kind > 18) kind=18;
break;
case 26:
if (curChar == 60) jjCheckNAdd(25);
break;
case 27:
if (curChar == 62) jjCheckNAdd(25);
break;
case 28:
if ((0x5000000000000000L & l) != 0L && kind > 19) kind=19;
break;
case 29:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAdd(29);
break;
case 30:
if (curChar == 36) jjCheckNAddTwoStates(31,33);
break;
case 32:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 8) kind=8;
jjstateSet[jjnewStateCnt++]=32;
break;
case 33:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 9) kind=9;
jjCheckNAdd(33);
break;
case 34:
if (curChar == 36) jjAddStates(9,10);
break;
case 35:
if (curChar == 36) jjstateSet[jjnewStateCnt++]=36;
break;
case 37:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 10) kind=10;
jjstateSet[jjnewStateCnt++]=37;
break;
case 38:
if (curChar == 36) jjCheckNAdd(39);
break;
case 39:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 11) kind=11;
jjCheckNAdd(39);
break;
case 40:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 13) kind=13;
jjCheckNAddStates(0,5);
break;
case 41:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 13) kind=13;
jjCheckNAdd(41);
break;
case 42:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 14) kind=14;
jjCheckNAdd(42);
break;
case 43:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(43,44);
break;
case 45:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(45,46);
break;
case 46:
if (curChar == 46) jjCheckNAdd(47);
break;
case 47:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 16) kind=16;
jjCheckNAdd(47);
break;
case 48:
if ((0x280000000000L & l) != 0L) jjCheckNAddStates(6,8);
break;
case 49:
if (curChar == 61) jjCheckNAddTwoStates(25,50);
break;
case 51:
if (curChar == 33) jjCheckNAddTwoStates(25,52);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 50:
if (curChar == 126 && kind > 20) kind=20;
break;
case 53:
if ((0x7fffffe87fffffeL & l) != 0L) {
if (kind > 21) kind=21;
jjCheckNAdd(29);
}
if ((0x7fffffe87fffffeL & l) != 0L) {
if (kind > 7) kind=7;
jjCheckNAdd(12);
}
break;
case 5:
if ((0x7fffffe87fffffeL & l) != 0L) {
if (kind > 21) kind=21;
jjCheckNAdd(29);
}
 else if (curChar == 92) jjstateSet[jjnewStateCnt++]=14;
if ((0x7fffffe87fffffeL & l) != 0L) {
if (kind > 7) kind=7;
jjCheckNAdd(12);
}
break;
case 1:
jjAddStates(20,22);
break;
case 7:
jjAddStates(17,19);
break;
case 11:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 7) kind=7;
jjCheckNAdd(12);
break;
case 12:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 7) kind=7;
jjCheckNAdd(12);
break;
case 13:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=14;
break;
case 17:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=16;
break;
case 18:
jjAddStates(14,16);
break;
case 22:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=21;
break;
case 23:
jjAddStates(11,13);
break;
case 29:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAdd(29);
break;
case 31:
case 32:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 8) kind=8;
jjCheckNAdd(32);
break;
case 36:
case 37:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAdd(37);
break;
case 44:
if (curChar == 76 && kind > 15) kind=15;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(int)(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 1:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(20,22);
break;
case 7:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(17,19);
break;
case 18:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(14,16);
break;
case 23:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(11,13);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=53 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
