{
  if (args.length < MIN_ARGS) {
    System.err.println(usage());
    System.exit(-1);
  }
  Properties options=StringUtils.argsToProperties(args,optArgDefs());
  String splitPrefix=options.getProperty("s",null);
  boolean SHOW_WORDS=PropertiesUtils.getBool(options,"w",false);
  boolean pathsAreFiles=PropertiesUtils.getBool(options,"f",false);
  boolean SHOW_OOV=PropertiesUtils.getBool(options,"o",false);
  String[] parsedArgs=options.getProperty("","").split("\\s+");
  if (parsedArgs.length != MIN_ARGS) {
    System.err.println(usage());
    System.exit(-1);
  }
  Language language=Language.valueOf(parsedArgs[0]);
  List<String> corpusPaths=new ArrayList<>(parsedArgs.length - 1);
  for (int i=1; i < parsedArgs.length; ++i) {
    corpusPaths.add(parsedArgs[i]);
  }
  TreebankLangParserParams tlpp=language.params;
  TreebankStats cs=new TreebankStats(language,corpusPaths,tlpp);
  if (splitPrefix != null) {
    if (!cs.useSplit(splitPrefix))     System.err.println("Could not load split!");
  }
  cs.run(pathsAreFiles,SHOW_WORDS,SHOW_OOV);
}
