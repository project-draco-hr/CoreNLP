{
  if (flags.timitDatum && flags.restrictTransitionsTimit) {
    return getTimitMaxCliqueLabels(datumNum);
  }
  if (cacheMaxCliqueLabels && maxCliqueLabelsCache != null && datumNum > metaInfo.leftWindow() && datumNum < numDatums() - metaInfo.rightWindow()) {
    return maxCliqueLabelsCache;
  }
  Clique c=metaInfo.getMaxClique();
  int[] labels=new int[c.size()];
  int[] labelIndex=new int[c.size()];
  Arrays.fill(labelIndex,0);
  List<LabeledClique> maxLabels=new ArrayList<LabeledClique>();
  while (true) {
    for (int i=0; i < labels.length; i++) {
      if (datumNum + c.relativeIndex(i) < 0) {
        labels[i]=metaInfo.backgroundIndex();
      }
 else {
        labels[i]=possibleLabels[datumNum + c.relativeIndex(i)][labelIndex[i]];
      }
    }
    LabeledClique lc=LabeledClique.valueOf(c,labels);
    maxLabels.add(lc);
    boolean done=true;
    for (int i=0; i < labelIndex.length; i++) {
      if (datumNum + c.relativeIndex(i) < 0 || labelIndex[i] == possibleLabels[datumNum + c.relativeIndex(i)].length - 1) {
        labelIndex[i]=0;
      }
 else {
        labelIndex[i]++;
        done=false;
        break;
      }
    }
    if (done) {
      break;
    }
  }
  metaInfo.retainAllowed(maxLabels);
  if (cacheMaxCliqueLabels && datumNum > metaInfo.leftWindow() && datumNum < numDatums() - metaInfo.rightWindow()) {
    maxCliqueLabelsCache=Collections.unmodifiableList(maxLabels);
  }
  return maxLabels;
}
