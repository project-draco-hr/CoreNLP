{
  CoreNLPProtos.Quote.Builder builder=CoreNLPProtos.Quote.newBuilder();
  if (quote.get(TextAnnotation.class) != null) {
    builder.setText(quote.get(TextAnnotation.class));
  }
  if (quote.get(DocIDAnnotation.class) != null) {
    builder.setDocid(quote.get(DocIDAnnotation.class));
  }
  if (quote.get(CharacterOffsetBeginAnnotation.class) != null) {
    builder.setBegin(quote.get(CharacterOffsetBeginAnnotation.class));
  }
  if (quote.get(CharacterOffsetEndAnnotation.class) != null) {
    builder.setEnd(quote.get(CharacterOffsetEndAnnotation.class));
  }
  if (quote.get(SentenceBeginAnnotation.class) != null) {
    builder.setSentenceBegin(quote.get(SentenceBeginAnnotation.class));
  }
  if (quote.get(SentenceEndAnnotation.class) != null) {
    builder.setSentenceEnd(quote.get(SentenceEndAnnotation.class));
  }
  if (quote.get(TokenBeginAnnotation.class) != null) {
    builder.setTokenBegin(quote.get(TokenBeginAnnotation.class));
  }
  if (quote.get(TokenEndAnnotation.class) != null) {
    builder.setTokenEnd(quote.get(TokenEndAnnotation.class));
  }
  if (quote.get(QuotationIndexAnnotation.class) != null) {
    builder.setIndex(quote.get(QuotationIndexAnnotation.class));
  }
  return builder.build();
}
