{
  CoreNLPProtos.NERMention.Builder builder=CoreNLPProtos.NERMention.newBuilder();
  if (mention.get(SentenceIndexAnnotation.class) != null) {
    builder.setSentenceIndex(mention.get(SentenceIndexAnnotation.class));
  }
  if (mention.get(TokenBeginAnnotation.class) != null) {
    builder.setTokenStartInSentenceInclusive(mention.get(TokenBeginAnnotation.class));
  }
  if (mention.get(TokenEndAnnotation.class) != null) {
    builder.setTokenEndInSentenceExclusive(mention.get(TokenEndAnnotation.class));
  }
  if (mention.get(NamedEntityTagAnnotation.class) != null) {
    builder.setNer(mention.get(NamedEntityTagAnnotation.class));
  }
  if (mention.get(NormalizedNamedEntityTagAnnotation.class) != null) {
    builder.setNormalizedNER(mention.get(NormalizedNamedEntityTagAnnotation.class));
  }
  if (mention.get(EntityTypeAnnotation.class) != null) {
    builder.setEntityType(mention.get(EntityTypeAnnotation.class));
  }
  if (mention.get(TimexAnnotation.class) != null) {
    builder.setTimex(toProto(mention.get(TimexAnnotation.class)));
  }
  if (mention.get(WikipediaEntityAnnotation.class) != null) {
    builder.setWikipediaEntity(mention.get(WikipediaEntityAnnotation.class));
  }
  return builder.build();
}
