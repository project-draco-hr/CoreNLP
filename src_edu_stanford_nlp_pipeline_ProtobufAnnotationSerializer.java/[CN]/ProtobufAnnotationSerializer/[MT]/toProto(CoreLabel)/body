{
  CoreMapProtos.CoreLabel.Builder builder=CoreMapProtos.CoreLabel.newBuilder();
  builder.setWord(coreLabel.word());
  if (coreLabel.tag() != null) {
    builder.setPos(coreLabel.tag());
  }
  if (coreLabel.value() != null) {
    builder.setValue(coreLabel.value());
  }
  if (coreLabel.category() != null) {
    builder.setCategory(coreLabel.category());
  }
  if (coreLabel.before() != null) {
    builder.setBefore(coreLabel.before());
  }
  if (coreLabel.after() != null) {
    builder.setAfter(coreLabel.after());
  }
  if (coreLabel.originalText() != null) {
    builder.setOriginalText(coreLabel.originalText());
  }
  if (coreLabel.ner() != null) {
    builder.setNer(coreLabel.ner());
  }
  if (coreLabel.beginPosition() >= 0) {
    builder.setBeginChar(coreLabel.beginPosition());
  }
  if (coreLabel.endPosition() >= 0) {
    builder.setEndChar(coreLabel.endPosition());
  }
  if (coreLabel.lemma() != null) {
    builder.setLemma(coreLabel.lemma());
  }
  if (coreLabel.containsKey(UtteranceAnnotation.class)) {
    builder.setUtterance(coreLabel.get(UtteranceAnnotation.class));
  }
  if (coreLabel.containsKey(SpeakerAnnotation.class)) {
    builder.setSpeaker(coreLabel.get(SpeakerAnnotation.class));
  }
  if (coreLabel.containsKey(BeginIndexAnnotation.class)) {
    builder.setBeginIndex(coreLabel.get(BeginIndexAnnotation.class));
  }
  if (coreLabel.containsKey(EndIndexAnnotation.class)) {
    builder.setEndIndex(coreLabel.get(EndIndexAnnotation.class));
  }
  if (coreLabel.containsKey(TokenBeginAnnotation.class)) {
    builder.setTokenBeginIndex(coreLabel.get(TokenBeginAnnotation.class));
  }
  if (coreLabel.containsKey(TokenEndAnnotation.class)) {
    builder.setTokenEndIndex(coreLabel.get(TokenEndAnnotation.class));
  }
  if (coreLabel.get(NormalizedNamedEntityTagAnnotation.class) != null) {
    builder.setNormalizedNER(coreLabel.get(NormalizedNamedEntityTagAnnotation.class));
  }
  return builder.build();
}
