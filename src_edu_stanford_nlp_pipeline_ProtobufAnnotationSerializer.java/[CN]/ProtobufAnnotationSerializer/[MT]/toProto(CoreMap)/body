{
  if (sentence instanceof CoreLabel) {
    throw new IllegalArgumentException("CoreMap is actually a CoreLabel");
  }
  CoreMapProtos.Sentence.Builder builder=CoreMapProtos.Sentence.newBuilder();
  builder.setTokenOffsetBegin(sentence.get(TokenBeginAnnotation.class));
  builder.setTokenOffsetEnd(sentence.get(TokenEndAnnotation.class));
  if (sentence.containsKey(SentenceIndexAnnotation.class)) {
    builder.setSentenceIndex(sentence.get(SentenceIndexAnnotation.class));
  }
  if (sentence.containsKey(CharacterOffsetBeginAnnotation.class)) {
    builder.setCharacterOffsetBegin(sentence.get(CharacterOffsetBeginAnnotation.class));
  }
  if (sentence.containsKey(CharacterOffsetEndAnnotation.class)) {
    builder.setCharacterOffsetEnd(sentence.get(CharacterOffsetEndAnnotation.class));
  }
  if (sentence.containsKey(TreeAnnotation.class)) {
    builder.setParseTree(toProto(sentence.get(TreeAnnotation.class)));
  }
  if (sentence.containsKey(BasicDependenciesAnnotation.class)) {
    builder.setBasicDependencies(toProto(sentence.get(BasicDependenciesAnnotation.class)));
  }
  if (sentence.containsKey(CollapsedDependenciesAnnotation.class)) {
    builder.setCollapsedDependencies(toProto(sentence.get(CollapsedDependenciesAnnotation.class)));
  }
  if (sentence.containsKey(CollapsedCCProcessedDependenciesAnnotation.class)) {
    builder.setCollapsedCCProcessedDependencies(toProto(sentence.get(CollapsedCCProcessedDependenciesAnnotation.class)));
  }
  if (sentence.containsKey(TokensAnnotation.class) && sentence.get(TokensAnnotation.class).size() > 0 && sentence.get(TokensAnnotation.class).get(0).containsKey(ParagraphAnnotation.class)) {
    builder.setParagraph(sentence.get(TokensAnnotation.class).get(0).get(ParagraphAnnotation.class));
  }
  return builder.build();
}
