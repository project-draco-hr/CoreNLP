{
  CoreMapProtos.DependencyGraph.Builder builder=CoreMapProtos.DependencyGraph.newBuilder();
  Set<IndexedWord> rootSet=new IdentityHashSet<IndexedWord>(graph.getRoots());
  int nodeI=0;
  for (  IndexedWord node : graph.vertexSet()) {
    CoreMapProtos.DependencyGraph.Node.Builder nodeBuilder=CoreMapProtos.DependencyGraph.Node.newBuilder().setSentenceIndex(node.get(SentenceIndexAnnotation.class)).setIndex(node.index());
    if (node.containsKey(CopyAnnotation.class)) {
      nodeBuilder.setCopyAnnotation(node.get(CopyAnnotation.class));
    }
    if (rootSet.contains(node)) {
      builder.addRoot(nodeI);
    }
    nodeI+=1;
  }
  for (  SemanticGraphEdge edge : graph.edgeIterable()) {
    builder.addEdge(CoreMapProtos.DependencyGraph.Edge.newBuilder().setSource(edge.getSource().index()).setTarget(edge.getTarget().index()).setDep(edge.getRelation().toString()).setIsExtra(edge.isExtra()));
  }
  return builder.build();
}
