{
  CoreNLPProtos.ParseTree.Builder builder=CoreNLPProtos.ParseTree.newBuilder();
  for (  Tree child : parseTree.children()) {
    builder.addChild(toProto(child));
  }
  IntPair span=parseTree.getSpan();
  if (span != null) {
    builder.setYieldBeginIndex(span.getSource());
    builder.setYieldEndIndex(span.getTarget());
  }
  if (parseTree.label() != null) {
    builder.setValue(parseTree.label().value());
  }
  if (!Double.isNaN(parseTree.score())) {
    builder.setScore(parseTree.score());
  }
  Integer sentiment;
  if (parseTree.label() instanceof CoreMap && (sentiment=((CoreMap)parseTree.label()).get(RNNCoreAnnotations.PredictedClass.class)) != null) {
    builder.setSentiment(CoreNLPProtos.Sentiment.valueOf(sentiment));
  }
  return builder.build();
}
