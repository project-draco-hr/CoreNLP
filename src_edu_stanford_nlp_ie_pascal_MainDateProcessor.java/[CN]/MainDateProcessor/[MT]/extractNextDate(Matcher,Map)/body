{
  Pattern tagExtraction=Pattern.compile("<.*?>",Pattern.DOTALL);
  Matcher tagExtractMatcher=tagExtraction.matcher(m.group(2));
  String nextString=tagExtractMatcher.replaceAll("");
  DateInstance di=new DateInstance();
  Calendar day;
  di.add(nextString);
  di.extractFields();
  day=di.getStartDate();
  String dayAsString=(day.get(Calendar.MONTH) + 1) + "/" + day.get(Calendar.DAY_OF_MONTH)+ "/"+ day.get(Calendar.YEAR);
  if (datesEncountered.containsKey(dayAsString)) {
    Integer tally=(Integer)datesEncountered.get(dayAsString);
    datesEncountered.put(dayAsString,Integer.valueOf(tally.intValue() + 1));
  }
 else {
    datesEncountered.put(dayAsString,Integer.valueOf(1));
  }
  String stringToWrite=new String("normalized=\"" + dayAsString + "\"");
  System.err.println("Normalized: " + dayAsString);
  stringToWrite=stringToWrite.concat(" range=\"" + di.isRange() + "\"");
  stringToWrite=stringToWrite.concat(" occurrence=\"" + datesEncountered.get(dayAsString) + "\"");
  return stringToWrite;
}
