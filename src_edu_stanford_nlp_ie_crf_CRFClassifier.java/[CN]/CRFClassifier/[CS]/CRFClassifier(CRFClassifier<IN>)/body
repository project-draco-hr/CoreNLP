{
  super(crf.flags);
  this.windowSize=crf.windowSize;
  this.featureFactories=crf.featureFactories;
  this.pad=crf.pad;
  if (crf.knownLCWords == null) {
    this.knownLCWords=new MaxSizeConcurrentHashSet<>(crf.flags.maxAdditionalKnownLCWords);
  }
 else {
    this.knownLCWords=new MaxSizeConcurrentHashSet<>(crf.knownLCWords);
    this.knownLCWords.setMaxSize(this.knownLCWords.size() + crf.flags.maxAdditionalKnownLCWords);
  }
  this.featureIndex=(crf.featureIndex != null) ? new HashIndex<>(crf.featureIndex.objectsList()) : null;
  this.classIndex=(crf.classIndex != null) ? new HashIndex<>(crf.classIndex.objectsList()) : null;
  if (crf.labelIndices != null) {
    this.labelIndices=new ArrayList<>(crf.labelIndices.size());
    for (int i=0; i < crf.labelIndices.size(); i++) {
      this.labelIndices.add((crf.labelIndices.get(i) != null) ? new HashIndex<>(crf.labelIndices.get(i).objectsList()) : null);
    }
  }
 else {
    this.labelIndices=null;
  }
  this.cliquePotentialFunction=crf.cliquePotentialFunction;
}
