{
  int numOfNodeFeatures=nodeFeatureIndicesMap.size();
  int beginIndex=0;
  int endIndex=Math.min((int)(numOfNodeFeatures / (totalNumOfFeatureSlices + 0.0) * numOfFeatureSlices),numOfNodeFeatures);
  List<Integer> nodeFeatureOriginalIndices=nodeFeatureIndicesMap.objectsList();
  List<Integer> edgeFeatureOriginalIndices=edgeFeatureIndicesMap.objectsList();
  Index<Integer> newNodeFeatureIndex=new HashIndex<Integer>();
  Index<Integer> newEdgeFeatureIndex=new HashIndex<Integer>();
  Index<String> newFeatureIndex=new HashIndex<String>();
  for (int i=beginIndex; i < endIndex; i++) {
    int oldIndex=nodeFeatureOriginalIndices.get(i);
    String f=featureIndex.get(oldIndex);
    int index=newFeatureIndex.addToIndex(f);
    newNodeFeatureIndex.add(index);
  }
  for (  Integer edgeFIndex : edgeFeatureOriginalIndices) {
    String f=featureIndex.get(edgeFIndex);
    int index=newFeatureIndex.addToIndex(f);
    newEdgeFeatureIndex.add(index);
  }
  nodeFeatureIndicesMap=newNodeFeatureIndex;
  edgeFeatureIndicesMap=newEdgeFeatureIndex;
  int[] newMap=new int[newFeatureIndex.size()];
  for (int i=0; i < newMap.length; i++) {
    int index=featureIndex.indexOf(newFeatureIndex.get(i));
    newMap[i]=map[index];
  }
  map=newMap;
  featureIndex=newFeatureIndex;
}
