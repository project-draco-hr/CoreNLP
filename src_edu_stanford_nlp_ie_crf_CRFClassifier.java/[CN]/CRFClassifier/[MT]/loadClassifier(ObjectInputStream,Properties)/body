{
  Object o=ois.readObject();
  if (o instanceof List) {
    labelIndices=(List<Index<CRFLabel>>)o;
  }
 else {
    Index<CRFLabel>[] indexArray=(Index<CRFLabel>[])o;
    labelIndices=new ArrayList<Index<CRFLabel>>(indexArray.length);
    for (    Index<CRFLabel> index : indexArray) {
      labelIndices.add(index);
    }
  }
  classIndex=(Index<String>)ois.readObject();
  featureIndex=(Index<String>)ois.readObject();
  flags=(SeqClassifierFlags)ois.readObject();
  if (flags.useEmbedding) {
    embeddings=(Map<String,double[]>)ois.readObject();
  }
  featureFactory=(edu.stanford.nlp.sequences.FeatureFactory)ois.readObject();
  if (props != null) {
    flags.setProperties(props,false);
  }
  reinit();
  windowSize=ois.readInt();
  weights=(double[][])ois.readObject();
  knownLCWords=(Set<String>)ois.readObject();
  if (flags.labelDictionaryCutoff > 0) {
    labelDictionary=(LabelDictionary)ois.readObject();
  }
  if (VERBOSE) {
    System.err.println("windowSize=" + windowSize);
    System.err.println("flags=\n" + flags);
  }
}
