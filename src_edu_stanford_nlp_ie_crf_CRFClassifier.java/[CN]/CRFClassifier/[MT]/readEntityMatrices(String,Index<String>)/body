{
  int numTags=tagIndex.size();
  double[][] matrix=new double[numTags - 1][numTags - 1];
  for (int i=0; i < numTags - 1; i++)   matrix[i]=new double[numTags - 1];
  double[][] subMatrix=new double[numTags - 1][numTags - 1];
  for (int i=0; i < numTags - 1; i++)   subMatrix[i]=new double[numTags - 1];
  try {
    BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(new File(fileName))));
    String line=null;
    int lineCount=0;
    while ((line=br.readLine()) != null) {
      line=line.trim();
      String[] parts=line.split("\t");
      for (      String part : parts) {
        String[] subparts=part.split(" ");
        String[] subsubparts=subparts[0].split(":");
        double counts=Double.parseDouble(subparts[1]);
        if (counts == 0.0)         counts=1.0;
        int tagIndex1=tagIndex.indexOf(subsubparts[0]);
        int tagIndex2=tagIndex.indexOf(subsubparts[1]);
        if (lineCount < numTags - 1)         matrix[tagIndex1][tagIndex2]=counts;
 else         subMatrix[tagIndex1][tagIndex2]=counts;
      }
      lineCount++;
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.exit(-1);
  }
  for (int i=0; i < matrix.length; i++) {
    double sum=ArrayMath.sum(matrix[i]);
    for (int j=0; j < matrix[i].length; j++)     matrix[i][j]=Math.log(matrix[i][j] / sum) / 2;
  }
  for (int i=0; i < subMatrix.length; i++) {
    double sum=ArrayMath.sum(subMatrix[i]);
    for (int j=0; j < subMatrix[i].length; j++)     subMatrix[i][j]=Math.log(subMatrix[i][j] / sum);
  }
  System.err.println("Matrix: ");
  System.err.println(ArrayUtils.toString(matrix));
  System.err.println("SubMatrix: ");
  System.err.println(ArrayUtils.toString(subMatrix));
  return new Pair<double[][],double[][]>(matrix,subMatrix);
}
