{
  PaddedList<IN> pInfo=new PaddedList<>(info,pad);
  ArrayList<List<String>> features=new ArrayList<>();
  List<double[]> featureVals=new ArrayList<>();
  Collection<Clique> done=Generics.newHashSet();
  for (int i=0; i < windowSize; i++) {
    List<String> featuresC=new ArrayList<>();
    List<Clique> windowCliques=FeatureFactory.getCliques(i,0);
    windowCliques.removeAll(done);
    done.addAll(windowCliques);
    double[] featureValArr=null;
    if (flags.useEmbedding && i == 0) {
      featureValArr=makeDatumUsingEmbedding(info,loc,featureFactories,pInfo,featuresC,windowCliques);
    }
 else {
      for (      Clique c : windowCliques) {
        for (        FeatureFactory featureFactory : featureFactories) {
          featuresC.addAll(featureFactory.getCliqueFeatures(pInfo,loc,c));
        }
      }
    }
    features.add(featuresC);
    featureVals.add(featureValArr);
  }
  int[] labels=new int[windowSize];
  for (int i=0; i < windowSize; i++) {
    String answer=pInfo.get(loc + i - windowSize + 1).get(CoreAnnotations.AnswerAnnotation.class);
    labels[i]=classIndex.indexOf(answer);
  }
  printFeatureLists(pInfo.get(loc),features);
  CRFDatum<List<String>,CRFLabel> d=new CRFDatum<>(features,new CRFLabel(labels),featureVals);
  return d;
}
