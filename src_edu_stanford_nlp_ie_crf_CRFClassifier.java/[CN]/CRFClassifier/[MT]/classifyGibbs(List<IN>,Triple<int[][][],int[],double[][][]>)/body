{
  List<IN> newDocument=document;
  if (flags.useReverse) {
    Collections.reverse(document);
    newDocument=new ArrayList<>(document);
    Collections.reverse(document);
  }
  CRFCliqueTree<? extends CharSequence> cliqueTree=getCliqueTree(documentDataAndLabels);
  PriorModelFactory<IN> pmf=(PriorModelFactory<IN>)Class.forName(flags.priorModelFactory).newInstance();
  ListeningSequenceModel prior=pmf.getInstance(flags.backgroundSymbol,classIndex,tagIndex,newDocument,entityMatrices,flags);
  if (flags.useUniformPrior) {
  }
 else {
    throw new RuntimeException("no prior specified");
  }
  SequenceModel model=new FactoredSequenceModel(cliqueTree,prior);
  SequenceListener listener=new FactoredSequenceListener(cliqueTree,prior);
  SequenceGibbsSampler sampler=new SequenceGibbsSampler(0,0,listener);
  int[] sequence=new int[cliqueTree.length()];
  if (flags.initViterbi) {
    TestSequenceModel testSequenceModel=new TestSequenceModel(cliqueTree);
    ExactBestSequenceFinder tagInference=new ExactBestSequenceFinder();
    int[] bestSequence=tagInference.bestSequence(testSequenceModel);
    System.arraycopy(bestSequence,windowSize - 1,sequence,0,sequence.length);
  }
 else {
    int[] initialSequence=SequenceGibbsSampler.getRandomSequence(model);
    System.arraycopy(initialSequence,0,sequence,0,sequence.length);
  }
  sampler.verbose=0;
  if (flags.annealingType.equalsIgnoreCase("linear")) {
    sequence=sampler.findBestUsingAnnealing(model,CoolingSchedule.getLinearSchedule(1.0,flags.numSamples),sequence);
  }
 else   if (flags.annealingType.equalsIgnoreCase("exp") || flags.annealingType.equalsIgnoreCase("exponential")) {
    sequence=sampler.findBestUsingAnnealing(model,CoolingSchedule.getExponentialSchedule(1.0,flags.annealingRate,flags.numSamples),sequence);
  }
 else {
    throw new RuntimeException("No annealing type specified");
  }
  if (flags.useReverse) {
    Collections.reverse(document);
  }
  for (int j=0, dsize=newDocument.size(); j < dsize; j++) {
    IN wi=document.get(j);
    if (wi == null)     throw new RuntimeException("");
    if (classIndex == null)     throw new RuntimeException("");
    wi.set(CoreAnnotations.AnswerAnnotation.class,classIndex.get(sequence[j]));
  }
  if (flags.useReverse) {
    Collections.reverse(document);
  }
  return document;
}
