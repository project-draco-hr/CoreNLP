{
  int[][][] transData=new int[docData.length][][];
  for (int i=0; i < docData.length; i++) {
    transData[i]=new int[docData[i].length][];
    for (int j=0; j < docData[i].length; j++) {
      int[] cliqueFeatures=docData[i][j];
      transData[i][j]=new int[cliqueFeatures.length];
      for (int n=0; n < cliqueFeatures.length; n++) {
        int transFeatureIndex;
        if (j == 0) {
          transFeatureIndex=nodeFeatureIndicesMap.indexOf(cliqueFeatures[n]);
          if (transFeatureIndex == -1)           throw new RuntimeException("node cliqueFeatures[n]=" + cliqueFeatures[n] + " not found, nodeFeatureIndicesMap.size="+ nodeFeatureIndicesMap.size());
        }
 else {
          transFeatureIndex=edgeFeatureIndicesMap.indexOf(cliqueFeatures[n]);
          if (transFeatureIndex == -1)           throw new RuntimeException("edge cliqueFeatures[n]=" + cliqueFeatures[n] + " not found, edgeFeatureIndicesMap.size="+ edgeFeatureIndicesMap.size());
        }
        transData[i][j][n]=transFeatureIndex;
      }
    }
  }
  return transData;
}
