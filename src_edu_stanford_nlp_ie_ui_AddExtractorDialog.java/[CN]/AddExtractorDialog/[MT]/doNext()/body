{
  setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
  if (currentStep == ADD_STEP && addPanel.createExtractor()) {
    FieldExtractorCreator creator=addPanel.getSelectedFieldExtractorCreator();
    if (creator != lastCreator) {
      NewExtractorPanel newPanel=new NewExtractorPanel(creator);
      if (lastNewPanel != null) {
        mainPanel.remove(lastNewPanel);
      }
      mainPanel.add(newPanel,stepLabels[NEW_STEP]);
      lastCreator=creator;
      lastNewPanel=newPanel;
    }
    setCurrentStep(NEW_STEP);
  }
 else   if (currentStep == ADD_STEP || currentStep == NEW_STEP) {
    final SwingWorker worker;
    if (currentStep == ADD_STEP) {
      final AddExtractorPanel addPanel=this.addPanel;
      worker=new SwingWorker(){
        @Override public Object construct(){
          loadExtractor(addPanel);
          return (null);
        }
      }
;
    }
 else {
      if (lastNewPanel.getName().length() == 0) {
        JOptionPane.showMessageDialog(this,"You must enter a unique name for this FieldExtractor","Bad FieldExtractorName",JOptionPane.ERROR_MESSAGE);
        lastNewPanel.selectNameField();
        setCursor(Cursor.getDefaultCursor());
        return;
      }
      lastNewPanel.updateProperties();
      final NewExtractorPanel newPanel=lastNewPanel;
      worker=new SwingWorker(){
        @Override public Object construct(){
          createExtractor(newPanel);
          return (null);
        }
      }
;
    }
    progressTimer=new Timer(1000,new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        progressDialog.setVisible(true);
        worker.interrupt();
        setCursor(Cursor.getDefaultCursor());
      }
    }
);
    progressTimer.setRepeats(false);
    progressTimer.start();
    worker.start();
  }
 else   if (currentStep == CONFIRM_STEP) {
    setResponse(JOptionPane.OK_OPTION);
  }
}
