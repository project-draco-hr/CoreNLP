{
  List<CK1> firstKeys=new ArrayList<>(counter.firstKeySet());
  List<CK2> secondKeys=new ArrayList<>(counter.secondKeySet());
  Collections.sort(firstKeys,key1Comparator);
  Collections.sort(secondKeys,key2Comparator);
  StringBuilder b=new StringBuilder();
  int secondKeysSize=secondKeys.size();
  String[] headerRow=new String[secondKeysSize + 1];
  headerRow[0]="";
  for (int j=0; j < secondKeysSize; j++) {
    headerRow[j + 1]=secondKeys.get(j).toString();
  }
  b.append(StringUtils.toCSVString(headerRow)).append('\n');
  for (  CK1 rowLabel : firstKeys) {
    String[] row=new String[secondKeysSize + 1];
    row[0]=rowLabel.toString();
    for (int j=0; j < secondKeysSize; j++) {
      CK2 colLabel=secondKeys.get(j);
      row[j + 1]=nf.format(counter.getCount(rowLabel,colLabel));
    }
    b.append(StringUtils.toCSVString(row)).append('\n');
  }
  return b.toString();
}
