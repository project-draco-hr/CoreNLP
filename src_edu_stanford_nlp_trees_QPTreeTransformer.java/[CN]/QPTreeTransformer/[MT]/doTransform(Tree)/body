{
  if (t.value().startsWith("QP")) {
    List<Tree> children=t.getChildrenAsList();
    if (children.size() >= 3 && children.get(0).isPreTerminal()) {
      String child1=children.get(0).value();
      String child2=children.get(1).value();
      String child3=children.get(2).value();
      if ((child3.startsWith("CD") || child3.startsWith("DT")) && (child1.startsWith("RB") || child1.startsWith("JJ") || child1.startsWith("IN")) && (child2.startsWith("IN") || child2.startsWith("JJ"))) {
        transformQP(t);
        children=t.getChildrenAsList();
      }
    }
    if (children.size() >= 3) {
      boolean flat=true;
      for (int i=0; i < children.size(); ++i) {
        if (!children.get(i).isPreTerminal()) {
          flat=false;
          break;
        }
      }
      if (flat) {
        for (int i=1; i < children.size() - 1; ++i) {
          if (children.get(i).value().startsWith("CC")) {
            transformCC(t,children.subList(0,i),children.get(i),children.subList(i + 1,children.size()));
            break;
          }
        }
      }
    }
  }
 else   if (t.isPhrasal()) {
    for (    Tree child : t.children()) {
      doTransform(child);
    }
  }
}
