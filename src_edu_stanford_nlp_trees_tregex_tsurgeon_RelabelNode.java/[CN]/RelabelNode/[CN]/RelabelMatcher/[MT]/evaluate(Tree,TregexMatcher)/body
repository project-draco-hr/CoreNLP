{
  Tree nodeToRelabel=childMatcher[0].evaluate(tree,tregex);
switch (mode) {
case FIXED:
{
      nodeToRelabel.label().setValue(newLabel);
      break;
    }
case REGEX:
{
    Matcher m=labelRegex.matcher(nodeToRelabel.label().value());
    StringBuilder label=new StringBuilder();
    for (    String chunk : replacementPieces) {
      if (variablePattern.matcher(chunk).matches()) {
        String name=chunk.substring(2,chunk.length() - 1);
        label.append(Matcher.quoteReplacement(tregex.getVariableString(name)));
      }
 else       if (nodePattern.matcher(chunk).matches()) {
        String name=chunk.substring(2,chunk.length() - 1);
        label.append(Matcher.quoteReplacement(tregex.getNode(name).value()));
      }
 else {
        label.append(chunk);
      }
    }
    nodeToRelabel.label().setValue(m.replaceAll(label.toString()));
    break;
  }
default :
throw new AssertionError("Unsupported relabel mode " + mode);
}
return tree;
}
