{
  SequencePattern.PatternExpr expr;
  boolean capturing=true;
  String varname=null;
  Token var;
  jj_consume_token(25);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 43:
case 47:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 47:
      jj_consume_token(47);
    capturing=false;
  break;
case 43:
jj_consume_token(43);
var=jj_consume_token(REGEXVAR);
varname=var.image;
break;
default :
jj_la1[38]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[39]=jj_gen;
;
}
expr=SeqRegex(env);
jj_consume_token(26);
if (varname != null) {
{
if (true) return new SequencePattern.GroupPatternExpr(expr,varname);
}
}
 else {
{
if (true) return new SequencePattern.GroupPatternExpr(expr,capturing);
}
}
throw new Error("Missing return statement in function");
}
