{
  Expression expr;
  Expression fieldExpr;
  String s;
  Token tok;
  int i;
  expr=FunctionCallExpression(env);
  label_7:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 31:
case 35:
      ;
    break;
default :
  jj_la1[14]=jj_gen;
break label_7;
}
if (jj_2_20(3)) {
i=Index();
expr=new Expressions.IndexedExpression(expr,i);
}
 else if (jj_2_21(3)) {
jj_consume_token(31);
fieldExpr=Expression(env);
expr=new Expressions.FieldExpression(expr,fieldExpr);
jj_consume_token(32);
}
 else if (jj_2_22(3)) {
jj_consume_token(35);
expr=MethodCallExpression(env,expr);
}
 else if (jj_2_23(3)) {
jj_consume_token(35);
s=RelaxedString();
expr=new Expressions.FieldExpression(expr,s);
}
 else {
jj_consume_token(-1);
throw new ParseException();
}
}
{
if (true) return expr;
}
throw new Error("Missing return statement in function");
}
