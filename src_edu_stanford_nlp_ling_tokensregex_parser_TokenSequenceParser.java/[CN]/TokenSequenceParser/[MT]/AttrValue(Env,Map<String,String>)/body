{
  Token attr=null;
  Token value=null;
  Token tok=null;
  String str=null;
  attr=jj_consume_token(IDENTIFIER);
switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
case 34:
{
      jj_consume_token(34);
switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
case STR:
{
          value=jj_consume_token(STR);
          break;
        }
case REGEX:
{
        value=jj_consume_token(REGEX);
        break;
      }
case IDENTIFIER:
{
      value=jj_consume_token(IDENTIFIER);
      break;
    }
case REGEXVAR:
{
    str=CoreMapVarValue(env);
    break;
  }
default :
jj_la1[50]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
}
case 49:
{
tok=jj_consume_token(49);
value=jj_consume_token(IDENTIFIER);
break;
}
case NUMCMP:
{
tok=jj_consume_token(NUMCMP);
switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
case NONNEGINT:
case INT:
case REAL:
{
value=NumberToken();
break;
}
case REGEXVAR:
{
str=CoreMapVarValue(env);
break;
}
default :
jj_la1[51]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
}
default :
jj_la1[52]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (value != null) {
str=value.image;
}
if (tok != null) {
str=tok.image + str;
}
if (attr != null && str != null) {
if (attributes.containsKey(attr.image)) {
{
if (true) throw new Error("Attribute match already defined: " + attr.image);
}
}
attributes.put(attr.image,str);
}
{
if ("" != null) return attributes;
}
throw new Error("Missing return statement in function");
}
