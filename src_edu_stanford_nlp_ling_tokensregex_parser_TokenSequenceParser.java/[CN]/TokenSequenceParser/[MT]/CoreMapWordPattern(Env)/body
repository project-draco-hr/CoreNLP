{
  Map<String,String> attributes=new ArrayMap<>();
  CoreMapNodePattern pat;
  Token value=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case STR:
    value=jj_consume_token(STR);
  break;
case REGEX:
value=jj_consume_token(REGEX);
break;
case IDENTIFIER:
value=jj_consume_token(IDENTIFIER);
break;
case NONNEGINT:
value=jj_consume_token(NONNEGINT);
break;
case INT:
value=jj_consume_token(INT);
break;
case LONGINT:
value=jj_consume_token(LONGINT);
break;
case REAL:
value=jj_consume_token(REAL);
break;
case STRSIMPLE:
value=jj_consume_token(STRSIMPLE);
break;
default :
jj_la1[58]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
attributes.put("word",value.image);
pat=CoreMapNodePattern.valueOf(env,attributes);
{
if (true) return pat;
}
throw new Error("Missing return statement in function");
}
