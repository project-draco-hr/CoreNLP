{
  if (VERBOSE)   System.err.println("re-calculating score for sequence " + ArrayMath.toString(sequence));
  int enInd, chInd=0;
  double prob=1.0;
  double newScore=0.0;
  double probFactor=1.0;
  for (  Triple<Integer,Integer,Double> wordPair : alignment) {
    enInd=wordPair.first();
    chInd=wordPair.second();
    prob=wordPair.third();
    chInd+=enDocSize;
    probFactor=1.0;
    if (flags.factorInAlignmentProb) {
      probFactor=prob;
    }
    try {
      newScore+=probFactor * getAlignedWordPairScore(sequence[enInd],sequence[chInd],0);
    }
 catch (    Exception ex) {
      System.err.println("sequence.length == " + sequence.length + ", enInd: "+ enInd+ ", chInd: "+ chInd+ ", enDocSize = "+ enDocSize);
      ex.printStackTrace();
    }
  }
  currScore=newScore;
  return newScore;
}
