{
  int enTag=tag1;
  int chTag=tag2;
  if (pos >= enDocSize) {
    enTag=tag2;
    chTag=tag1;
  }
  String enLabel=classIndexEn.get(enTag);
  String chLabel=classIndexCh.get(chTag);
  String[] enLabelParts=enLabel.split("-");
  String[] chLabelParts=chLabel.split("-");
  String enRawLabel=enLabelParts[enLabelParts.length - 1];
  String chRawLabel=chLabelParts[chLabelParts.length - 1];
  if (flags.bisequencePriorType == hardPrior) {
    if (enRawLabel.equals(chRawLabel)) {
      return oneMinusSmallProb;
    }
 else {
      return smallProb;
    }
  }
 else   if (flags.bisequencePriorType == softPrior) {
    double score=0;
    if (softPriorMapCh != null)     score+=softPriorMapCh.get(chRawLabel).get(enRawLabel);
    if (softPriorMapEn != null)     score+=softPriorMapEn.get(enRawLabel).get(chRawLabel);
    return score;
  }
 else {
    throw new RuntimeException("Prior type " + flags.bisequencePriorType + " not recognized");
  }
}
