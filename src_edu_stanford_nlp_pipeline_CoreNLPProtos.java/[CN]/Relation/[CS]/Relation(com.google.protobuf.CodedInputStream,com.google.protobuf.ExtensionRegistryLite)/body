{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    com.google.protobuf.ByteString bs=input.readBytes();
    bitField0_|=0x00000002;
    objectID_=bs;
    break;
  }
case 16:
{
  bitField0_|=0x00000004;
  extentStart_=input.readUInt32();
  break;
}
case 24:
{
bitField0_|=0x00000008;
extentEnd_=input.readUInt32();
break;
}
case 34:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00000010;
type_=bs;
break;
}
case 42:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00000020;
subtype_=bs;
break;
}
case 50:
{
com.google.protobuf.ByteString bs=input.readBytes();
if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
argName_=new com.google.protobuf.LazyStringArrayList();
mutable_bitField0_|=0x00000001;
}
argName_.add(bs);
break;
}
case 58:
{
if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
arg_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>();
mutable_bitField0_|=0x00000002;
}
arg_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.PARSER,extensionRegistry));
break;
}
case 66:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00000001;
signature_=bs;
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
argName_=argName_.getUnmodifiableView();
}
if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
arg_=java.util.Collections.unmodifiableList(arg_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
