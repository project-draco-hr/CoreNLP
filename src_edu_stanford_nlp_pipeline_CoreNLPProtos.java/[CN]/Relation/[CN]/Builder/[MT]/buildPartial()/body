{
  edu.stanford.nlp.pipeline.CoreNLPProtos.Relation result=new edu.stanford.nlp.pipeline.CoreNLPProtos.Relation(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    argName_=argName_.getUnmodifiableView();
    bitField0_=(bitField0_ & ~0x00000001);
  }
  result.argName_=argName_;
  if (argBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      arg_=java.util.Collections.unmodifiableList(arg_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.arg_=arg_;
  }
 else {
    result.arg_=argBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000001;
  }
  result.signature_=signature_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000002;
  }
  result.objectID_=objectID_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000004;
  }
  result.extentStart_=extentStart_;
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000008;
  }
  result.extentEnd_=extentEnd_;
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000010;
  }
  result.type_=type_;
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000020;
  }
  result.subtype_=subtype_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
