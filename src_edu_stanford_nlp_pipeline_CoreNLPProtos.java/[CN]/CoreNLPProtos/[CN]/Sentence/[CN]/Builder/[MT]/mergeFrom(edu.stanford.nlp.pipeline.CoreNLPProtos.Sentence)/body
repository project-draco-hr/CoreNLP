{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance())   return this;
  if (other.hasTokenOffsetBegin()) {
    setTokenOffsetBegin(other.getTokenOffsetBegin());
  }
  if (other.hasTokenOffsetEnd()) {
    setTokenOffsetEnd(other.getTokenOffsetEnd());
  }
  if (other.hasSentenceIndex()) {
    setSentenceIndex(other.getSentenceIndex());
  }
  if (other.hasCharacterOffsetBegin()) {
    setCharacterOffsetBegin(other.getCharacterOffsetBegin());
  }
  if (other.hasCharacterOffsetEnd()) {
    setCharacterOffsetEnd(other.getCharacterOffsetEnd());
  }
  if (other.hasParseTree()) {
    mergeParseTree(other.getParseTree());
  }
  if (other.hasBasicDependencies()) {
    mergeBasicDependencies(other.getBasicDependencies());
  }
  if (other.hasCollapsedDependencies()) {
    mergeCollapsedDependencies(other.getCollapsedDependencies());
  }
  if (other.hasCollapsedCCProcessedDependencies()) {
    mergeCollapsedCCProcessedDependencies(other.getCollapsedCCProcessedDependencies());
  }
  if (other.hasParagraph()) {
    setParagraph(other.getParagraph());
  }
  if (other.hasHasRelationAnnotations()) {
    setHasRelationAnnotations(other.getHasRelationAnnotations());
  }
  if (entityBuilder_ == null) {
    if (!other.entity_.isEmpty()) {
      if (entity_.isEmpty()) {
        entity_=other.entity_;
        bitField0_=(bitField0_ & ~0x00000800);
      }
 else {
        ensureEntityIsMutable();
        entity_.addAll(other.entity_);
      }
      onChanged();
    }
  }
 else {
    if (!other.entity_.isEmpty()) {
      if (entityBuilder_.isEmpty()) {
        entityBuilder_.dispose();
        entityBuilder_=null;
        entity_=other.entity_;
        bitField0_=(bitField0_ & ~0x00000800);
        entityBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getEntityFieldBuilder() : null;
      }
 else {
        entityBuilder_.addAllMessages(other.entity_);
      }
    }
  }
  if (relationBuilder_ == null) {
    if (!other.relation_.isEmpty()) {
      if (relation_.isEmpty()) {
        relation_=other.relation_;
        bitField0_=(bitField0_ & ~0x00001000);
      }
 else {
        ensureRelationIsMutable();
        relation_.addAll(other.relation_);
      }
      onChanged();
    }
  }
 else {
    if (!other.relation_.isEmpty()) {
      if (relationBuilder_.isEmpty()) {
        relationBuilder_.dispose();
        relationBuilder_=null;
        relation_=other.relation_;
        bitField0_=(bitField0_ & ~0x00001000);
        relationBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getRelationFieldBuilder() : null;
      }
 else {
        relationBuilder_.addAllMessages(other.relation_);
      }
    }
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
