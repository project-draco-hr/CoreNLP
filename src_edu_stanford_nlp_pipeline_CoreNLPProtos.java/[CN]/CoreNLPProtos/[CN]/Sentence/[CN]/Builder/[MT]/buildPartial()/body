{
  edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence result=new edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.tokenOffsetBegin_=tokenOffsetBegin_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.tokenOffsetEnd_=tokenOffsetEnd_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.sentenceIndex_=sentenceIndex_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.characterOffsetBegin_=characterOffsetBegin_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.characterOffsetEnd_=characterOffsetEnd_;
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000020;
  }
  if (parseTreeBuilder_ == null) {
    result.parseTree_=parseTree_;
  }
 else {
    result.parseTree_=parseTreeBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000040;
  }
  if (basicDependenciesBuilder_ == null) {
    result.basicDependencies_=basicDependencies_;
  }
 else {
    result.basicDependencies_=basicDependenciesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000080;
  }
  if (collapsedDependenciesBuilder_ == null) {
    result.collapsedDependencies_=collapsedDependencies_;
  }
 else {
    result.collapsedDependencies_=collapsedDependenciesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
    to_bitField0_|=0x00000100;
  }
  if (collapsedCCProcessedDependenciesBuilder_ == null) {
    result.collapsedCCProcessedDependencies_=collapsedCCProcessedDependencies_;
  }
 else {
    result.collapsedCCProcessedDependencies_=collapsedCCProcessedDependenciesBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
    to_bitField0_|=0x00000200;
  }
  result.paragraph_=paragraph_;
  if (entityBuilder_ == null) {
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      entity_=java.util.Collections.unmodifiableList(entity_);
      bitField0_=(bitField0_ & ~0x00000400);
    }
    result.entity_=entity_;
  }
 else {
    result.entity_=entityBuilder_.build();
  }
  if (relationBuilder_ == null) {
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      relation_=java.util.Collections.unmodifiableList(relation_);
      bitField0_=(bitField0_ & ~0x00000800);
    }
    result.relation_=relation_;
  }
 else {
    result.relation_=relationBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
