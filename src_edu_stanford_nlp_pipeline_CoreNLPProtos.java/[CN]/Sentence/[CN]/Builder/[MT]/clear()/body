{
  super.clear();
  if (tokenBuilder_ == null) {
    token_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00000001);
  }
 else {
    tokenBuilder_.clear();
  }
  tokenOffsetBegin_=0;
  bitField0_=(bitField0_ & ~0x00000002);
  tokenOffsetEnd_=0;
  bitField0_=(bitField0_ & ~0x00000004);
  sentenceIndex_=0;
  bitField0_=(bitField0_ & ~0x00000008);
  characterOffsetBegin_=0;
  bitField0_=(bitField0_ & ~0x00000010);
  characterOffsetEnd_=0;
  bitField0_=(bitField0_ & ~0x00000020);
  if (parseTreeBuilder_ == null) {
    parseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  }
 else {
    parseTreeBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000040);
  if (binarizedParseTreeBuilder_ == null) {
    binarizedParseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  }
 else {
    binarizedParseTreeBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000080);
  if (annotatedParseTreeBuilder_ == null) {
    annotatedParseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  }
 else {
    annotatedParseTreeBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000100);
  sentiment_="";
  bitField0_=(bitField0_ & ~0x00000200);
  if (basicDependenciesBuilder_ == null) {
    basicDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  }
 else {
    basicDependenciesBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000400);
  if (collapsedDependenciesBuilder_ == null) {
    collapsedDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  }
 else {
    collapsedDependenciesBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000800);
  if (collapsedCCProcessedDependenciesBuilder_ == null) {
    collapsedCCProcessedDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  }
 else {
    collapsedCCProcessedDependenciesBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00001000);
  paragraph_=0;
  bitField0_=(bitField0_ & ~0x00002000);
  text_="";
  bitField0_=(bitField0_ & ~0x00004000);
  hasRelationAnnotations_=false;
  bitField0_=(bitField0_ & ~0x00008000);
  if (entityBuilder_ == null) {
    entity_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00010000);
  }
 else {
    entityBuilder_.clear();
  }
  if (relationBuilder_ == null) {
    relation_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00020000);
  }
 else {
    relationBuilder_.clear();
  }
  hasNumerizedTokensAnnotation_=false;
  bitField0_=(bitField0_ & ~0x00040000);
  return this;
}
