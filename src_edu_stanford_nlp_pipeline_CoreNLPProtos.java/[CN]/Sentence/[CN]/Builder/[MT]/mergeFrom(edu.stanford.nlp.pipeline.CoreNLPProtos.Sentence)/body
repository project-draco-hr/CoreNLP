{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance())   return this;
  if (tokenBuilder_ == null) {
    if (!other.token_.isEmpty()) {
      if (token_.isEmpty()) {
        token_=other.token_;
        bitField0_=(bitField0_ & ~0x00000001);
      }
 else {
        ensureTokenIsMutable();
        token_.addAll(other.token_);
      }
      onChanged();
    }
  }
 else {
    if (!other.token_.isEmpty()) {
      if (tokenBuilder_.isEmpty()) {
        tokenBuilder_.dispose();
        tokenBuilder_=null;
        token_=other.token_;
        bitField0_=(bitField0_ & ~0x00000001);
        tokenBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getTokenFieldBuilder() : null;
      }
 else {
        tokenBuilder_.addAllMessages(other.token_);
      }
    }
  }
  if (other.hasTokenOffsetBegin()) {
    setTokenOffsetBegin(other.getTokenOffsetBegin());
  }
  if (other.hasTokenOffsetEnd()) {
    setTokenOffsetEnd(other.getTokenOffsetEnd());
  }
  if (other.hasSentenceIndex()) {
    setSentenceIndex(other.getSentenceIndex());
  }
  if (other.hasCharacterOffsetBegin()) {
    setCharacterOffsetBegin(other.getCharacterOffsetBegin());
  }
  if (other.hasCharacterOffsetEnd()) {
    setCharacterOffsetEnd(other.getCharacterOffsetEnd());
  }
  if (other.hasParseTree()) {
    mergeParseTree(other.getParseTree());
  }
  if (other.hasBinarizedParseTree()) {
    mergeBinarizedParseTree(other.getBinarizedParseTree());
  }
  if (other.hasAnnotatedParseTree()) {
    mergeAnnotatedParseTree(other.getAnnotatedParseTree());
  }
  if (other.hasSentiment()) {
    bitField0_|=0x00000200;
    sentiment_=other.sentiment_;
    onChanged();
  }
  if (kBestParseTreesBuilder_ == null) {
    if (!other.kBestParseTrees_.isEmpty()) {
      if (kBestParseTrees_.isEmpty()) {
        kBestParseTrees_=other.kBestParseTrees_;
        bitField0_=(bitField0_ & ~0x00000400);
      }
 else {
        ensureKBestParseTreesIsMutable();
        kBestParseTrees_.addAll(other.kBestParseTrees_);
      }
      onChanged();
    }
  }
 else {
    if (!other.kBestParseTrees_.isEmpty()) {
      if (kBestParseTreesBuilder_.isEmpty()) {
        kBestParseTreesBuilder_.dispose();
        kBestParseTreesBuilder_=null;
        kBestParseTrees_=other.kBestParseTrees_;
        bitField0_=(bitField0_ & ~0x00000400);
        kBestParseTreesBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getKBestParseTreesFieldBuilder() : null;
      }
 else {
        kBestParseTreesBuilder_.addAllMessages(other.kBestParseTrees_);
      }
    }
  }
  if (other.hasBasicDependencies()) {
    mergeBasicDependencies(other.getBasicDependencies());
  }
  if (other.hasCollapsedDependencies()) {
    mergeCollapsedDependencies(other.getCollapsedDependencies());
  }
  if (other.hasCollapsedCCProcessedDependencies()) {
    mergeCollapsedCCProcessedDependencies(other.getCollapsedCCProcessedDependencies());
  }
  if (other.hasAlternativeDependencies()) {
    mergeAlternativeDependencies(other.getAlternativeDependencies());
  }
  if (openieTripleBuilder_ == null) {
    if (!other.openieTriple_.isEmpty()) {
      if (openieTriple_.isEmpty()) {
        openieTriple_=other.openieTriple_;
        bitField0_=(bitField0_ & ~0x00008000);
      }
 else {
        ensureOpenieTripleIsMutable();
        openieTriple_.addAll(other.openieTriple_);
      }
      onChanged();
    }
  }
 else {
    if (!other.openieTriple_.isEmpty()) {
      if (openieTripleBuilder_.isEmpty()) {
        openieTripleBuilder_.dispose();
        openieTripleBuilder_=null;
        openieTriple_=other.openieTriple_;
        bitField0_=(bitField0_ & ~0x00008000);
        openieTripleBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getOpenieTripleFieldBuilder() : null;
      }
 else {
        openieTripleBuilder_.addAllMessages(other.openieTriple_);
      }
    }
  }
  if (entailedSentenceBuilder_ == null) {
    if (!other.entailedSentence_.isEmpty()) {
      if (entailedSentence_.isEmpty()) {
        entailedSentence_=other.entailedSentence_;
        bitField0_=(bitField0_ & ~0x00010000);
      }
 else {
        ensureEntailedSentenceIsMutable();
        entailedSentence_.addAll(other.entailedSentence_);
      }
      onChanged();
    }
  }
 else {
    if (!other.entailedSentence_.isEmpty()) {
      if (entailedSentenceBuilder_.isEmpty()) {
        entailedSentenceBuilder_.dispose();
        entailedSentenceBuilder_=null;
        entailedSentence_=other.entailedSentence_;
        bitField0_=(bitField0_ & ~0x00010000);
        entailedSentenceBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getEntailedSentenceFieldBuilder() : null;
      }
 else {
        entailedSentenceBuilder_.addAllMessages(other.entailedSentence_);
      }
    }
  }
  if (other.hasParagraph()) {
    setParagraph(other.getParagraph());
  }
  if (other.hasText()) {
    bitField0_|=0x00040000;
    text_=other.text_;
    onChanged();
  }
  if (other.hasHasRelationAnnotations()) {
    setHasRelationAnnotations(other.getHasRelationAnnotations());
  }
  if (entityBuilder_ == null) {
    if (!other.entity_.isEmpty()) {
      if (entity_.isEmpty()) {
        entity_=other.entity_;
        bitField0_=(bitField0_ & ~0x00100000);
      }
 else {
        ensureEntityIsMutable();
        entity_.addAll(other.entity_);
      }
      onChanged();
    }
  }
 else {
    if (!other.entity_.isEmpty()) {
      if (entityBuilder_.isEmpty()) {
        entityBuilder_.dispose();
        entityBuilder_=null;
        entity_=other.entity_;
        bitField0_=(bitField0_ & ~0x00100000);
        entityBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getEntityFieldBuilder() : null;
      }
 else {
        entityBuilder_.addAllMessages(other.entity_);
      }
    }
  }
  if (relationBuilder_ == null) {
    if (!other.relation_.isEmpty()) {
      if (relation_.isEmpty()) {
        relation_=other.relation_;
        bitField0_=(bitField0_ & ~0x00200000);
      }
 else {
        ensureRelationIsMutable();
        relation_.addAll(other.relation_);
      }
      onChanged();
    }
  }
 else {
    if (!other.relation_.isEmpty()) {
      if (relationBuilder_.isEmpty()) {
        relationBuilder_.dispose();
        relationBuilder_=null;
        relation_=other.relation_;
        bitField0_=(bitField0_ & ~0x00200000);
        relationBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getRelationFieldBuilder() : null;
      }
 else {
        relationBuilder_.addAllMessages(other.relation_);
      }
    }
  }
  if (other.hasHasNumerizedTokensAnnotation()) {
    setHasNumerizedTokensAnnotation(other.getHasNumerizedTokensAnnotation());
  }
  if (mentionsBuilder_ == null) {
    if (!other.mentions_.isEmpty()) {
      if (mentions_.isEmpty()) {
        mentions_=other.mentions_;
        bitField0_=(bitField0_ & ~0x00800000);
      }
 else {
        ensureMentionsIsMutable();
        mentions_.addAll(other.mentions_);
      }
      onChanged();
    }
  }
 else {
    if (!other.mentions_.isEmpty()) {
      if (mentionsBuilder_.isEmpty()) {
        mentionsBuilder_.dispose();
        mentionsBuilder_=null;
        mentions_=other.mentions_;
        bitField0_=(bitField0_ & ~0x00800000);
        mentionsBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getMentionsFieldBuilder() : null;
      }
 else {
        mentionsBuilder_.addAllMessages(other.mentions_);
      }
    }
  }
  if (other.hasConllUFeatures()) {
    mergeConllUFeatures(other.getConllUFeatures());
  }
  this.mergeExtensionFields(other);
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
