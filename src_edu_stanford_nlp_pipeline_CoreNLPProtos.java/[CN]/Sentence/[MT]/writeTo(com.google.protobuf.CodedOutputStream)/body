{
  getSerializedSize();
  com.google.protobuf.GeneratedMessage.ExtendableMessage<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence>.ExtensionWriter extensionWriter=newExtensionWriter();
  for (int i=0; i < token_.size(); i++) {
    output.writeMessage(1,token_.get(i));
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeUInt32(2,tokenOffsetBegin_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeUInt32(3,tokenOffsetEnd_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeUInt32(4,sentenceIndex_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeUInt32(5,characterOffsetBegin_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeUInt32(6,characterOffsetEnd_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeMessage(7,parseTree_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeMessage(8,basicDependencies_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeMessage(9,collapsedDependencies_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeMessage(10,collapsedCCProcessedDependencies_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeUInt32(11,paragraph_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeBytes(12,getTextBytes());
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeMessage(13,alternativeDependencies_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeMessage(31,binarizedParseTree_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeMessage(32,annotatedParseTree_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeBytes(33,getSentimentBytes());
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeBool(51,hasRelationAnnotations_);
  }
  for (int i=0; i < entity_.size(); i++) {
    output.writeMessage(52,entity_.get(i));
  }
  for (int i=0; i < relation_.size(); i++) {
    output.writeMessage(53,relation_.get(i));
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeBool(54,hasNumerizedTokensAnnotation_);
  }
  for (int i=0; i < mentions_.size(); i++) {
    output.writeMessage(55,mentions_.get(i));
  }
  extensionWriter.writeUntil(256,output);
  getUnknownFields().writeTo(output);
}
