{
  token_=java.util.Collections.emptyList();
  tokenOffsetBegin_=0;
  tokenOffsetEnd_=0;
  sentenceIndex_=0;
  characterOffsetBegin_=0;
  characterOffsetEnd_=0;
  parseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  binarizedParseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  annotatedParseTree_=edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
  sentiment_="";
  kBestParseTrees_=java.util.Collections.emptyList();
  basicDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  collapsedDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  collapsedCCProcessedDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  alternativeDependencies_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  openieTriple_=java.util.Collections.emptyList();
  entailedSentence_=java.util.Collections.emptyList();
  paragraph_=0;
  text_="";
  hasRelationAnnotations_=false;
  entity_=java.util.Collections.emptyList();
  relation_=java.util.Collections.emptyList();
  hasNumerizedTokensAnnotation_=false;
  mentions_=java.util.Collections.emptyList();
}
