{
  this();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
      token_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>();
      mutable_bitField0_|=0x00000001;
    }
    token_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Token.parser(),extensionRegistry));
    break;
  }
case 16:
{
  bitField0_|=0x00000001;
  tokenOffsetBegin_=input.readUInt32();
  break;
}
case 24:
{
bitField0_|=0x00000002;
tokenOffsetEnd_=input.readUInt32();
break;
}
case 32:
{
bitField0_|=0x00000004;
sentenceIndex_=input.readUInt32();
break;
}
case 40:
{
bitField0_|=0x00000008;
characterOffsetBegin_=input.readUInt32();
break;
}
case 48:
{
bitField0_|=0x00000010;
characterOffsetEnd_=input.readUInt32();
break;
}
case 58:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder=null;
if (((bitField0_ & 0x00000020) == 0x00000020)) {
subBuilder=parseTree_.toBuilder();
}
parseTree_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(parseTree_);
parseTree_=subBuilder.buildPartial();
}
bitField0_|=0x00000020;
break;
}
case 66:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder=null;
if (((bitField0_ & 0x00000200) == 0x00000200)) {
subBuilder=basicDependencies_.toBuilder();
}
basicDependencies_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(basicDependencies_);
basicDependencies_=subBuilder.buildPartial();
}
bitField0_|=0x00000200;
break;
}
case 74:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder=null;
if (((bitField0_ & 0x00000400) == 0x00000400)) {
subBuilder=collapsedDependencies_.toBuilder();
}
collapsedDependencies_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(collapsedDependencies_);
collapsedDependencies_=subBuilder.buildPartial();
}
bitField0_|=0x00000400;
break;
}
case 82:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder=null;
if (((bitField0_ & 0x00000800) == 0x00000800)) {
subBuilder=collapsedCCProcessedDependencies_.toBuilder();
}
collapsedCCProcessedDependencies_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(collapsedCCProcessedDependencies_);
collapsedCCProcessedDependencies_=subBuilder.buildPartial();
}
bitField0_|=0x00000800;
break;
}
case 88:
{
bitField0_|=0x00002000;
paragraph_=input.readUInt32();
break;
}
case 98:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00004000;
text_=bs;
break;
}
case 106:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder=null;
if (((bitField0_ & 0x00001000) == 0x00001000)) {
subBuilder=alternativeDependencies_.toBuilder();
}
alternativeDependencies_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(alternativeDependencies_);
alternativeDependencies_=subBuilder.buildPartial();
}
bitField0_|=0x00001000;
break;
}
case 114:
{
if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
openieTriple_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.OpenIETriple>();
mutable_bitField0_|=0x00008000;
}
openieTriple_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.OpenIETriple.parser(),extensionRegistry));
break;
}
case 122:
{
if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
entailedSentence_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment>();
mutable_bitField0_|=0x00010000;
}
entailedSentence_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.parser(),extensionRegistry));
break;
}
case 250:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder=null;
if (((bitField0_ & 0x00000040) == 0x00000040)) {
subBuilder=binarizedParseTree_.toBuilder();
}
binarizedParseTree_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(binarizedParseTree_);
binarizedParseTree_=subBuilder.buildPartial();
}
bitField0_|=0x00000040;
break;
}
case 258:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder=null;
if (((bitField0_ & 0x00000080) == 0x00000080)) {
subBuilder=annotatedParseTree_.toBuilder();
}
annotatedParseTree_=input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.parser(),extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(annotatedParseTree_);
annotatedParseTree_=subBuilder.buildPartial();
}
bitField0_|=0x00000080;
break;
}
case 266:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00000100;
sentiment_=bs;
break;
}
case 274:
{
if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
kBestParseTrees_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree>();
mutable_bitField0_|=0x00000400;
}
kBestParseTrees_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.parser(),extensionRegistry));
break;
}
case 408:
{
bitField0_|=0x00008000;
hasRelationAnnotations_=input.readBool();
break;
}
case 418:
{
if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
entity_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>();
mutable_bitField0_|=0x00100000;
}
entity_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.parser(),extensionRegistry));
break;
}
case 426:
{
if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
relation_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation>();
mutable_bitField0_|=0x00200000;
}
relation_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.parser(),extensionRegistry));
break;
}
case 432:
{
bitField0_|=0x00010000;
hasNumerizedTokensAnnotation_=input.readBool();
break;
}
case 442:
{
if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
mentions_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention>();
mutable_bitField0_|=0x00800000;
}
mentions_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.parser(),extensionRegistry));
break;
}
case 450:
{
if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
mentionsForCoref_=new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention>();
mutable_bitField0_|=0x01000000;
}
mentionsForCoref_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.parser(),extensionRegistry));
break;
}
case 456:
{
bitField0_|=0x00020000;
hasCorefMentionsAnnotation_=input.readBool();
break;
}
case 466:
{
com.google.protobuf.ByteString bs=input.readBytes();
bitField0_|=0x00040000;
sentenceID_=bs;
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw new RuntimeException(e.setUnfinishedMessage(this));
}
catch (java.io.IOException e) {
throw new RuntimeException(new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this));
}
 finally {
if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
token_=java.util.Collections.unmodifiableList(token_);
}
if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
openieTriple_=java.util.Collections.unmodifiableList(openieTriple_);
}
if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
entailedSentence_=java.util.Collections.unmodifiableList(entailedSentence_);
}
if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
kBestParseTrees_=java.util.Collections.unmodifiableList(kBestParseTrees_);
}
if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
entity_=java.util.Collections.unmodifiableList(entity_);
}
if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
relation_=java.util.Collections.unmodifiableList(relation_);
}
if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
mentions_=java.util.Collections.unmodifiableList(mentions_);
}
if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
mentionsForCoref_=java.util.Collections.unmodifiableList(mentionsForCoref_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
