{
  super.clear();
  word_="";
  bitField0_=(bitField0_ & ~0x00000001);
  pos_="";
  bitField0_=(bitField0_ & ~0x00000002);
  value_="";
  bitField0_=(bitField0_ & ~0x00000004);
  category_="";
  bitField0_=(bitField0_ & ~0x00000008);
  before_="";
  bitField0_=(bitField0_ & ~0x00000010);
  after_="";
  bitField0_=(bitField0_ & ~0x00000020);
  originalText_="";
  bitField0_=(bitField0_ & ~0x00000040);
  ner_="";
  bitField0_=(bitField0_ & ~0x00000080);
  normalizedNER_="";
  bitField0_=(bitField0_ & ~0x00000100);
  lemma_="";
  bitField0_=(bitField0_ & ~0x00000200);
  beginChar_=0;
  bitField0_=(bitField0_ & ~0x00000400);
  endChar_=0;
  bitField0_=(bitField0_ & ~0x00000800);
  utterance_=0;
  bitField0_=(bitField0_ & ~0x00001000);
  speaker_="";
  bitField0_=(bitField0_ & ~0x00002000);
  beginIndex_=0;
  bitField0_=(bitField0_ & ~0x00004000);
  endIndex_=0;
  bitField0_=(bitField0_ & ~0x00008000);
  tokenBeginIndex_=0;
  bitField0_=(bitField0_ & ~0x00010000);
  tokenEndIndex_=0;
  bitField0_=(bitField0_ & ~0x00020000);
  if (timexValueBuilder_ == null) {
    timexValue_=edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
  }
 else {
    timexValueBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00040000);
  hasXmlContext_=false;
  bitField0_=(bitField0_ & ~0x00080000);
  xmlContext_=com.google.protobuf.LazyStringArrayList.EMPTY;
  bitField0_=(bitField0_ & ~0x00100000);
  corefClusterID_=0;
  bitField0_=(bitField0_ & ~0x00200000);
  answer_="";
  bitField0_=(bitField0_ & ~0x00400000);
  headWordIndex_=0;
  bitField0_=(bitField0_ & ~0x00800000);
  if (operatorBuilder_ == null) {
    operator_=edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
  }
 else {
    operatorBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x01000000);
  if (polarityBuilder_ == null) {
    polarity_=edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
  }
 else {
    polarityBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x02000000);
  if (spanBuilder_ == null) {
    span_=edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
  }
 else {
    spanBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x04000000);
  sentiment_="";
  bitField0_=(bitField0_ & ~0x08000000);
  quotationIndex_=0;
  bitField0_=(bitField0_ & ~0x10000000);
  gender_="";
  bitField0_=(bitField0_ & ~0x20000000);
  trueCase_="";
  bitField0_=(bitField0_ & ~0x40000000);
  trueCaseText_="";
  bitField0_=(bitField0_ & ~0x80000000);
  return this;
}
