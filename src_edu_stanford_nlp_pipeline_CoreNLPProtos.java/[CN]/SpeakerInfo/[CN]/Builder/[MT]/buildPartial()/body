{
  edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo result=new edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.speakerId_=speakerId_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.speakerName_=speakerName_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.speakerDesc_=speakerDesc_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.speakerIdIsNumber_=speakerIdIsNumber_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.speakerIdIsAutoDetermined_=speakerIdIsAutoDetermined_;
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    speakerNameStrings_=speakerNameStrings_.getUnmodifiableView();
    bitField0_=(bitField0_ & ~0x00000020);
  }
  result.speakerNameStrings_=speakerNameStrings_;
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    mentions_=java.util.Collections.unmodifiableList(mentions_);
    bitField0_=(bitField0_ & ~0x00000040);
  }
  result.mentions_=mentions_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
