{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance())   return this;
  if (other.hasSpeakerId()) {
    bitField0_|=0x00000001;
    speakerId_=other.speakerId_;
    onChanged();
  }
  if (other.hasSpeakerName()) {
    bitField0_|=0x00000002;
    speakerName_=other.speakerName_;
    onChanged();
  }
  if (other.hasSpeakerDesc()) {
    bitField0_|=0x00000004;
    speakerDesc_=other.speakerDesc_;
    onChanged();
  }
  if (other.hasSpeakerIdIsNumber()) {
    setSpeakerIdIsNumber(other.getSpeakerIdIsNumber());
  }
  if (other.hasSpeakerIdIsAutoDetermined()) {
    setSpeakerIdIsAutoDetermined(other.getSpeakerIdIsAutoDetermined());
  }
  if (!other.speakerNameStrings_.isEmpty()) {
    if (speakerNameStrings_.isEmpty()) {
      speakerNameStrings_=other.speakerNameStrings_;
      bitField0_=(bitField0_ & ~0x00000020);
    }
 else {
      ensureSpeakerNameStringsIsMutable();
      speakerNameStrings_.addAll(other.speakerNameStrings_);
    }
    onChanged();
  }
  if (!other.mentions_.isEmpty()) {
    if (mentions_.isEmpty()) {
      mentions_=other.mentions_;
      bitField0_=(bitField0_ & ~0x00000040);
    }
 else {
      ensureMentionsIsMutable();
      mentions_.addAll(other.mentions_);
    }
    onChanged();
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
