{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getSpeakerIdBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getSpeakerNameBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(3,getSpeakerDescBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(4,speakerIdIsNumber_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(5,speakerIdIsAutoDetermined_);
  }
{
    int dataSize=0;
    for (int i=0; i < speakerNameStrings_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(speakerNameStrings_.getByteString(i));
    }
    size+=dataSize;
    size+=1 * getSpeakerNameStringsList().size();
  }
{
    int dataSize=0;
    for (int i=0; i < mentions_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(mentions_.get(i));
    }
    size+=dataSize;
    size+=1 * getMentionsList().size();
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
