{
  edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph result=new edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (nodeBuilder_ == null) {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      node_=java.util.Collections.unmodifiableList(node_);
      bitField0_=(bitField0_ & ~0x00000001);
    }
    result.node_=node_;
  }
 else {
    result.node_=nodeBuilder_.build();
  }
  if (edgeBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      edge_=java.util.Collections.unmodifiableList(edge_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.edge_=edge_;
  }
 else {
    result.edge_=edgeBuilder_.build();
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    root_=java.util.Collections.unmodifiableList(root_);
    bitField0_=(bitField0_ & ~0x00000004);
  }
  result.root_=root_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000001;
  }
  result.language_=language_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
