{
  edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple result=new edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.subject_=subject_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.relation_=relation_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.object_=object_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.confidence_=confidence_;
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    subjectTokens_=java.util.Collections.unmodifiableList(subjectTokens_);
    bitField0_=(bitField0_ & ~0x00000010);
  }
  result.subjectTokens_=subjectTokens_;
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    relationTokens_=java.util.Collections.unmodifiableList(relationTokens_);
    bitField0_=(bitField0_ & ~0x00000020);
  }
  result.relationTokens_=relationTokens_;
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    objectTokens_=java.util.Collections.unmodifiableList(objectTokens_);
    bitField0_=(bitField0_ & ~0x00000040);
  }
  result.objectTokens_=objectTokens_;
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000010;
  }
  if (treeBuilder_ == null) {
    result.tree_=tree_;
  }
 else {
    result.tree_=treeBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
    to_bitField0_|=0x00000020;
  }
  result.istmod_=istmod_;
  if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
    to_bitField0_|=0x00000040;
  }
  result.prefixBe_=prefixBe_;
  if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
    to_bitField0_|=0x00000080;
  }
  result.suffixBe_=suffixBe_;
  if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
    to_bitField0_|=0x00000100;
  }
  result.suffixOf_=suffixOf_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
