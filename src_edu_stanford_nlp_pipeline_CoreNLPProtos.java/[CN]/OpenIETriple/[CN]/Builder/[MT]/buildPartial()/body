{
  edu.stanford.nlp.pipeline.CoreNLPProtos.OpenIETriple result=new edu.stanford.nlp.pipeline.CoreNLPProtos.OpenIETriple(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.subject_=subject_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.relation_=relation_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.object_=object_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.confidence_=confidence_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  if (subjectSpanBuilder_ == null) {
    result.subjectSpan_=subjectSpan_;
  }
 else {
    result.subjectSpan_=subjectSpanBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000020;
  }
  if (relationSpanBuilder_ == null) {
    result.relationSpan_=relationSpan_;
  }
 else {
    result.relationSpan_=relationSpanBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000040;
  }
  if (objectSpanBuilder_ == null) {
    result.objectSpan_=objectSpan_;
  }
 else {
    result.objectSpan_=objectSpanBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000080;
  }
  if (treeBuilder_ == null) {
    result.tree_=tree_;
  }
 else {
    result.tree_=treeBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
