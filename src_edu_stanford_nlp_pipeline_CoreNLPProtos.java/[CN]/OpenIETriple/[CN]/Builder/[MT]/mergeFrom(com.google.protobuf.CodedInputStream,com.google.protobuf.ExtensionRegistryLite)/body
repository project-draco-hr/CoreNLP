{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 10:
{
bitField0_|=0x00000001;
subject_=input.readBytes();
break;
}
case 18:
{
bitField0_|=0x00000002;
relation_=input.readBytes();
break;
}
case 26:
{
bitField0_|=0x00000004;
object_=input.readBytes();
break;
}
case 33:
{
bitField0_|=0x00000008;
confidence_=input.readDouble();
break;
}
case 42:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder();
if (hasSubjectSpan()) {
subBuilder.mergeFrom(getSubjectSpan());
}
input.readMessage(subBuilder,extensionRegistry);
setSubjectSpan(subBuilder.buildPartial());
break;
}
case 50:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder();
if (hasRelationSpan()) {
subBuilder.mergeFrom(getRelationSpan());
}
input.readMessage(subBuilder,extensionRegistry);
setRelationSpan(subBuilder.buildPartial());
break;
}
case 58:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder();
if (hasObjectSpan()) {
subBuilder.mergeFrom(getObjectSpan());
}
input.readMessage(subBuilder,extensionRegistry);
setObjectSpan(subBuilder.buildPartial());
break;
}
case 66:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder();
if (hasTree()) {
subBuilder.mergeFrom(getTree());
}
input.readMessage(subBuilder,extensionRegistry);
setTree(subBuilder.buildPartial());
break;
}
}
}
}
