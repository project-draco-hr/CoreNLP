{
  super.clear();
  subject_="";
  bitField0_=(bitField0_ & ~0x00000001);
  relation_="";
  bitField0_=(bitField0_ & ~0x00000002);
  object_="";
  bitField0_=(bitField0_ & ~0x00000004);
  confidence_=0D;
  bitField0_=(bitField0_ & ~0x00000008);
  subjectTokens_=java.util.Collections.emptyList();
  ;
  bitField0_=(bitField0_ & ~0x00000010);
  relationTokens_=java.util.Collections.emptyList();
  ;
  bitField0_=(bitField0_ & ~0x00000020);
  objectTokens_=java.util.Collections.emptyList();
  ;
  bitField0_=(bitField0_ & ~0x00000040);
  if (treeBuilder_ == null) {
    tree_=edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
  }
 else {
    treeBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000080);
  istmod_=false;
  bitField0_=(bitField0_ & ~0x00000100);
  prefixBe_=false;
  bitField0_=(bitField0_ & ~0x00000200);
  suffixBe_=false;
  bitField0_=(bitField0_ & ~0x00000400);
  suffixOf_=false;
  bitField0_=(bitField0_ & ~0x00000800);
  return this;
}
