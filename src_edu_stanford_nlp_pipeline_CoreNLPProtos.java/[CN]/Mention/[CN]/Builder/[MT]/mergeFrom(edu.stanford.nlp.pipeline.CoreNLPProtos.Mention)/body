{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.getDefaultInstance())   return this;
  if (other.hasMentionID()) {
    setMentionID(other.getMentionID());
  }
  if (other.hasMentionType()) {
    bitField0_|=0x00000002;
    mentionType_=other.mentionType_;
    onChanged();
  }
  if (other.hasNumber()) {
    bitField0_|=0x00000004;
    number_=other.number_;
    onChanged();
  }
  if (other.hasGender()) {
    bitField0_|=0x00000008;
    gender_=other.gender_;
    onChanged();
  }
  if (other.hasAnimacy()) {
    bitField0_|=0x00000010;
    animacy_=other.animacy_;
    onChanged();
  }
  if (other.hasPerson()) {
    bitField0_|=0x00000020;
    person_=other.person_;
    onChanged();
  }
  if (other.hasStartIndex()) {
    setStartIndex(other.getStartIndex());
  }
  if (other.hasEndIndex()) {
    setEndIndex(other.getEndIndex());
  }
  if (other.hasHeadIndex()) {
    setHeadIndex(other.getHeadIndex());
  }
  if (other.hasHeadString()) {
    bitField0_|=0x00000200;
    headString_=other.headString_;
    onChanged();
  }
  if (other.hasNerString()) {
    bitField0_|=0x00000400;
    nerString_=other.nerString_;
    onChanged();
  }
  if (other.hasOriginalRef()) {
    setOriginalRef(other.getOriginalRef());
  }
  if (other.hasGoldCorefClusterID()) {
    setGoldCorefClusterID(other.getGoldCorefClusterID());
  }
  if (other.hasCorefClusterID()) {
    setCorefClusterID(other.getCorefClusterID());
  }
  if (other.hasMentionNum()) {
    setMentionNum(other.getMentionNum());
  }
  if (other.hasSentNum()) {
    setSentNum(other.getSentNum());
  }
  if (other.hasUtter()) {
    setUtter(other.getUtter());
  }
  if (other.hasParagraph()) {
    setParagraph(other.getParagraph());
  }
  if (other.hasIsSubject()) {
    setIsSubject(other.getIsSubject());
  }
  if (other.hasIsDirectObject()) {
    setIsDirectObject(other.getIsDirectObject());
  }
  if (other.hasIsIndirectObject()) {
    setIsIndirectObject(other.getIsIndirectObject());
  }
  if (other.hasIsPrepositionObject()) {
    setIsPrepositionObject(other.getIsPrepositionObject());
  }
  if (other.hasHasTwin()) {
    setHasTwin(other.getHasTwin());
  }
  if (other.hasGeneric()) {
    setGeneric(other.getGeneric());
  }
  if (other.hasIsSingleton()) {
    setIsSingleton(other.getIsSingleton());
  }
  if (other.hasHasBasicDependency()) {
    setHasBasicDependency(other.getHasBasicDependency());
  }
  if (other.hasHasCollapsedDependency()) {
    setHasCollapsedDependency(other.getHasCollapsedDependency());
  }
  if (other.hasHasContextParseTree()) {
    setHasContextParseTree(other.getHasContextParseTree());
  }
  if (other.hasHeadIndexedWord()) {
    mergeHeadIndexedWord(other.getHeadIndexedWord());
  }
  if (other.hasDependingVerb()) {
    mergeDependingVerb(other.getDependingVerb());
  }
  if (other.hasHeadWord()) {
    mergeHeadWord(other.getHeadWord());
  }
  if (other.hasSpeakerInfo()) {
    mergeSpeakerInfo(other.getSpeakerInfo());
  }
  if (sentenceWordsBuilder_ == null) {
    if (!other.sentenceWords_.isEmpty()) {
      if (sentenceWords_.isEmpty()) {
        sentenceWords_=other.sentenceWords_;
        bitField1_=(bitField1_ & ~0x00000001);
      }
 else {
        ensureSentenceWordsIsMutable();
        sentenceWords_.addAll(other.sentenceWords_);
      }
      onChanged();
    }
  }
 else {
    if (!other.sentenceWords_.isEmpty()) {
      if (sentenceWordsBuilder_.isEmpty()) {
        sentenceWordsBuilder_.dispose();
        sentenceWordsBuilder_=null;
        sentenceWords_=other.sentenceWords_;
        bitField1_=(bitField1_ & ~0x00000001);
        sentenceWordsBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getSentenceWordsFieldBuilder() : null;
      }
 else {
        sentenceWordsBuilder_.addAllMessages(other.sentenceWords_);
      }
    }
  }
  if (originalSpanBuilder_ == null) {
    if (!other.originalSpan_.isEmpty()) {
      if (originalSpan_.isEmpty()) {
        originalSpan_=other.originalSpan_;
        bitField1_=(bitField1_ & ~0x00000002);
      }
 else {
        ensureOriginalSpanIsMutable();
        originalSpan_.addAll(other.originalSpan_);
      }
      onChanged();
    }
  }
 else {
    if (!other.originalSpan_.isEmpty()) {
      if (originalSpanBuilder_.isEmpty()) {
        originalSpanBuilder_.dispose();
        originalSpanBuilder_=null;
        originalSpan_=other.originalSpan_;
        bitField1_=(bitField1_ & ~0x00000002);
        originalSpanBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getOriginalSpanFieldBuilder() : null;
      }
 else {
        originalSpanBuilder_.addAllMessages(other.originalSpan_);
      }
    }
  }
  if (!other.dependents_.isEmpty()) {
    if (dependents_.isEmpty()) {
      dependents_=other.dependents_;
      bitField1_=(bitField1_ & ~0x00000004);
    }
 else {
      ensureDependentsIsMutable();
      dependents_.addAll(other.dependents_);
    }
    onChanged();
  }
  if (!other.preprocessedTerms_.isEmpty()) {
    if (preprocessedTerms_.isEmpty()) {
      preprocessedTerms_=other.preprocessedTerms_;
      bitField1_=(bitField1_ & ~0x00000008);
    }
 else {
      ensurePreprocessedTermsIsMutable();
      preprocessedTerms_.addAll(other.preprocessedTerms_);
    }
    onChanged();
  }
  if (!other.appositions_.isEmpty()) {
    if (appositions_.isEmpty()) {
      appositions_=other.appositions_;
      bitField1_=(bitField1_ & ~0x00000010);
    }
 else {
      ensureAppositionsIsMutable();
      appositions_.addAll(other.appositions_);
    }
    onChanged();
  }
  if (!other.predicateNominatives_.isEmpty()) {
    if (predicateNominatives_.isEmpty()) {
      predicateNominatives_=other.predicateNominatives_;
      bitField1_=(bitField1_ & ~0x00000020);
    }
 else {
      ensurePredicateNominativesIsMutable();
      predicateNominatives_.addAll(other.predicateNominatives_);
    }
    onChanged();
  }
  if (!other.relativePronouns_.isEmpty()) {
    if (relativePronouns_.isEmpty()) {
      relativePronouns_=other.relativePronouns_;
      bitField1_=(bitField1_ & ~0x00000040);
    }
 else {
      ensureRelativePronounsIsMutable();
      relativePronouns_.addAll(other.relativePronouns_);
    }
    onChanged();
  }
  if (!other.listMembers_.isEmpty()) {
    if (listMembers_.isEmpty()) {
      listMembers_=other.listMembers_;
      bitField1_=(bitField1_ & ~0x00000080);
    }
 else {
      ensureListMembersIsMutable();
      listMembers_.addAll(other.listMembers_);
    }
    onChanged();
  }
  if (!other.belongToLists_.isEmpty()) {
    if (belongToLists_.isEmpty()) {
      belongToLists_=other.belongToLists_;
      bitField1_=(bitField1_ & ~0x00000100);
    }
 else {
      ensureBelongToListsIsMutable();
      belongToLists_.addAll(other.belongToLists_);
    }
    onChanged();
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
