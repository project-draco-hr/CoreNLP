{
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeInt32(1,mentionID_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    com.google.protobuf.GeneratedMessage.writeString(output,2,mentionType_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    com.google.protobuf.GeneratedMessage.writeString(output,3,number_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    com.google.protobuf.GeneratedMessage.writeString(output,4,gender_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    com.google.protobuf.GeneratedMessage.writeString(output,5,animacy_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    com.google.protobuf.GeneratedMessage.writeString(output,6,person_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeUInt32(7,startIndex_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeUInt32(9,endIndex_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeUInt32(10,headIndex_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    com.google.protobuf.GeneratedMessage.writeString(output,11,headString_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    com.google.protobuf.GeneratedMessage.writeString(output,12,nerString_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeUInt32(13,originalRef_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeInt32(14,goldCorefClusterID_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeInt32(15,corefClusterID_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeUInt32(16,mentionNum_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeUInt32(17,sentNum_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeUInt32(18,utter_);
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    output.writeUInt32(19,paragraph_);
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    output.writeBool(20,isSubject_);
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    output.writeBool(21,isDirectObject_);
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    output.writeBool(22,isIndirectObject_);
  }
  if (((bitField0_ & 0x00200000) == 0x00200000)) {
    output.writeBool(23,isPrepositionObject_);
  }
  if (((bitField0_ & 0x00400000) == 0x00400000)) {
    output.writeBool(24,hasTwin_);
  }
  if (((bitField0_ & 0x00800000) == 0x00800000)) {
    output.writeBool(25,generic_);
  }
  if (((bitField0_ & 0x01000000) == 0x01000000)) {
    output.writeBool(26,isSingleton_);
  }
  if (((bitField0_ & 0x02000000) == 0x02000000)) {
    output.writeBool(27,hasBasicDependency_);
  }
  if (((bitField0_ & 0x04000000) == 0x04000000)) {
    output.writeBool(28,hasCollapsedDependency_);
  }
  if (((bitField0_ & 0x08000000) == 0x08000000)) {
    output.writeBool(29,hasContextParseTree_);
  }
  if (((bitField0_ & 0x10000000) == 0x10000000)) {
    output.writeMessage(30,getHeadIndexedWord());
  }
  if (((bitField0_ & 0x20000000) == 0x20000000)) {
    output.writeMessage(31,getDependingVerb());
  }
  if (((bitField0_ & 0x40000000) == 0x40000000)) {
    output.writeMessage(32,getHeadWord());
  }
  if (((bitField0_ & 0x80000000) == 0x80000000)) {
    output.writeMessage(33,getSpeakerInfo());
  }
  for (int i=0; i < sentenceWords_.size(); i++) {
    output.writeMessage(50,sentenceWords_.get(i));
  }
  for (int i=0; i < originalSpan_.size(); i++) {
    output.writeMessage(51,originalSpan_.get(i));
  }
  for (int i=0; i < dependents_.size(); i++) {
    com.google.protobuf.GeneratedMessage.writeString(output,52,dependents_.getRaw(i));
  }
  for (int i=0; i < preprocessedTerms_.size(); i++) {
    com.google.protobuf.GeneratedMessage.writeString(output,53,preprocessedTerms_.getRaw(i));
  }
  for (int i=0; i < appositions_.size(); i++) {
    output.writeInt32(54,appositions_.get(i));
  }
  for (int i=0; i < predicateNominatives_.size(); i++) {
    output.writeInt32(55,predicateNominatives_.get(i));
  }
  for (int i=0; i < relativePronouns_.size(); i++) {
    output.writeInt32(56,relativePronouns_.get(i));
  }
  for (int i=0; i < listMembers_.size(); i++) {
    output.writeInt32(57,listMembers_.get(i));
  }
  for (int i=0; i < belongToLists_.size(); i++) {
    output.writeInt32(58,belongToLists_.get(i));
  }
  unknownFields.writeTo(output);
}
