{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance())   return this;
  if (other.hasHeadStart()) {
    setHeadStart(other.getHeadStart());
  }
  if (other.hasHeadEnd()) {
    setHeadEnd(other.getHeadEnd());
  }
  if (other.hasMentionType()) {
    bitField0_|=0x00000004;
    mentionType_=other.mentionType_;
    onChanged();
  }
  if (other.hasNormalizedName()) {
    bitField0_|=0x00000008;
    normalizedName_=other.normalizedName_;
    onChanged();
  }
  if (other.hasHeadTokenIndex()) {
    setHeadTokenIndex(other.getHeadTokenIndex());
  }
  if (other.hasCorefID()) {
    bitField0_|=0x00000020;
    corefID_=other.corefID_;
    onChanged();
  }
  if (other.hasObjectID()) {
    bitField0_|=0x00000040;
    objectID_=other.objectID_;
    onChanged();
  }
  if (other.hasExtentStart()) {
    setExtentStart(other.getExtentStart());
  }
  if (other.hasExtentEnd()) {
    setExtentEnd(other.getExtentEnd());
  }
  if (other.hasType()) {
    bitField0_|=0x00000200;
    type_=other.type_;
    onChanged();
  }
  if (other.hasSubtype()) {
    bitField0_|=0x00000400;
    subtype_=other.subtype_;
    onChanged();
  }
  this.mergeUnknownFields(other.unknownFields);
  onChanged();
  return this;
}
