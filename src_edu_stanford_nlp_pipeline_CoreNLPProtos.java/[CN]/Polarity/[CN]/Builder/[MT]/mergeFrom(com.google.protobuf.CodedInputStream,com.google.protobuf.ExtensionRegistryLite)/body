{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 8:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
  unknownFields.mergeVarintField(1,rawValue);
}
 else {
  bitField0_|=0x00000001;
  projectEquivalence_=value;
}
break;
}
case 16:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(2,rawValue);
}
 else {
bitField0_|=0x00000002;
projectForwardEntailment_=value;
}
break;
}
case 24:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(3,rawValue);
}
 else {
bitField0_|=0x00000004;
projectReverseEntailment_=value;
}
break;
}
case 32:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(4,rawValue);
}
 else {
bitField0_|=0x00000008;
projectNegation_=value;
}
break;
}
case 40:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(5,rawValue);
}
 else {
bitField0_|=0x00000010;
projectAlternation_=value;
}
break;
}
case 48:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(6,rawValue);
}
 else {
bitField0_|=0x00000020;
projectCover_=value;
}
break;
}
case 56:
{
int rawValue=input.readEnum();
edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value=edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(7,rawValue);
}
 else {
bitField0_|=0x00000040;
projectIndependence_=value;
}
break;
}
}
}
}
