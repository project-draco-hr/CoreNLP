{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getTextBytes());
  }
  for (int i=0; i < sentence_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(2,sentence_.get(i));
  }
  for (int i=0; i < corefChain_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(3,corefChain_.get(i));
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(4,getDocIDBytes());
  }
  for (int i=0; i < sentencelessToken_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,sentencelessToken_.get(i));
  }
  for (int i=0; i < quote_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,quote_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(7,getDocDateBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(8,calendar_);
  }
  size+=extensionsSerializedSize();
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
