{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 10:
{
bitField0_|=0x00000001;
text_=input.readBytes();
break;
}
case 18:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addSentence(subBuilder.buildPartial());
break;
}
case 26:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addCorefChain(subBuilder.buildPartial());
break;
}
case 34:
{
bitField0_|=0x00000008;
docID_=input.readBytes();
break;
}
case 42:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Token.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addSentencelessToken(subBuilder.buildPartial());
break;
}
case 50:
{
edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder subBuilder=edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addQuote(subBuilder.buildPartial());
break;
}
}
}
}
