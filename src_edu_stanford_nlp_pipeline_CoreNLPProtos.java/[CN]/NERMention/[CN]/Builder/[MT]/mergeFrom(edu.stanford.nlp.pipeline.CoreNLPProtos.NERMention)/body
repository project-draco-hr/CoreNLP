{
  if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.getDefaultInstance())   return this;
  if (other.hasSentenceIndex()) {
    setSentenceIndex(other.getSentenceIndex());
  }
  if (other.hasTokenStartInSentenceInclusive()) {
    setTokenStartInSentenceInclusive(other.getTokenStartInSentenceInclusive());
  }
  if (other.hasTokenEndInSentenceExclusive()) {
    setTokenEndInSentenceExclusive(other.getTokenEndInSentenceExclusive());
  }
  if (other.hasNer()) {
    bitField0_|=0x00000008;
    ner_=other.ner_;
    onChanged();
  }
  if (other.hasNormalizedNER()) {
    bitField0_|=0x00000010;
    normalizedNER_=other.normalizedNER_;
    onChanged();
  }
  if (other.hasEntityType()) {
    bitField0_|=0x00000020;
    entityType_=other.entityType_;
    onChanged();
  }
  if (other.hasTimex()) {
    mergeTimex(other.getTimex());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
