{
  Collection<? extends Pair<F,L>> keys=weightCounter.keySet();
  featureIndex=new HashIndex<F>();
  labelIndex=new HashIndex<L>();
  for (  Pair<F,L> p : keys) {
    featureIndex.add(p.first());
    labelIndex.add(p.second());
  }
  thresholds=new double[labelIndex.size()];
  for (  L label : labelIndex) {
    thresholds[labelIndex.indexOf(label)]=thresholdsC.getCount(label);
  }
  weights=new double[featureIndex.size()][labelIndex.size()];
  Pair<F,L> tempPair=new Pair<F,L>();
  for (int f=0; f < weights.length; f++) {
    for (int l=0; l < weights[f].length; l++) {
      tempPair.first=featureIndex.get(f);
      tempPair.second=labelIndex.get(l);
      weights[f][l]=weightCounter.getCount(tempPair);
    }
  }
}
