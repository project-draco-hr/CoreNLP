{
  List<Pattern> regex=entry.regex;
  int rSize=regex.size();
  for (int start=searchStart, end=document.size() - regex.size(); start <= end; start++) {
    boolean failed=false;
    for (int i=0; i < rSize; i++) {
      Pattern pattern=regex.get(i);
      CoreLabel token=document.get(start + i);
      String NERType=token.get(CoreAnnotations.NamedEntityTagAnnotation.class);
      if (!pattern.matcher(token.word()).matches() || token.get(CoreAnnotations.AnswerAnnotation.class) != null || !(entry.overwritableTypes.contains(NERType) || myLabels.contains(NERType))) {
        failed=true;
        break;
      }
    }
    if (!failed) {
      return start;
    }
  }
  return -1;
}
