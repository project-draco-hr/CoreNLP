{
  super(new Properties());
  if (validPosRegex != null && !validPosRegex.equals("")) {
    validPosPattern=Pattern.compile(validPosRegex);
  }
 else {
    validPosPattern=null;
  }
  BufferedReader rd=null;
  try {
    rd=IOUtils.readerFromString(mapping);
    entries=readEntries(rd,ignoreCase);
  }
 catch (  IOException e) {
    throw new RuntimeIOException("Couldn't read RegexNER from " + mapping,e);
  }
 finally {
    IOUtils.closeIgnoringExceptions(rd);
  }
  this.ignoreCase=ignoreCase;
  myLabels=Generics.newHashSet();
  myLabels.add(flags.backgroundSymbol);
  myLabels.add(null);
  if (overwriteMyLabels) {
    for (    Entry entry : entries)     myLabels.add(entry.type);
  }
}
