{
  Model model=new JointModel(modBuckWeights,senseEvidenceMult,subcatEvidenceMult,x[0],x[1],0.5);
  int[] numCorrect=SynSense.kFoldTrainAndTestOneWord(model,word);
  double[] accuracies={(double)numCorrect[0] / SynSense.senseTrainData[word].size(),(double)numCorrect[1] / SynSense.subcatTrainData[word].size()};
  double senseErrReduc;
  if (senseBaseline == 1) {
    if (accuracies[0] < 1) {
      senseErrReduc=(accuracies[0] - 1);
    }
 else {
      senseErrReduc=0;
    }
  }
 else {
    senseErrReduc=(accuracies[0] - senseBaseline) / (1 - senseBaseline);
  }
  double subcatErrReduc;
  if (subcatBaseline == 1) {
    if (accuracies[1] < 1) {
      subcatErrReduc=(accuracies[1] - 1);
    }
 else {
      subcatErrReduc=0;
    }
  }
 else {
    subcatErrReduc=(accuracies[1] - subcatBaseline) / (1 - subcatBaseline);
  }
  double result=senseErrReduc + subcatErrReduc;
  if (result > bestResult) {
    bestResult=result;
    bestNumCorrect=numCorrect.clone();
  }
  System.out.print("new weights: ");
  for (int i=0; i < x.length; i++) {
    System.out.print(formatter.format(x[i]) + "\t");
  }
  System.out.println();
  System.out.println("numCorrect: " + numCorrect[0] + "\t"+ numCorrect[1]);
  System.out.println("accuracies: " + formatter.format(accuracies[0]) + '\t'+ formatter.format(accuracies[1]));
  System.out.println("score " + formatter.format(result));
  return -result;
}
