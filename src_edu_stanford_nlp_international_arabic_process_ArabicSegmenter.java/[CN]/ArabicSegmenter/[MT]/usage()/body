{
  String nl=System.getProperty("line.separator");
  StringBuilder sb=new StringBuilder();
  sb.append("Usage: java ").append(ArabicSegmenter.class.getName()).append(" OPTS < file_to_segment").append(nl);
  sb.append(nl).append(" Options:").append(nl);
  sb.append("  -help                : Print this message.").append(nl);
  sb.append("  -orthoOptions str    : Comma-separated list of orthographic normalization options to pass to ArabicTokenizer.").append(nl);
  sb.append("  -tokenized           : Text is already tokenized. Do not run internal tokenizer.").append(nl);
  sb.append("  -trainFile file      : Gold segmented IOB training file.").append(nl);
  sb.append("  -testFile  file      : Gold segmented IOB evaluation file.").append(nl);
  sb.append("  -textFile  file      : Raw input file to be segmented.").append(nl);
  sb.append("  -loadClassifier file : Load serialized classifier from file.").append(nl);
  sb.append("  -prefixMarker char   : Mark segmented prefixes with specified character.").append(nl);
  sb.append("  -suffixMarker char   : Mark segmented suffixes with specified character.").append(nl);
  sb.append("  -nthreads num        : Number of threads  (default: 1)").append(nl);
  sb.append("  -tedEval prefix      : Output TedEval-compliant gold and parse files.").append(nl);
  sb.append("  -featureFactory cls  : Name of feature factory class  (default: ").append(defaultFeatureFactory);
  sb.append(")").append(nl);
  sb.append("  -withDomains         : Train file (if given) and eval file have domain labels.").append(nl);
  sb.append("  -domain dom          : Assume one domain for all data (default: 123)").append(nl);
  sb.append(nl).append(" Otherwise, all flags correspond to those present in SeqClassifierFlags.java.").append(nl);
  return sb.toString();
}
