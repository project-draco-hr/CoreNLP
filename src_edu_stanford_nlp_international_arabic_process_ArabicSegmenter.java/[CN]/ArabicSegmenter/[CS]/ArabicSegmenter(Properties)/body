{
  isTokenized=props.containsKey(optTokenized);
  tokenizerOptions=props.getProperty(optTokenizer,null);
  tedEvalPrefix=props.getProperty(optTedEval,null);
  hasDomainLabels=props.containsKey(optDomains);
  tf=getTokenizerFactory();
  prefixMarker=props.getProperty(optPrefix,"");
  suffixMarker=props.getProperty(optSuffix,"");
  props.remove(optTokenizer);
  props.remove(optTokenized);
  props.remove(optPrefix);
  props.remove(optSuffix);
  props.remove(optThreads);
  props.remove(optTedEval);
  props.remove(optDomains);
  if (!props.containsKey(optFeatureFactory))   props.put(optFeatureFactory,defaultFeatureFactory);
  flags=new SeqClassifierFlags(props);
  classifier=new CRFClassifier<CoreLabel>(flags);
}
