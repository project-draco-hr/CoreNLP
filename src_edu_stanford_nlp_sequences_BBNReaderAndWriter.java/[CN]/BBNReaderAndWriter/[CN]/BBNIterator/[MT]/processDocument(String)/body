{
  List<CoreLabel> words=new ArrayList<CoreLabel>();
  Pattern xmlP=Pattern.compile("<.*?>",Pattern.DOTALL);
  Matcher xmlM=xmlP.matcher(doc);
  Pattern typeP=Pattern.compile("<[A-Z]*?EX\\s+TYPE=\"(.*?)\">",Pattern.DOTALL);
  Pattern endTypeP=Pattern.compile("</.*?>");
  int loc=0;
  String ans=flags.backgroundSymbol;
  while (true) {
    boolean found=xmlM.find();
    String prev;
    if (found) {
      prev=doc.substring(loc,xmlM.start());
    }
 else {
      prev=doc.substring(loc);
    }
    PTBTokenizer ptb=PTBTokenizer.newPTBTokenizer(new BufferedReader(new StringReader(prev)));
    while (ptb.hasNext()) {
      String w=ptb.next().toString();
      CoreLabel fl=new CoreLabel();
      fl.set(TextAnnotation.class,w);
      fl.set(AnswerAnnotation.class,ans);
      words.add(fl);
    }
    if (found) {
      String tag=xmlM.group(0);
      loc=xmlM.end();
      Matcher m=endTypeP.matcher(tag);
      if (m.matches()) {
        ans=flags.backgroundSymbol;
      }
 else {
        m=typeP.matcher(tag);
        if (m.matches()) {
          ans=m.group(1);
          if (ans.contains("DESC")) {
            ans=flags.backgroundSymbol;
          }
 else           if (ans.indexOf(':') > 0) {
            ans=ans.substring(0,ans.indexOf(':'));
          }
        }
 else         if (!tag.contains("DOCNO")) {
          System.err.println("tag: " + tag);
        }
      }
    }
 else {
      break;
    }
  }
  return words;
}
