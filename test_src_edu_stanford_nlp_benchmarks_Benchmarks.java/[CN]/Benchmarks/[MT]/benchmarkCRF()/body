{
  Properties props=new Properties();
  props.setProperty("macro","true");
  props.setProperty("useIfInteger","true");
  props.setProperty("featureFactory","edu.stanford.nlp.benchmarks.BenchmarkFeatureFactory");
  props.setProperty("saveFeatureIndexToDisk","false");
  CRFClassifier<CoreLabel> crf=new CRFClassifier<CoreLabel>(props);
  Random r=new Random(42);
  List<List<CoreLabel>> data=new ArrayList<>();
  for (int i=0; i < 100; i++) {
    List<CoreLabel> sentence=new ArrayList<>();
    for (int j=0; j < 20; j++) {
      CoreLabel l=new CoreLabel();
      l.setWord("j:" + j);
      boolean tag=j % 2 == 0 ^ (r.nextDouble() > 0.7);
      l.set(CoreAnnotations.AnswerAnnotation.class,"target:" + tag);
      sentence.add(l);
    }
    data.add(sentence);
  }
  long msStart=System.currentTimeMillis();
  crf.train(data);
  long delay=System.currentTimeMillis() - msStart;
  System.out.println("Training took " + delay + " ms");
}
