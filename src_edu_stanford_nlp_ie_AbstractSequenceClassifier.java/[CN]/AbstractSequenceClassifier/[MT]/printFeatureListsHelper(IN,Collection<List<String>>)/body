{
  if (cliqueWriter == null) {
    cliqueWriter=IOUtils.getPrintWriterOrDie("features-" + flags.printFeatures + ".txt");
    writtenNum=0;
  }
  if (wi instanceof CoreLabel) {
    cliqueWriter.print(wi.get(CoreAnnotations.TextAnnotation.class) + ' ' + wi.get(CoreAnnotations.PartOfSpeechAnnotation.class)+ ' '+ wi.get(CoreAnnotations.GoldAnswerAnnotation.class)+ '\t');
  }
 else {
    cliqueWriter.print(wi.get(CoreAnnotations.TextAnnotation.class) + wi.get(CoreAnnotations.GoldAnswerAnnotation.class) + '\t');
  }
  boolean first=true;
  for (  List<String> featList : features) {
    List<String> sortedFeatList=new ArrayList<>(featList);
    Collections.sort(sortedFeatList);
    for (    String feat : sortedFeatList) {
      if (first) {
        first=false;
      }
 else {
        cliqueWriter.print(" ");
      }
      cliqueWriter.print(feat);
    }
    cliqueWriter.print("  ");
  }
  cliqueWriter.println();
  writtenNum++;
}
