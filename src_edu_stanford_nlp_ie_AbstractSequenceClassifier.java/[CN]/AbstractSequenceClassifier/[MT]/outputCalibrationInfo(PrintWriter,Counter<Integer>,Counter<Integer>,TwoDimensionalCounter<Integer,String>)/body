{
  final int numBins=10;
  pw.println();
  pw.println("----------------------------------------");
  pw.println("Probability distribution given to tokens (Counts for all class-token pairs; accuracy for this bin; examples are gold entity tokens in bin)");
  pw.println("----------------------------------------");
  for (int i=0; i < numBins; i++) {
    pw.printf("[%.1f-%.1f%c: %.0f  %.2f%n",((double)i) / numBins,((double)(i + 1)) / numBins,i == (numBins - 1) ? ']' : ')',calibration.getCount(i),correctByBin.getCount(i) / calibration.getCount(i));
  }
  pw.println("----------------------------------------");
  for (int i=0; i < numBins; i++) {
    pw.printf("[%.1f-%.1f%c: %s%n",((double)i) / numBins,((double)(i + 1)) / numBins,i == (numBins - 1) ? ']' : ')',Counters.toSortedString(calibratedTokens.getCounter(i),20,"%s=%.0f",", ","[%s]"));
  }
  pw.println("----------------------------------------");
}
