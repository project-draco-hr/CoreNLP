{
  token=prepareForMultiWordExtraction(token);
  Matcher quoteMatcher=pQuoted.matcher(token);
  if (quoteMatcher.matches()) {
    String[] ret=new String[3];
    ret[0]="\"";
    ret[1]=quoteMatcher.group(1);
    ret[2]="\"";
    return ret;
  }
  StringTokenizer splitter=new StringTokenizer(token,WORD_SEPARATORS,true);
  int remainingTokens=splitter.countTokens();
  List<String> words=new ArrayList<String>();
  while (splitter.hasMoreTokens()) {
    String word=splitter.nextToken();
    remainingTokens--;
    if (shouldDropWord(word))     continue;
    if (remainingTokens >= 2 && hyphenBoundMorphemes.contains(word)) {
      String hyphen=splitter.nextToken();
      remainingTokens--;
      if (!hyphen.equals("-")) {
        words.add(word);
        if (!shouldDropWord(hyphen))         words.add(hyphen);
        continue;
      }
      String freeMorpheme=splitter.nextToken();
      remainingTokens--;
      words.add(word + hyphen + freeMorpheme);
      continue;
    }
    words.add(word);
  }
  return words.toArray(new String[words.size()]);
}
