{
  Properties prop=StringUtils.argsToProperties(args);
  double l1reg=Double.parseDouble(prop.getProperty("l1reg","0.0"));
  Dataset<String,String> ds=new Dataset<String,String>();
  for (  String line : ObjectBank.getLineIterator(new File(prop.getProperty("trainFile")))) {
    String[] bits=line.split("\\s+");
    Collection<String> f=new LinkedList<String>(Arrays.asList(bits).subList(1,bits.length));
    String l=bits[0];
    ds.add(f,l);
  }
  ds.summaryStatistics();
  boolean biased=prop.getProperty("biased","false").equals("true");
  LogisticClassifierFactory<String,String> factory=new LogisticClassifierFactory<String,String>();
  LogisticClassifier<String,String> lc=factory.trainClassifier(ds,l1reg,1e-4,biased);
  for (  String line : ObjectBank.getLineIterator(new File(prop.getProperty("testFile")))) {
    String[] bits=line.split("\\s+");
    Collection<String> f=new LinkedList<String>(Arrays.asList(bits).subList(1,bits.length));
    String g=lc.classOf(f);
    System.out.println(g + '\t' + line);
  }
}
