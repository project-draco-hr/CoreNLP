{
  String modelPath=null;
  String treePath=null;
  boolean filterUnknown=false;
  List<String> remainingArgs=Generics.newArrayList();
  for (int argIndex=0; argIndex < args.length; ) {
    if (args[argIndex].equalsIgnoreCase("-model")) {
      modelPath=args[argIndex + 1];
      argIndex+=2;
    }
 else     if (args[argIndex].equalsIgnoreCase("-treebank")) {
      treePath=args[argIndex + 1];
      argIndex+=2;
    }
 else     if (args[argIndex].equalsIgnoreCase("-filterUnknown")) {
      filterUnknown=true;
      argIndex++;
    }
 else {
      remainingArgs.add(args[argIndex]);
      argIndex++;
    }
  }
  String[] newArgs=new String[remainingArgs.size()];
  remainingArgs.toArray(newArgs);
  SentimentModel model=SentimentModel.loadSerialized(modelPath);
  for (int argIndex=0; argIndex < newArgs.length; ) {
    int newIndex=model.op.setOption(newArgs,argIndex);
    if (argIndex == newIndex) {
      System.err.println("Unknown argument " + newArgs[argIndex]);
      throw new IllegalArgumentException("Unknown argument " + newArgs[argIndex]);
    }
    argIndex=newIndex;
  }
  List<Tree> trees=SentimentUtils.readTreesWithGoldLabels(treePath);
  if (filterUnknown) {
    trees=SentimentUtils.filterUnknownRoots(trees);
  }
  Evaluate eval=new Evaluate(model);
  eval.eval(trees);
  eval.printSummary();
}
