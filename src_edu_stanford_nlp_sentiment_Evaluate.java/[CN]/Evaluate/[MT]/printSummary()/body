{
  System.err.println("EVALUATION SUMMARY");
  System.err.println("Tested " + (labelsCorrect + labelsIncorrect) + " labels");
  System.err.println("  " + labelsCorrect + " correct");
  System.err.println("  " + labelsIncorrect + " incorrect");
  System.err.println("  " + NF.format(exactNodeAccuracy()) + " accuracy");
  System.err.println("Tested " + (rootLabelsCorrect + rootLabelsIncorrect) + " roots");
  System.err.println("  " + rootLabelsCorrect + " correct");
  System.err.println("  " + rootLabelsIncorrect + " incorrect");
  System.err.println("  " + NF.format(exactRootAccuracy()) + " accuracy");
  printConfusionMatrix("Label",labelConfusion);
  printConfusionMatrix("Root label",rootLabelConfusion);
  if (equivalenceClasses != null && equivalenceClassNames != null) {
    double[] approxLabelAccuracy=approxAccuracy(labelConfusion,equivalenceClasses);
    for (int i=0; i < equivalenceClassNames.length; ++i) {
      System.err.println("Approximate " + equivalenceClassNames[i] + " label accuracy: "+ NF.format(approxLabelAccuracy[i]));
    }
    System.err.println("Combined approximate label accuracy: " + NF.format(approxCombinedAccuracy(labelConfusion,equivalenceClasses)));
    double[] approxRootLabelAccuracy=approxAccuracy(rootLabelConfusion,equivalenceClasses);
    for (int i=0; i < equivalenceClassNames.length; ++i) {
      System.err.println("Approximate " + equivalenceClassNames[i] + " root label accuracy: "+ NF.format(approxRootLabelAccuracy[i]));
    }
    System.err.println("Combined approximate root label accuracy: " + NF.format(approxCombinedAccuracy(rootLabelConfusion,equivalenceClasses)));
    System.err.println();
  }
  if (model.op.testOptions.ngramRecordSize > 0) {
    System.err.println(ngrams);
  }
  if (model.op.testOptions.printLengthAccuracies) {
    printLengthAccuracies();
  }
}
