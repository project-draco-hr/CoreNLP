{
  return new Iterator<E>(){
    Iterator<E> backingIterator=backingIndex.iterator();
    Iterator<E> spilloverIterator=spilloverIndex.iterator();
    @Override public boolean hasNext(){
      return backingIterator.hasNext() || spilloverIterator.hasNext();
    }
    @Override public E next(){
      if (backingIterator.hasNext()) {
        return backingIterator.next();
      }
 else {
        return spilloverIterator.next();
      }
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
