{
  Counter<String> results=new ClassicCounter<>();
  BufferedReader r=new BufferedReader(new StringReader(resultsString));
  for (String line; (line=r.readLine()) != null; ) {
    Matcher m1=MENTION_PATTERN.matcher(line);
    if (m1.matches()) {
      results.setCount(MENTION_TP,Double.parseDouble(m1.group(1)));
      results.setCount(MENTION_F1,Double.parseDouble(m1.group(2)));
    }
    Matcher m2=MUC_PATTERN.matcher(line);
    if (m2.matches()) {
      results.setCount(MUC_TP,Double.parseDouble(m2.group(1)));
      results.setCount(MUC_F1,Double.parseDouble(m2.group(2)));
    }
    Matcher m3=BCUBED_PATTERN.matcher(line);
    if (m3.matches()) {
      results.setCount(BCUBED_TP,Double.parseDouble(m3.group(1)));
      results.setCount(BCUBED_F1,Double.parseDouble(m3.group(2)));
    }
    Matcher m4=CEAFM_PATTERN.matcher(line);
    if (m4.matches()) {
      results.setCount(CEAFM_TP,Double.parseDouble(m4.group(1)));
      results.setCount(CEAFM_F1,Double.parseDouble(m4.group(2)));
    }
    Matcher m5=CEAFE_PATTERN.matcher(line);
    if (m5.matches()) {
      results.setCount(CEAFE_TP,Double.parseDouble(m5.group(1)));
      results.setCount(CEAFE_F1,Double.parseDouble(m5.group(2)));
    }
    Matcher m6=BLANC_PATTERN.matcher(line);
    if (m6.matches()) {
      results.setCount(BLANC_F1,Double.parseDouble(m6.group(1)));
    }
    Matcher m7=CONLL_PATTERN.matcher(line);
    if (m7.matches()) {
      results.setCount(CONLL_SCORE,Double.parseDouble(m7.group(1)));
    }
  }
  return results;
}
