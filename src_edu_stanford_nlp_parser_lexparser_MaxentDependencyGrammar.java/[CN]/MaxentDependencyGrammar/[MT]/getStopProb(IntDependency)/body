{
  short distBin=distanceBin(dep.distance);
  IntTaggedWord unknownHead=new IntTaggedWord(-1,dep.head.tag);
  IntDependency temp=new IntDependency(dep.head,stopTW,dep.leftHeaded,distBin);
  double c_stop_hTWds=stopCounter.getCount(temp);
  temp=new IntDependency(unknownHead,stopTW,dep.leftHeaded,distBin);
  double c_stop_hTds=stopCounter.getCount(temp);
  temp=new IntDependency(unknownHead,wildTW,dep.leftHeaded,distBin);
  double c_continue_hTds=stopCounter.getCount(temp);
  temp=new IntDependency(dep.head,wildTW,dep.leftHeaded,distBin);
  double c_continue_hTWds=stopCounter.getCount(temp);
  double c_hTds=c_stop_hTds + c_continue_hTds;
  double c_hTWds=c_stop_hTWds + c_continue_hTWds;
  depDumpPrintln("c_stop_hT / c_hT: " + (int)c_stop_hTds + "/"+ (int)c_hTds);
  depDumpPrintln("c_stop_hTW / c_hTW: " + (int)c_stop_hTWds + "/"+ (int)c_hTWds);
  double p_stop_hTds=(c_hTds > 0.0 ? c_stop_hTds / c_hTds : 1.0);
  return (c_stop_hTWds + stopSmooth * p_stop_hTds) / (c_hTWds + stopSmooth);
}
