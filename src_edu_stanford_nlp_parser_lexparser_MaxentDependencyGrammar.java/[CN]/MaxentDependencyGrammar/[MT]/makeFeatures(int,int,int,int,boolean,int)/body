{
  short signedDist=(short)((leftHeaded) ? distBin : (numDistBins() + distBin));
  short signedValence=(short)((leftHeaded ? 0 : 2) + valenceBin(distBin));
  tempFeatures.clear();
  int type=0;
  int hTaTD=getIntFeat(hTag,aTag,signedValence,type++);
  int hTaTDs=getIntFeat(hTag,aTag,signedDist,type++);
  tempFeatures.add(new IntFeature(hTaTD));
  if (useDistance)   tempFeatures.add(new IntFeature(hTaTDs));
  int aTD=getIntFeat(-1,aTag,signedValence,type++);
  int aTDs=getIntFeat(-1,aTag,signedDist,type++);
  hTaTD=setType(hTaTD,type++);
  hTaTDs=setType(hTaTDs,type++);
  int[] largeHeadFeats=getLargeWordFeatures(hWord);
  for (  int hF : largeHeadFeats) {
    tempFeatures.add(new IntFeature(hF,aTD));
    tempFeatures.add(new IntFeature(hF,hTaTD));
    if (useDistance)     tempFeatures.add(new IntFeature(hF,aTDs));
    if (useDistance)     tempFeatures.add(new IntFeature(hF,hTaTDs));
  }
  int hTD=getIntFeat(-1,hTag,signedValence,type++);
  int hTDs=getIntFeat(-1,hTag,signedDist,type++);
  hTaTD=setType(hTaTD,type++);
  hTaTDs=setType(hTaTDs,type++);
  int[] largeArgFeats=getLargeWordFeatures(aWord);
  for (  int aF : largeArgFeats) {
    tempFeatures.add(new IntFeature(aF,hTD));
    tempFeatures.add(new IntFeature(aF,hTaTD));
    if (useDistance)     tempFeatures.add(new IntFeature(aF,hTDs));
    if (useDistance)     tempFeatures.add(new IntFeature(aF,hTaTDs));
  }
  short[] smallHeadFeats=getSmallWordFeatures(hWord);
  short[] smallArgFeats=getSmallWordFeatures(aWord);
  int D=getIntFeat(-1,-1,signedValence,type++);
  hTD=setType(hTD,type++);
  aTD=setType(aTD,type++);
  hTaTD=setType(hTaTD,type++);
  for (  short hF : smallHeadFeats) {
    for (    short aF : smallArgFeats) {
      int F=intFromTwoShorts(hF,aF);
      tempFeatures.add(new IntFeature(F,D));
      tempFeatures.add(new IntFeature(F,hTD));
      tempFeatures.add(new IntFeature(F,aTD));
      tempFeatures.add(new IntFeature(F,hTaTD));
    }
  }
  return tempFeatures;
}
