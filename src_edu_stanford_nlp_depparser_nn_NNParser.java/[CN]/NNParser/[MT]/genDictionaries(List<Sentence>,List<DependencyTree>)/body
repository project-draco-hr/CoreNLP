{
  List<String> word=new ArrayList<String>();
  List<String> pos=new ArrayList<String>();
  List<String> label=new ArrayList<String>();
  for (int i=0; i < sents.size(); ++i)   for (int k=1; k <= sents.get(i).n; ++k) {
    word.add(sents.get(i).getWord(k));
    pos.add(sents.get(i).getPOS(k));
  }
  String rootLabel=null;
  for (int i=0; i < trees.size(); ++i)   for (int k=1; k <= trees.get(i).n; ++k)   if (trees.get(i).getHead(k) == 0)   rootLabel=trees.get(i).getLabel(k);
 else   label.add(trees.get(i).getLabel(k));
  wordDict=Util.generateDict(word,Config.wordCutOff);
  posDict=Util.generateDict(pos);
  labelDict=Util.generateDict(label);
  labelDict.add(0,rootLabel);
  wordDict.add(0,CONST.UNKNOWN);
  wordDict.add(1,CONST.NULL);
  wordDict.add(2,CONST.ROOT);
  posDict.add(0,CONST.UNKNOWN);
  posDict.add(1,CONST.NULL);
  posDict.add(2,CONST.ROOT);
  labelDict.add(0,CONST.NULL);
  genMapping();
  System.out.println(CONST.SEPARATOR);
  System.out.println("#Word: " + wordDict.size());
  System.out.println("#POS:" + posDict.size());
  System.out.println("#Label: " + labelDict.size());
}
