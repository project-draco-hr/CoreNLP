{
  double cost=0.0;
  for (  TwoDimensionalMap.Entry<String,String,SimpleMatrix> entry : currentMatrices) {
    SimpleMatrix D=derivatives.get(entry.getFirstKey(),entry.getSecondKey());
    SimpleMatrix regMatrix=entry.getValue();
    if (dropBiasColumn) {
      regMatrix=new SimpleMatrix(regMatrix);
      regMatrix.insertIntoThis(0,regMatrix.numCols() - 1,new SimpleMatrix(regMatrix.numRows(),1));
    }
    D=D.scale(scale).plus(regMatrix.scale(regCost));
    derivatives.put(entry.getFirstKey(),entry.getSecondKey(),D);
    cost+=regMatrix.elementMult(regMatrix).elementSum() * regCost / 2.0;
  }
  return cost;
}
