{
  this.logLikelihood=logLikelihood;
  if (prior >= 0 && prior <= QUARTIC_PRIOR) {
    this.prior=prior;
  }
 else {
    throw new IllegalArgumentException("Invalid prior: " + prior);
  }
  if (prior == QUADRATIC_PRIOR) {
    priors=new ArbitraryGaussianPriors(sigma,0,logLikelihood.domainDimension());
    for (Iterator<Integer> it=specialPriors.keySet().iterator(); it.hasNext(); ) {
      Integer next=it.next();
      System.err.println("next integer is " + next);
      Pair<Double,Double> val=specialPriors.get(next);
      ((ArbitraryGaussianPriors)priors).setSpecial(next.intValue(),val.first().doubleValue(),val.second().doubleValue());
    }
  }
  this.epsilon=epsilon;
  this.sigma=sigma;
}
