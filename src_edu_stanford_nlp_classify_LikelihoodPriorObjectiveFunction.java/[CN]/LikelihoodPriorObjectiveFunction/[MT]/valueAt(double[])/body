{
  double value=logLikelihood.logLikelihood(x);
  value=-value;
  if (prior == QUADRATIC_PRIOR) {
    for (int i=0; i < x.length; i++) {
      double k=1.0;
      double w=x[i];
      double sigmaSq=priors.sigmaSq(i);
      double mean=priors.mean(i);
      value+=k * w * w / 2.0 / sigmaSq;
      if (mean != 0) {
        value+=(-2.0 * w * mean + mean * mean) / 2.0 / sigmaSq;
      }
    }
  }
 else   if (prior == HUBER_PRIOR) {
    double sigmaSq=sigma * sigma;
    for (int i=0; i < x.length; i++) {
      double w=x[i];
      double wabs=Math.abs(w);
      if (wabs < epsilon) {
        value+=w * w / 2.0 / epsilon / sigmaSq;
      }
 else {
        value+=(wabs - epsilon / 2) / sigmaSq;
      }
    }
  }
 else   if (prior == QUARTIC_PRIOR) {
    double sigmaQu=sigma * sigma * sigma* sigma;
    for (int i=0; i < x.length; i++) {
      double k=1.0;
      double w=x[i];
      value+=k * w * w* w* w / 2.0 / sigmaQu;
    }
  }
  return value;
}
