{
  int prevNerEndIndex=start - 1;
  int nextNerStartIndex=end;
  String startNer=tokens.get(start).ner();
  String endNer=tokens.get(end - 1).ner();
  if (startNer != null && !myLabels.contains(startNer)) {
    while (prevNerEndIndex >= 0) {
      String ner=tokens.get(prevNerEndIndex).ner();
      if (ner == null || !ner.equals(startNer)) {
        break;
      }
      prevNerEndIndex--;
    }
  }
  if (endNer != null && !myLabels.contains(endNer)) {
    while (nextNerStartIndex < tokens.size()) {
      String ner=tokens.get(nextNerStartIndex).ner();
      if (ner == null || !ner.equals(endNer)) {
        break;
      }
      nextNerStartIndex++;
    }
  }
  boolean overwriteOriginalNer=false;
  if (prevNerEndIndex != (start - 1) || nextNerStartIndex != end) {
  }
 else   if (startNer == null) {
    overwriteOriginalNer=true;
  }
 else {
    for (int i=start + 1; i < end; i++) {
      if (!startNer.equals(tokens.get(i).ner())) {
        overwriteOriginalNer=true;
        break;
      }
    }
    if (!overwriteOriginalNer) {
      if (entry.overwritableTypes.contains(startNer) || myLabels.contains(startNer)) {
        overwriteOriginalNer=true;
      }
    }
  }
  return overwriteOriginalNer;
}
