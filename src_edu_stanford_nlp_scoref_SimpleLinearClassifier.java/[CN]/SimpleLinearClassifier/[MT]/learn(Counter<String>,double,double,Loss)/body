{
  double dloss=loss.derivative(label,weightFeatureProduct(features));
  for (  Map.Entry<String,Double> feature : features.entrySet()) {
    String featureName=feature.getKey();
    double w=weights.getCount(featureName);
    double dobjective=weight * (-dloss * feature.getValue() - penalty.derivative(w));
    learningRateSchedule.update(featureName,dobjective);
    if (dobjective != 0) {
      weights.incrementCount(featureName,dobjective * learningRateSchedule.getLearningRate(featureName));
    }
  }
}
