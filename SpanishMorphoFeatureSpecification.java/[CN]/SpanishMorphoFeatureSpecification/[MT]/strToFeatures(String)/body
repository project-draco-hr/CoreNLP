{
  MorphoFeatures feats=new MorphoFeatures();
  if (spec == null || spec.equals(""))   return feats;
  boolean isOtherActive=isActive(MorphoFeatureType.OTHER);
  if (spec.startsWith("ADV")) {
    feats.setAltTag("ADV");
    if (spec.contains("int")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"advint");
      }
      feats.setAltTag("ADVWH");
    }
  }
 else   if (spec.startsWith("A")) {
    feats.setAltTag("ADJ");
    if (spec.contains("int")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"adjint");
      }
      feats.setAltTag("ADJWH");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.equals("CC") || spec.equals("C-C")) {
    if (isOtherActive) {
      feats.addFeature(MorphoFeatureType.OTHER,"Cc");
    }
    feats.setAltTag("CC");
  }
 else   if (spec.equals("CS") || spec.equals("C-S")) {
    if (isOtherActive) {
      feats.addFeature(MorphoFeatureType.OTHER,"Cs");
    }
    feats.setAltTag("CS");
  }
 else   if (spec.startsWith("CL")) {
    feats.setAltTag("CL");
    if (spec.contains("suj") || spec.equals("CL-S-3fp")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Sbj");
      }
      feats.setAltTag("CLS");
    }
 else     if (spec.contains("obj")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Obj");
      }
      feats.setAltTag("CLO");
    }
 else     if (spec.contains("refl")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Rfl");
      }
      feats.setAltTag("CLR");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.startsWith("D")) {
    feats.setAltTag("DET");
    if (spec.contains("int")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"dint");
      }
      feats.setAltTag("DETWH");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.startsWith("N")) {
    feats.setAltTag("N");
    if (spec.contains("P")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Np");
      }
      feats.setAltTag("NPP");
    }
 else     if (spec.contains("C")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Nc");
      }
      feats.setAltTag("NC");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.startsWith("PRO")) {
    feats.setAltTag("PRO");
    if (spec.contains("int")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Ni");
      }
      feats.setAltTag("PROWH");
    }
 else     if (spec.contains("rel")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Nr");
      }
      feats.setAltTag("PROREL");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.startsWith("V")) {
    feats.setAltTag("V");
    if (spec.contains("Y")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Vp");
      }
      feats.setAltTag("VIMP");
    }
 else     if (spec.contains("W")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Vf");
      }
      feats.setAltTag("VINF");
    }
 else     if (spec.contains("S") || spec.contains("T")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Vs");
      }
      feats.setAltTag("VS");
    }
 else     if (spec.contains("K")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Vp");
      }
      feats.setAltTag("VPP");
    }
 else     if (spec.contains("G")) {
      if (isOtherActive) {
        feats.addFeature(MorphoFeatureType.OTHER,"Vr");
      }
      feats.setAltTag("VPR");
    }
    addPhiFeatures(feats,spec);
  }
 else   if (spec.equals("P") || spec.equals("I")) {
    feats.setAltTag(spec);
  }
  return feats;
}
