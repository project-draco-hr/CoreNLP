{
  boolean showLabel=true;
  Span span=new Span(start,end);
  List<Label> l1=sLL1.get(span);
  List<Label> l2=sLL2.get(span);
  if (!t1.isLeaf() && l1 != null && l2 != null && (unlabeled || l1.equals(l2))) {
    showLabel=false;
  }
  if (showLabel) {
    sb.append(" ");
    if (!t1.isLeaf()) {
      sb.append("(");
    }
    if (t1.label() != null) {
      sb.append(t1.label());
    }
  }
  Tree[] kids=t1.children();
  if (kids != null) {
    for (int i=0; i < kids.length; i++) {
      int kidSpanLength=kids[i].yield().size();
      diffStringHelper(sb,kids[i],start,start + kidSpanLength,sLL1,sLL2);
      start+=kidSpanLength;
    }
  }
  if (showLabel) {
    if (!t1.isLeaf()) {
      sb.append(")");
    }
  }
  return sb;
}
