{
  FloatFactorTable[] factorTables=new FloatFactorTable[data.length];
  FloatFactorTable[] messages=new FloatFactorTable[data.length - 1];
  for (int i=0; i < data.length; i++) {
    factorTables[i]=getFloatFactorTable(weights,data[i],labelIndices,numClasses);
    if (VERBOSE) {
      log.info(i + ": " + factorTables[i]);
    }
    if (i > 0) {
      messages[i - 1]=factorTables[i - 1].sumOutFront();
      if (VERBOSE) {
        log.info(messages[i - 1]);
      }
      factorTables[i].multiplyInFront(messages[i - 1]);
      if (VERBOSE) {
        log.info(factorTables[i]);
        if (i == data.length - 1) {
          log.info(i + ": " + factorTables[i].toProbString());
        }
      }
    }
  }
  for (int i=factorTables.length - 2; i >= 0; i--) {
    FloatFactorTable summedOut=factorTables[i + 1].sumOutEnd();
    if (VERBOSE) {
      log.info((i + 1) + "-->" + i+ ": "+ summedOut);
    }
    summedOut.divideBy(messages[i]);
    if (VERBOSE) {
      log.info((i + 1) + "-->" + i+ ": "+ summedOut);
    }
    factorTables[i].multiplyInEnd(summedOut);
    if (VERBOSE) {
      log.info(i + ": " + factorTables[i]);
      log.info(i + ": " + factorTables[i].toProbString());
    }
  }
  return factorTables;
}
