{
  if (tree.isLeaf()) {
  }
 else   if (tree.isPreTerminal()) {
    transitions.add(new ShiftTransition());
  }
 else   if (tree.children().length == 1) {
    createTransitionSequenceHelper(transitions,tree.children()[0]);
    transitions.add(new UnaryTransition(tree.label().value()));
  }
 else   if (tree.children().length == 2) {
    createTransitionSequenceHelper(transitions,tree.children()[0]);
    createTransitionSequenceHelper(transitions,tree.children()[1]);
    if (!(tree.label() instanceof CoreLabel) || !(tree.children()[0].label() instanceof CoreLabel) || !(tree.children()[1].label() instanceof CoreLabel)) {
      throw new IllegalArgumentException("Expected tree labels to be CoreLabel");
    }
    CoreLabel label=(CoreLabel)tree.label();
    CoreLabel leftLabel=(CoreLabel)tree.children()[0].label();
    CoreLabel rightLabel=(CoreLabel)tree.children()[1].label();
    Tree head=label.get(TreeCoreAnnotations.HeadWordAnnotation.class);
    Tree leftHead=leftLabel.get(TreeCoreAnnotations.HeadWordAnnotation.class);
    Tree rightHead=rightLabel.get(TreeCoreAnnotations.HeadWordAnnotation.class);
    if (head == null || leftHead == null || rightHead == null) {
      throw new IllegalArgumentException("Expected tree labels to have their heads assigned");
    }
    if (head == leftHead) {
      transitions.add(new BinaryTransition(tree.label().value(),BinaryTransition.Side.LEFT));
    }
 else     if (head == rightHead) {
      transitions.add(new BinaryTransition(tree.label().value(),BinaryTransition.Side.RIGHT));
    }
 else {
      throw new IllegalArgumentException("Heads were incorrectly assigned: tree's head is not matched to either the right or left head");
    }
  }
 else {
    throw new IllegalArgumentException("Expected a binarized tree");
  }
}
