{
  Set<SequencePattern<CoreMap>> triggeredPatterns=new LinkedHashSet<SequencePattern<CoreMap>>();
  triggeredPatterns.addAll(alwaysTriggered);
  for (  Class key : annotationTriggers.firstKeySet()) {
    Object value=in.get(key);
    if (value != null) {
      Collection<SequencePattern<CoreMap>> triggered=annotationTriggers.get(key,value);
      if (triggered != null) {
        triggeredPatterns.addAll(triggered);
      }
    }
  }
  for (  Class key : lowercaseStringTriggers.firstKeySet()) {
    Object value=in.get(key);
    if (value != null && value instanceof String) {
      Collection<SequencePattern<CoreMap>> triggered=lowercaseStringTriggers.get(key,((String)value).toLowerCase());
      if (triggered != null) {
        triggeredPatterns.addAll(triggered);
      }
    }
  }
  return triggeredPatterns;
}
