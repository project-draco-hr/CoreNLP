{
  try {
    ParserQuery pq=parserQuery();
    if (pq.parse(lst)) {
      Tree bestparse=pq.getBestParse();
      bestparse.setScore(pq.getPCFGScore() % -10000.0);
      return bestparse;
    }
  }
 catch (  Exception e) {
    System.err.println("Following exception caught during parsing:");
    e.printStackTrace();
    System.err.println("Recovering using fall through strategy: will construct an (X ...) tree.");
  }
  TreeFactory lstf=new LabeledScoredTreeFactory();
  List<Tree> lst2=new ArrayList<Tree>();
  for (  HasWord obj : lst) {
    String s=obj.word();
    Tree t=lstf.newLeaf(s);
    Tree t2=lstf.newTreeNode("X",Collections.singletonList(t));
    lst2.add(t2);
  }
  return lstf.newTreeNode("X",lst2);
}
