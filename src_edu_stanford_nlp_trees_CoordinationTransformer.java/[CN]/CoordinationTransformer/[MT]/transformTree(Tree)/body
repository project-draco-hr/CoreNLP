{
  if (VERBOSE) {
    System.err.println("Input to CoordinationTransformer: " + t);
  }
  Tree tx=tn.transformTree(t);
  if (VERBOSE) {
    System.err.println("After DependencyTreeTransformer:  " + tx);
  }
  if (tx == null) {
    return tx;
  }
  Tree tt=UCPtransform(tx);
  if (VERBOSE) {
    System.err.println("After UCPTransformer:             " + tt);
  }
  Tree ttt=CCtransform(tt);
  if (VERBOSE) {
    System.err.println("After CCTransformer:              " + ttt);
  }
  Tree tttt=qp.transformTree(ttt);
  if (VERBOSE) {
    System.err.println("After QPTreeTransformer:          " + tttt);
  }
  Tree flatSQ=SQflatten(tttt);
  if (VERBOSE) {
    System.err.println("After SQ flattening:              " + flatSQ);
  }
  Tree fixedDates=dates.transformTree(flatSQ);
  if (VERBOSE) {
    System.err.println("After DateTreeTransformer:        " + fixedDates);
  }
  Tree removedXX=removeXOverX(fixedDates);
  if (VERBOSE) {
    System.err.println("After removeXoverX:               " + removedXX);
  }
  Tree conjp=combineConjp(removedXX);
  if (VERBOSE) {
    System.err.println("After combineConjp:               " + conjp);
  }
  return conjp;
}
