{
  SemanticGraph nsg=new SemanticGraph();
  List<IndexedWord> vertices=sg.vertexListSorted();
  int index=1;
  Map<IndexedWord,IndexedWord> oldToNewVertices=Generics.newHashMap();
  List<IndexedWord> newVertices=new ArrayList<>();
  for (  IndexedWord vertex : vertices) {
    IndexedWord newVertex=new IndexedWord(vertex);
    newVertex.setIndex(index++);
    oldToNewVertices.put(vertex,newVertex);
    newVertices.add(newVertex);
  }
  for (  IndexedWord nv : newVertices) {
    nsg.addVertex(nv);
  }
  List<IndexedWord> newRoots=new ArrayList<>();
  for (  IndexedWord or : sg.getRoots()) {
    newRoots.add(oldToNewVertices.get(or));
  }
  nsg.setRoots(newRoots);
  for (  SemanticGraphEdge edge : sg.edgeIterable()) {
    IndexedWord newGov=oldToNewVertices.get(edge.getGovernor());
    IndexedWord newDep=oldToNewVertices.get(edge.getDependent());
    nsg.addEdge(newGov,newDep,edge.getRelation(),edge.getWeight(),edge.isExtra());
  }
  return nsg;
}
