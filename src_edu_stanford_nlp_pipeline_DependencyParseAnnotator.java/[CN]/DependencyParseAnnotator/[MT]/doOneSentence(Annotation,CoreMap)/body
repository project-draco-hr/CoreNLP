{
  List<DependencyTree> results=parser.predict(Arrays.asList(makeSentence(sentence)));
  List<CoreLabel> tokens=sentence.get(CoreAnnotations.TokensAnnotation.class);
  List<TypedDependency> dependencies=new ArrayList<>();
  DependencyTree result=results.get(0);
  IndexedWord rootDep=null;
  for (int i=1; i < result.n; i++) {
    int head=result.getHead(i);
    String label=result.getLabel(i);
    IndexedWord thisWord=new IndexedWord(tokens.get(i - 1)), headWord=new IndexedWord(tokens.get(head - 1));
    GrammaticalRelation relation=EnglishGrammaticalRelations.shortNameToGRel.get(label);
    dependencies.add(new TypedDependency(relation,headWord,thisWord));
    if (head == 0)     rootDep=thisWord;
  }
  if (rootDep != null) {
    IndexedWord root=new IndexedWord(new Word("ROOT"));
    TypedDependency rootTypedDep=new TypedDependency(GrammaticalRelation.ROOT,root,rootDep);
    dependencies.add(rootTypedDep);
  }
  SemanticGraph deps=new SemanticGraph(dependencies);
  sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,deps);
}
