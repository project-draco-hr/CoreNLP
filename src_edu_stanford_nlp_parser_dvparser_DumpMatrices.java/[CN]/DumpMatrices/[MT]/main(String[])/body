{
  String modelPath=null;
  String outputDir=null;
  for (int argIndex=0; argIndex < args.length; ) {
    if (args[argIndex].equalsIgnoreCase("-model")) {
      modelPath=args[argIndex + 1];
      argIndex+=2;
    }
 else     if (args[argIndex].equalsIgnoreCase("-output")) {
      outputDir=args[argIndex + 1];
      argIndex+=2;
    }
 else {
      System.err.println("Unknown argument " + args[argIndex]);
      help();
    }
  }
  if (outputDir == null || modelPath == null) {
    help();
  }
  File outputFile=new File(outputDir);
  FileSystem.checkNotExistsOrFail(outputFile);
  FileSystem.mkdirOrFail(outputFile);
  LexicalizedParser parser=LexicalizedParser.loadModel(modelPath);
  DVModel model=DVParser.getModelFromLexicalizedParser(parser);
  String binaryWDir=outputDir + File.separator + "binaryW";
  FileSystem.mkdirOrFail(binaryWDir);
  for (  TwoDimensionalMap.Entry<String,String,SimpleMatrix> entry : model.binaryTransform) {
    String filename=binaryWDir + File.separator + entry.getFirstKey()+ "_"+ entry.getSecondKey()+ ".txt";
    dumpMatrix(filename,entry.getValue());
  }
  String binaryScoreDir=outputDir + File.separator + "binaryScore";
  FileSystem.mkdirOrFail(binaryScoreDir);
  for (  TwoDimensionalMap.Entry<String,String,SimpleMatrix> entry : model.binaryScore) {
    String filename=binaryScoreDir + File.separator + entry.getFirstKey()+ "_"+ entry.getSecondKey()+ ".txt";
    dumpMatrix(filename,entry.getValue());
  }
  String unaryWDir=outputDir + File.separator + "unaryW";
  FileSystem.mkdirOrFail(unaryWDir);
  for (  Map.Entry<String,SimpleMatrix> entry : model.unaryTransform.entrySet()) {
    String filename=unaryWDir + File.separator + entry.getKey()+ ".txt";
    dumpMatrix(filename,entry.getValue());
  }
  String unaryScoreDir=outputDir + File.separator + "unaryScore";
  FileSystem.mkdirOrFail(unaryScoreDir);
  for (  Map.Entry<String,SimpleMatrix> entry : model.unaryScore.entrySet()) {
    String filename=unaryScoreDir + File.separator + entry.getKey()+ ".txt";
    dumpMatrix(filename,entry.getValue());
  }
}
