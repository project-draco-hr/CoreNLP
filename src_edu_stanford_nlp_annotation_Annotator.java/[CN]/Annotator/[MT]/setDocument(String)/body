{
  String currTag="";
  SimpleAttributeSet currAttr=null;
  try {
    doc=new DefaultStyledDocument();
    doc.addUndoableEditListener(undoManager);
    tp.setDocument(doc);
    StringTokenizer st=new StringTokenizer(contents,"<>",true);
    while (st.hasMoreTokens()) {
      String substr=st.nextToken();
      if (substr.equals("<")) {
        String tagText=st.nextToken();
        if (tagText.startsWith("tag")) {
          String name="";
          String value="";
          StringTokenizer st2=new StringTokenizer(tagText," \t\r\n=\"",false);
          while (st2.hasMoreTokens()) {
            String xmlAttribute=st2.nextToken();
            if (xmlAttribute.equals("name")) {
              name=st2.nextToken();
            }
 else             if (xmlAttribute.equals("value")) {
              value=st2.nextToken();
            }
          }
          if (currTag.equals("") && value.equals("start") && !name.equals("")) {
            SimpleAttributeSet attr=colorMaps.get(name);
            if (attr != null) {
              currTag=name;
              currAttr=attr;
            }
          }
 else           if (name.equals(currTag) && value.equals("end")) {
            substr+=tagText;
            substr+=st.nextToken();
            doc.insertString(doc.getLength(),substr,currAttr);
            currAttr=null;
            currTag="";
            continue;
          }
        }
 else {
          if (hideHtml) {
            substr=substr + tagText;
            substr=substr + st.nextToken();
            doc.insertString(doc.getLength(),substr,invisible);
            continue;
          }
        }
        substr=substr + tagText;
      }
      doc.insertString(doc.getLength(),substr,currAttr);
    }
    tp.setCaretPosition(0);
  }
 catch (  BadLocationException be) {
  }
catch (  IllegalArgumentException ie) {
  }
catch (  NullPointerException np) {
  }
  if (!currTag.equals("")) {
    errorMessage("Unterminated tag \"" + currTag + "\"");
  }
}
