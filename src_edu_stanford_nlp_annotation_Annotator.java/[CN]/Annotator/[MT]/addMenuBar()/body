{
  JMenuBar menubar=new JMenuBar();
  JMenu fileMenu=new JMenu("File");
  menubar.add(fileMenu);
  JMenu editMenu=new JMenu("Edit");
  menubar.add(editMenu);
  viewMenu=new JMenu("View");
  menubar.add(viewMenu);
  tagsMenu=new JMenu("Tags");
  menubar.add(tagsMenu);
  JMenu aboutMenu=new JMenu("About");
  menubar.add(aboutMenu);
  JMenuItem menuitem=new JMenuItem("Open");
  menuitem.setMnemonic('O');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  fileMenu.add(menuitem);
  menuitem=new JMenuItem("Save");
  menuitem.setMnemonic('S');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  fileMenu.add(menuitem);
  menuitem=new JMenuItem("Save As");
  menuitem.addActionListener(actor);
  fileMenu.add(menuitem);
  fileMenu.add(new JSeparator());
  JMenu submenu=new JMenu("Batch Processing");
  menuitem=new JMenuItem("Batch Process");
  menuitem.setMnemonic('B');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  submenu.add(menuitem);
  submenu.add(new JSeparator());
  nextItem=new JMenuItem("Next File");
  nextItem.setMnemonic('N');
  nextItem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT,java.awt.Event.CTRL_MASK));
  nextItem.addActionListener(actor);
  submenu.add(nextItem);
  prevItem=new JMenuItem("Previous File");
  prevItem.setMnemonic('P');
  prevItem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT,java.awt.Event.CTRL_MASK));
  prevItem.addActionListener(actor);
  submenu.add(prevItem);
  saveNextItem=new JMenuItem("Save and Next");
  saveNextItem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT,java.awt.Event.ALT_MASK));
  saveNextItem.addActionListener(actor);
  submenu.add(saveNextItem);
  savePrevItem=new JMenuItem("Save and Previous");
  savePrevItem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT,java.awt.Event.ALT_MASK));
  savePrevItem.addActionListener(actor);
  submenu.add(savePrevItem);
  fileMenu.add(submenu);
  fileMenu.add(new JSeparator());
  menuitem=new JMenuItem("Exit");
  menuitem.setMnemonic('X');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  fileMenu.add(menuitem);
  undo=new JMenuItem("Undo");
  undo.setMnemonic('U');
  undo.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z,java.awt.Event.CTRL_MASK));
  undo.addActionListener(actor);
  editMenu.add(undo);
  redo=new JMenuItem("Redo");
  redo.setMnemonic('R');
  redo.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y,java.awt.Event.CTRL_MASK));
  redo.addActionListener(actor);
  editMenu.add(redo);
  editMenu.addSeparator();
  menuitem=new JMenuItem("Cut");
  menuitem.setMnemonic('T');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  editMenu.add(menuitem);
  menuitem=new JMenuItem("Copy");
  menuitem.setMnemonic('C');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  editMenu.add(menuitem);
  menuitem=new JMenuItem("Paste");
  menuitem.setMnemonic('P');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V,java.awt.Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  editMenu.add(menuitem);
  menuitem=new JMenuItem("Select All");
  menuitem.setMnemonic('S');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A,Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  menuitem.setEnabled(false);
  editMenu.add(menuitem);
  editMenu.addSeparator();
  menuitem=new JMenuItem("Untag selected region");
  menuitem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SPACE,Event.CTRL_MASK));
  menuitem.addActionListener(actor);
  editMenu.add(menuitem);
  menuitem=new JMenuItem("Tag All Occurrences");
  menuitem.setMnemonic('A');
  menuitem.setAccelerator(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A,java.awt.Event.ALT_MASK));
  menuitem.addActionListener(actor);
  editMenu.add(menuitem);
  String msg="Hide HTML tags";
  if (hideHtml) {
    msg="Show HTML tags";
  }
  menuitem=new JMenuItem(msg);
  menuitem.addActionListener(actor);
  viewMenu.add(menuitem);
  menuitem=new JMenuItem("Load tag file");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  menuitem=new JMenuItem("Add tag");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  menuitem=new JMenuItem("Change tag color");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  menuitem=new JMenuItem("Save tag file");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  menuitem=new JMenuItem("Save tag file without colors");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  menuitem=new JMenuItem("Update display");
  menuitem.addActionListener(actor);
  tagsMenu.add(menuitem);
  warningsMenuItem=new JMenuItem("Suppress warnings");
  warningsMenuItem.addActionListener(actor);
  tagsMenu.add(warningsMenuItem);
  menuitem=new JMenuItem("About");
  menuitem.addActionListener(actor);
  aboutMenu.add(menuitem);
  return menubar;
}
