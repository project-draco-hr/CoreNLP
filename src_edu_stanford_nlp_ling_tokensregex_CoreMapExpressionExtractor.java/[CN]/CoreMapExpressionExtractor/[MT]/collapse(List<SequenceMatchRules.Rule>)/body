{
  List<SequenceMatchRules.Rule> collapsed=new ArrayList<>();
  List<TokenSequencePattern> patterns=null;
  SequenceMatchRules.AnnotationExtractRule aerTemplate=null;
  for (  SequenceMatchRules.Rule rule : rules) {
    boolean ruleHandled=false;
    if (rule instanceof SequenceMatchRules.AnnotationExtractRule) {
      SequenceMatchRules.AnnotationExtractRule aer=(SequenceMatchRules.AnnotationExtractRule)rule;
      if (aer.hasTokensRegexPattern()) {
        if (aerTemplate == null || aerTemplate.isMostlyCompatible(aer)) {
          if (aerTemplate == null) {
            aerTemplate=aer;
          }
          if (patterns == null) {
            patterns=new ArrayList<>();
          }
          patterns.add((TokenSequencePattern)aer.pattern);
          ruleHandled=true;
        }
      }
    }
    if (!ruleHandled) {
      if (aerTemplate != null) {
        SequenceMatchRules.AnnotationExtractRule merged=createMergedRule(aerTemplate,patterns);
        collapsed.add(merged);
        aerTemplate=null;
        patterns=null;
      }
      collapsed.add(rule);
    }
  }
  if (aerTemplate != null) {
    SequenceMatchRules.AnnotationExtractRule merged=createMergedRule(aerTemplate,patterns);
    collapsed.add(merged);
  }
  return collapsed;
}
