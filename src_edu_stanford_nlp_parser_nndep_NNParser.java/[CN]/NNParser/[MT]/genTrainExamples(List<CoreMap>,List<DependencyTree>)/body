{
  trainSet=new Dataset(config.numTokens,system.transitions.size());
  Counter<Integer> tokPosCount=new Counter<Integer>();
  System.out.println(CONST.SEPARATOR);
  System.out.println("Generate training examples...");
  for (int i=0; i < sents.size(); ++i) {
    if (i > 0) {
      if (i % 1000 == 0)       System.out.print(i + " ");
      if (i % 10000 == 0 || i == sents.size() - 1)       System.out.println();
    }
    if (trees.get(i).isProjective()) {
      Configuration c=system.initialConfiguration(sents.get(i));
      for (int k=0; k < trees.get(i).n * 2; ++k) {
        String oracle=system.getOracle(c,trees.get(i));
        List<Integer> feature=getFeatures(c);
        List<Integer> label=new ArrayList<Integer>();
        for (int j=0; j < system.transitions.size(); ++j) {
          String str=system.transitions.get(j);
          if (str.equals(oracle))           label.add(1);
 else           if (system.canApply(c,str))           label.add(0);
 else           label.add(-1);
        }
        trainSet.addExample(feature,label);
        for (int j=0; j < feature.size(); ++j)         tokPosCount.add(feature.get(j) * feature.size() + j);
        system.apply(c,oracle);
      }
    }
  }
  System.out.println("#Train Examples: " + trainSet.n);
  preComputed=tokPosCount.getSortedKeys(config.numPreComputed);
}
