{
  metricType=metricType.toLowerCase();
  int passIndex=sieveClassNames.length - 1;
  String scoreDesc=metricType;
  double finalScore;
switch (metricType) {
case "combined":
    finalScore=(scoreMUC.get(passIndex).getScore(subScoreType) + scoreBcubed.get(passIndex).getScore(subScoreType) + scorePairwise.get(passIndex).getScore(subScoreType)) / 3;
  scoreDesc="(muc + bcub + pairwise)/3";
break;
case "muc":
finalScore=scoreMUC.get(passIndex).getScore(subScoreType);
break;
case "bcub":
case "bcubed":
finalScore=scoreBcubed.get(passIndex).getScore(subScoreType);
break;
case "pairwise":
finalScore=scorePairwise.get(passIndex).getScore(subScoreType);
break;
default :
throw new IllegalArgumentException("Invalid sub score type:" + subScoreType);
}
logger.info("Final score (" + scoreDesc + ") "+ subScoreType+ " = "+ (new DecimalFormat("#.##")).format(finalScore));
return finalScore;
}
