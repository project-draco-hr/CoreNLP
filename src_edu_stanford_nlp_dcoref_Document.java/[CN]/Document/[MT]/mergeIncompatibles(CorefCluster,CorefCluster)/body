{
  List<Pair<Pair<Integer,Integer>,Pair<Integer,Integer>>> replacements=new ArrayList<Pair<Pair<Integer,Integer>,Pair<Integer,Integer>>>();
  for (  Pair<Integer,Integer> p : incompatibleClusters) {
    Integer other=null;
    if (p.first == from.clusterID) {
      other=p.second;
    }
 else     if (p.second == from.clusterID) {
      other=p.first;
    }
    if (other != null && other != to.clusterID) {
      int cid1=Math.min(other,to.clusterID);
      int cid2=Math.max(other,to.clusterID);
      replacements.add(Pair.makePair(p,Pair.makePair(cid1,cid2)));
    }
  }
  for (  Pair<Pair<Integer,Integer>,Pair<Integer,Integer>> r : replacements) {
    incompatibleClusters.remove(r.first.first(),r.first.second());
    incompatibleClusters.add(r.second.first(),r.second.second());
  }
}
