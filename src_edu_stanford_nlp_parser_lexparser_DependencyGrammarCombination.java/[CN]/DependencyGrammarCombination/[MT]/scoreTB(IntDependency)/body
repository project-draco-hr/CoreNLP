{
  double score1=grammar1.scoreTB(dependency);
  double score2=grammar2.scoreTB(dependency);
  score1/=op.testOptions.depWeight;
  score2/=op.testOptions.depWeight;
  double count=grammar1.countHistory(dependency);
  double alpha=(count + 1) / (count + wt2);
  double score=Math.log(alpha * Math.exp(score1) + (1 - alpha) * Math.exp(score2));
  if (Double.isNaN(score)) {
    score=Double.NEGATIVE_INFINITY;
  }
  if (score < -100) {
    score=Double.NEGATIVE_INFINITY;
  }
  return op.testOptions.depWeight * score;
}
