{
  return new SearchNodeIterator(){
    Stack<Tree> searchStack;
    @Override public void initialize(){
      searchStack=new Stack<>();
      for (int i=t.numChildren() - 1; i >= 0; i--) {
        searchStack.push(t.getChild(i));
      }
      if (!searchStack.isEmpty()) {
        advance();
      }
    }
    @Override void advance(){
      if (searchStack.isEmpty()) {
        next=null;
      }
 else {
        next=searchStack.pop();
        if (pathMatchesNode(next)) {
          for (int i=next.numChildren() - 1; i >= 0; i--) {
            searchStack.push(next.getChild(i));
          }
        }
      }
    }
  }
;
}
