{
  if (SIMPLE_RELATIONS_MAP.containsKey(s))   return SIMPLE_RELATIONS_MAP.get(s);
  if (s.equals("<,")) {
    return getRelation("<","1",basicCatFunction,headFinder);
  }
 else   if (parentOfLastChild.matcher(s).matches()) {
    return getRelation("<","-1",basicCatFunction,headFinder);
  }
 else   if (s.equals(">,")) {
    return getRelation(">","1",basicCatFunction,headFinder);
  }
 else   if (lastChildOfParent.matcher(s).matches()) {
    return getRelation(">","-1",basicCatFunction,headFinder);
  }
  Relation r;
switch (s) {
case ">>#":
    r=new Heads(headFinder);
  break;
case "<<#":
r=new HeadedBy(headFinder);
break;
case ">#":
r=new ImmediatelyHeads(headFinder);
break;
case "<#":
r=new ImmediatelyHeadedBy(headFinder);
break;
default :
throw new ParseException("Unrecognized simple relation " + s);
}
return Interner.globalIntern(r);
}
