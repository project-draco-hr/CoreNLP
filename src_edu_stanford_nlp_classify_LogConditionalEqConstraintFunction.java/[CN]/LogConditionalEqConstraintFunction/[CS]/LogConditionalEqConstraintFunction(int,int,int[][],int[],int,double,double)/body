{
  this.numFeatures=numFeatures;
  this.numClasses=numClasses;
  this.data=data;
  this.labels=labels;
  if (prior >= 0 && prior <= QUARTIC_PRIOR) {
    this.prior=prior;
  }
 else {
    throw new IllegalArgumentException("Invalid prior: " + prior);
  }
  this.epsilon=epsilon;
  this.sigma=sigma;
  numValues=NaiveBayesClassifierFactory.numberValues(data,numFeatures);
  for (int i=0; i < numValues.length; i++) {
    System.out.println("numValues " + i + " "+ numValues[i]);
  }
  featureIndex=createIndex();
}
