{
  int n=1000;
  IntervalTree<Integer,Interval<Integer>> tree=new IntervalTree<>();
  List<Interval<Integer>> list=new ArrayList<Interval<Integer>>(n + 1);
  for (int i=0; i < n; i++) {
    int x=i;
    int y=i + 1;
    Interval<Integer> interval=Interval.toValidInterval(x,y);
    tree.add(interval);
    list.add(interval);
  }
  Collections.sort(list);
  Interval<Integer> next=null;
  Iterator<Interval<Integer>> iterator=tree.iterator();
  for (int i=0; i < list.size(); i++) {
    assertTrue("HasItem " + i,iterator.hasNext());
    next=iterator.next();
    assertEquals("Item " + i,list.get(i),next);
  }
  assertFalse("No more items",iterator.hasNext());
}
