{
  return new AnnotatorFactory(properties,annotatorImplementation){
    private static final long serialVersionUID=1L;
    @Override public Annotator create(){
      if (Boolean.valueOf(properties.getProperty("tokenize.whitespace","false"))) {
        return annotatorImplementation.whitespaceTokenizer(properties);
      }
 else {
        String options=properties.getProperty("tokenize.options",PTBTokenizerAnnotator.DEFAULT_OPTIONS);
        boolean keepNewline=Boolean.valueOf(properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false"));
        if (properties.getProperty(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY) != null) {
          keepNewline=true;
        }
        if (keepNewline) {
          options="tokenizeNLs," + options;
        }
        return annotatorImplementation.ptbTokenizer(properties,false,options);
      }
    }
    @Override public String additionalSignature(){
      StringBuilder os=new StringBuilder();
      os.append("tokenize.whitespace:" + properties.getProperty("tokenize.whitespace","false"));
      if (properties.getProperty("tokenize.options") != null) {
        os.append(":tokenize.options:" + properties.getProperty("tokenize.options"));
      }
      if (Boolean.valueOf(properties.getProperty("tokenize.whitespace","false"))) {
        os.append(WhitespaceTokenizerAnnotator.EOL_PROPERTY + ":" + properties.getProperty(WhitespaceTokenizerAnnotator.EOL_PROPERTY,"false"));
        os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ":" + properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false"));
        return os.toString();
      }
 else {
        os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ":" + Boolean.valueOf(properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false")));
        os.append(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ":" + properties.getProperty(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY,StanfordCoreNLP.DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
      }
      return os.toString();
    }
  }
;
}
