{
  return new AnnotatorFactory(TokenizerAnnotator.class,properties){
    private static final long serialVersionUID=1L;
    @Override public Annotator create(){
      String extraOptions=null;
      boolean keepNewline=Boolean.valueOf(properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false"));
      String hasSsplit=properties.getProperty("annotators");
      if (hasSsplit != null && hasSsplit.contains(StanfordCoreNLP.STANFORD_SSPLIT)) {
        if (!Boolean.parseBoolean(properties.getProperty("ssplit.isOneSentence"))) {
          String nlsbString=properties.getProperty(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY,StanfordCoreNLP.DEFAULT_NEWLINE_IS_SENTENCE_BREAK);
          WordToSentenceProcessor.NewlineIsSentenceBreak nlsb=WordToSentenceProcessor.stringToNewlineIsSentenceBreak(nlsbString);
          if (nlsb != WordToSentenceProcessor.NewlineIsSentenceBreak.NEVER) {
            keepNewline=true;
          }
        }
      }
      if (keepNewline) {
        extraOptions="tokenizeNLs,";
      }
      return annotatorImplementation.tokenizer(properties,false,extraOptions);
    }
    @Override public String additionalSignature(){
      StringBuilder os=new StringBuilder();
      os.append("tokenize.whitespace:").append(properties.getProperty("tokenize.whitespace","false"));
      if (properties.getProperty("tokenize.options") != null) {
        os.append(":tokenize.options:").append(properties.getProperty("tokenize.options"));
      }
      if (properties.getProperty("tokenize.language") != null) {
        os.append(":tokenize.language:").append(properties.getProperty("tokenize.language"));
      }
      if (properties.getProperty("tokenize.class") != null) {
        os.append(":tokenize.class:").append(properties.getProperty("tokenize.class"));
      }
      if (Boolean.valueOf(properties.getProperty("tokenize.whitespace","false"))) {
        os.append(TokenizerAnnotator.EOL_PROPERTY + ':').append(properties.getProperty(TokenizerAnnotator.EOL_PROPERTY,"false"));
        os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ':');
        os.append(properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false"));
      }
 else {
        os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ':');
        os.append(properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY,"false"));
        os.append("ssplit.isOneSentence" + ':');
        os.append(properties.getProperty("ssplit.isOneSentence","false"));
        os.append(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ':');
        os.append(properties.getProperty(StanfordCoreNLP.NEWLINE_IS_SENTENCE_BREAK_PROPERTY,StanfordCoreNLP.DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
      }
      return os.toString();
    }
  }
;
}
