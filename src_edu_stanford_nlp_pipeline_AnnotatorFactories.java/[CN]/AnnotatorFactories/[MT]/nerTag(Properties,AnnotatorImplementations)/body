{
  return new AnnotatorFactory(properties,annotatorImplementation){
    private static final long serialVersionUID=1L;
    @Override public Annotator create(){
      try {
        return annotatorImplementation.ner(properties);
      }
 catch (      FileNotFoundException e) {
        throw new RuntimeIOException(e);
      }
    }
    @Override public String additionalSignature(){
      return "ner.model:" + properties.getProperty("ner.model","") + NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY+ ':'+ properties.getProperty(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY,Boolean.toString(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_DEFAULT))+ NumberSequenceClassifier.USE_SUTIME_PROPERTY+ ':'+ properties.getProperty(NumberSequenceClassifier.USE_SUTIME_PROPERTY,Boolean.toString(NumberSequenceClassifier.USE_SUTIME_DEFAULT));
    }
  }
;
}
