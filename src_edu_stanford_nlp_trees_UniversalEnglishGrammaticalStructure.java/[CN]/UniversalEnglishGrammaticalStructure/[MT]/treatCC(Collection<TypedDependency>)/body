{
  Map<IndexedWord,Set<TypedDependency>> map=Generics.newHashMap();
  Map<IndexedWord,TypedDependency> subjectMap=Generics.newHashMap();
  Set<IndexedWord> withPassiveAuxiliary=Generics.newHashSet();
  List<IndexedWord> rcmodHeads=Generics.newArrayList();
  List<IndexedWord> prepcDep=Generics.newArrayList();
  for (  TypedDependency typedDep : list) {
    if (!map.containsKey(typedDep.dep())) {
      map.put(typedDep.dep(),new TreeSet<TypedDependency>());
    }
    map.get(typedDep.dep()).add(typedDep);
    if (typedDep.reln().equals(AUX_PASSIVE_MODIFIER)) {
      withPassiveAuxiliary.add(typedDep.gov());
    }
    if (typedDep.reln().getParent() == NOMINAL_SUBJECT || typedDep.reln().getParent() == SUBJECT || typedDep.reln().getParent() == CLAUSAL_SUBJECT) {
      if (!subjectMap.containsKey(typedDep.gov())) {
        subjectMap.put(typedDep.gov(),typedDep);
      }
    }
    if (typedDep.reln() == RELATIVE_CLAUSE_MODIFIER) {
      rcmodHeads.add(typedDep.gov());
    }
    if (typedDep.reln().toString().startsWith("acl:") || typedDep.reln().toString().startsWith("advcl:")) {
      prepcDep.add(typedDep.dep());
    }
  }
  Collection<TypedDependency> newTypedDeps=new ArrayList<TypedDependency>(list);
  for (  TypedDependency td : list) {
    if (UniversalEnglishGrammaticalRelations.getConjs().contains(td.reln())) {
      IndexedWord gov=td.gov();
      IndexedWord dep=td.dep();
      Set<TypedDependency> gov_relations=map.get(gov);
      if (gov_relations != null) {
        for (        TypedDependency td1 : gov_relations) {
          IndexedWord newGov=td1.gov();
          if (newGov.equals(dep)) {
            continue;
          }
          GrammaticalRelation newRel=td1.reln();
          if (newRel != ROOT) {
            if (rcmodHeads.contains(gov) && rcmodHeads.contains(dep)) {
              if (newRel != DIRECT_OBJECT && newRel != NOMINAL_SUBJECT) {
                if (DEBUG) {
                  System.err.println("Adding new " + newRel + " dependency from "+ newGov+ " to "+ dep+ " (subj/obj case)");
                }
                newTypedDeps.add(new TypedDependency(newRel,newGov,dep));
              }
            }
 else {
              if (DEBUG) {
                System.err.println("Adding new " + newRel + " dependency from "+ newGov+ " to "+ dep);
              }
              newTypedDeps.add(new TypedDependency(newRel,newGov,dep));
            }
          }
        }
      }
      String tag=dep.tag();
      if (subjectMap.containsKey(gov) && (tag.startsWith("VB") || tag.startsWith("JJ")) && !subjectMap.containsKey(dep)) {
        TypedDependency tdsubj=subjectMap.get(gov);
        GrammaticalRelation relation=tdsubj.reln();
        if (relation == NOMINAL_PASSIVE_SUBJECT) {
          if (isDefinitelyActive(tag)) {
            relation=NOMINAL_SUBJECT;
          }
        }
 else         if (relation == CLAUSAL_PASSIVE_SUBJECT) {
          if (isDefinitelyActive(tag)) {
            relation=CLAUSAL_SUBJECT;
          }
        }
 else         if (relation == NOMINAL_SUBJECT) {
          if (withPassiveAuxiliary.contains(dep)) {
            relation=NOMINAL_PASSIVE_SUBJECT;
          }
        }
 else         if (relation == CLAUSAL_SUBJECT) {
          if (withPassiveAuxiliary.contains(dep)) {
            relation=CLAUSAL_PASSIVE_SUBJECT;
          }
        }
        if (DEBUG) {
          System.err.println("Adding new " + relation + " dependency from "+ dep+ " to "+ tdsubj.dep()+ " (subj propagation case)");
        }
        newTypedDeps.add(new TypedDependency(relation,dep,tdsubj.dep()));
      }
    }
  }
  list.clear();
  list.addAll(newTypedDeps);
}
