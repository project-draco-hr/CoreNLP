{
  for (  SemanticGraphEdge xcomp : sg.findAllRelns(XCLAUSAL_COMPLEMENT)) {
    IndexedWord modifier=xcomp.getDependent();
    IndexedWord head=xcomp.getGovernor();
    boolean hasSubjectDaughter=false;
    boolean hasAux=false;
    List<IndexedWord> subjects=Generics.newArrayList();
    List<IndexedWord> objects=Generics.newArrayList();
    for (    SemanticGraphEdge dep : sg.edgeIterable()) {
      if ((dep.getRelation() == NOMINAL_SUBJECT || dep.getRelation() == NOMINAL_PASSIVE_SUBJECT) && dep.getGovernor().equals(modifier)) {
        hasSubjectDaughter=true;
        break;
      }
      if ((dep.getRelation() == AUX_MODIFIER || dep.getRelation() == MARKER) && dep.getGovernor().equals(modifier)) {
        hasAux=true;
      }
      if ((dep.getRelation() == NOMINAL_SUBJECT || dep.getRelation() == NOMINAL_PASSIVE_SUBJECT) && dep.getGovernor().equals(head)) {
        subjects.add(dep.getDependent());
      }
      if (dep.getRelation() == DIRECT_OBJECT && dep.getGovernor().equals(head)) {
        objects.add(dep.getDependent());
      }
    }
    if (hasSubjectDaughter) {
      continue;
    }
    if ((modifier.value().equalsIgnoreCase("to") && hasAux) || (!modifier.value().equalsIgnoreCase("to") && !hasAux)) {
      continue;
    }
    if (objects.size() > 0) {
      for (      IndexedWord object : objects) {
        if (!sg.containsEdge(modifier,object))         sg.addEdge(modifier,object,NOMINAL_SUBJECT,Double.NEGATIVE_INFINITY,true);
      }
    }
 else {
      for (      IndexedWord subject : subjects) {
        if (!sg.containsEdge(modifier,subject))         sg.addEdge(modifier,subject,NOMINAL_SUBJECT,Double.NEGATIVE_INFINITY,true);
      }
    }
  }
}
