{
  if (sg.getRoots().isEmpty())   return;
  HashMap<String,HashSet<Integer>> bigrams=new HashMap<>();
  HashMap<String,HashSet<Integer>> trigrams=new HashMap<>();
  List<IndexedWord> vertexList=sg.vertexListSorted();
  int numWords=vertexList.size();
  for (int i=1; i < numWords; i++) {
    String bigram=vertexList.get(i - 1).value().toLowerCase() + "_" + vertexList.get(i).value().toLowerCase();
    if (bigrams.get(bigram) == null) {
      bigrams.put(bigram,new HashSet<>());
    }
    bigrams.get(bigram).add(vertexList.get(i - 1).index());
    if (i > 1) {
      String trigram=vertexList.get(i - 2).value().toLowerCase() + "_" + bigram;
      if (trigrams.get(trigram) == null) {
        trigrams.put(trigram,new HashSet<>());
      }
      trigrams.get(trigram).add(vertexList.get(i - 2).index());
    }
  }
  processSimple2WP(sg,bigrams);
  processComplex2WP(sg,bigrams);
  process3WP(sg,trigrams);
}
