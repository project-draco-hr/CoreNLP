{
  for (  String bigram : TWO_WORD_PREPS_COMPLEX) {
    if (bigrams.get(bigram) == null) {
      continue;
    }
    for (    Integer i : bigrams.get(bigram)) {
      IndexedWord w1=sg.getNodeByIndexSafe(i);
      IndexedWord w2=sg.getNodeByIndexSafe(i + 1);
      if (w1 == null || w2 == null) {
        continue;
      }
      SemgrexMatcher matcher=TWO_WORD_PREPS_COMPLEX_PATTERN.matcher(sg);
      IndexedWord gov=null;
      IndexedWord gov2=null;
      while (matcher.find()) {
        if (w1.equals(matcher.getNode("w1")) && w2.equals(matcher.getNode("w2"))) {
          gov=matcher.getNode("gov");
          gov2=matcher.getNode("gov2");
          break;
        }
      }
      if (gov2 == null) {
        continue;
      }
      if (sg.getRoots().contains(w1)) {
        SemanticGraphEdge edge=sg.getEdge(w1,gov2);
        if (edge == null) {
          continue;
        }
        sg.removeEdge(edge);
        sg.getRoots().remove(w1);
        sg.addRoot(gov2);
      }
 else {
        SemanticGraphEdge edge=sg.getEdge(w1,gov2);
        if (edge == null) {
          continue;
        }
        sg.removeEdge(edge);
        gov=gov == null ? sg.getParent(w1) : gov;
        if (gov == null) {
          continue;
        }
        GrammaticalRelation reln=edge.getRelation();
        if (sg.hasChildWithReln(w1,COPULA)) {
          GrammaticalRelation reln2=sg.getEdge(gov,w1).getRelation();
          if (clauseRelations.contains(reln2)) {
            reln=reln2;
          }
        }
        sg.addEdge(gov,gov2,reln,Double.NEGATIVE_INFINITY,false);
      }
      for (      SemanticGraphEdge edge2 : sg.getOutEdgesSorted(w1)) {
        sg.removeEdge(edge2);
        sg.addEdge(gov2,edge2.getDependent(),edge2.getRelation(),edge2.getWeight(),edge2.isExtra());
      }
      createMultiWordExpression(sg,gov2,CASE_MARKER,w1,w2);
    }
  }
}
