{
  if (DEBUG) {
    printListSorted("collapseDependencies: CCproc: " + CCprocess + " includeExtras: "+ includeExtras,list);
  }
  correctDependencies(list);
  if (true) {
    printListSorted("After correctDependencies:",list);
  }
  expandPrepConjunctions(list);
  if (true) {
    printListSorted("After expandPrepConjunctions:",list);
  }
  expandPPConjunctions(list);
  if (true) {
    printListSorted("After expandPPConjunctions:",list);
  }
  addCaseMarkerInformation(list);
  if (true) {
    printListSorted("After addCaseMarkerInformation:",list);
  }
  addConjInformation(list);
  if (true) {
    printListSorted("After addConjInformation:",list);
  }
  if (includeExtras.doRef) {
    SemanticGraph sg=new SemanticGraph(list);
    addRef(sg);
    list.clear();
    list.addAll(sg.toArrayList());
    if (DEBUG) {
      printListSorted("After adding ref:",list);
    }
    if (includeExtras.collapseRef) {
      sg=new SemanticGraph(list);
      collapseReferent(sg);
      list.clear();
      list.addAll(sg.toArrayList());
      if (DEBUG) {
        printListSorted("After collapse referent:",list);
      }
    }
  }
  if (CCprocess) {
    treatCC(list);
    if (DEBUG) {
      printListSorted("After treatCC:",list);
    }
  }
  if (includeExtras.doSubj) {
    SemanticGraph sg=new SemanticGraph(list);
    addExtraNSubj(sg);
    if (DEBUG) {
      printListSorted("After adding extra nsubj:",list);
    }
    correctSubjPass(sg);
    list.clear();
    list.addAll(sg.toArrayList());
    if (DEBUG) {
      printListSorted("After correctSubjPass:",list);
    }
  }
  Collections.sort(list);
  if (DEBUG) {
    printListSorted("After all collapse:",list);
  }
}
