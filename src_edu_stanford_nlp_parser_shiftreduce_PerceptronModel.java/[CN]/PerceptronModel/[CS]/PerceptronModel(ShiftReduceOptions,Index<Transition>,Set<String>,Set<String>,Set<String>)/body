{
  super(op,transitionIndex,knownStates,rootStates,rootOnlyStates);
  this.featureWeights=Generics.newHashMap();
  String[] classes=op.featureFactoryClass.split(";");
  if (classes.length == 1) {
    this.featureFactory=ReflectionLoading.loadByReflection(classes[0]);
  }
 else {
    FeatureFactory[] factories=new FeatureFactory[classes.length];
    for (int i=0; i < classes.length; ++i) {
      int paren=classes[i].indexOf("(");
      if (paren >= 0) {
        String arg=classes[i].substring(paren + 1,classes[i].length() - 1);
        factories[i]=ReflectionLoading.loadByReflection(classes[i].substring(0,paren),arg);
      }
 else {
        factories[i]=ReflectionLoading.loadByReflection(classes[i]);
      }
    }
    this.featureFactory=new CombinationFeatureFactory(factories);
  }
}
