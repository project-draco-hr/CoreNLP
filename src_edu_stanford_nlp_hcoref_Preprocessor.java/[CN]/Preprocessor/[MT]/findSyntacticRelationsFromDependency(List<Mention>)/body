{
  if (orderedMentions.size() == 0)   return;
  markListMemberRelation(orderedMentions);
  SemanticGraph dependency=orderedMentions.get(0).collapsedDependency;
  Set<Pair<Integer,Integer>> appos=Generics.newHashSet();
  List<SemanticGraphEdge> appositions=dependency.findAllRelns(EnglishGrammaticalRelations.APPOSITIONAL_MODIFIER);
  for (  SemanticGraphEdge edge : appositions) {
    int sIdx=edge.getSource().index() - 1;
    int tIdx=edge.getTarget().index() - 1;
    appos.add(Pair.makePair(sIdx,tIdx));
  }
  markMentionRelation(orderedMentions,appos,"APPOSITION");
  Set<Pair<Integer,Integer>> preNomi=Generics.newHashSet();
  List<SemanticGraphEdge> copula=dependency.findAllRelns(EnglishGrammaticalRelations.COPULA);
  for (  SemanticGraphEdge edge : copula) {
    IndexedWord source=edge.getSource();
    IndexedWord target=dependency.getChildWithReln(source,EnglishGrammaticalRelations.NOMINAL_SUBJECT);
    if (target == null)     target=dependency.getChildWithReln(source,EnglishGrammaticalRelations.CLAUSAL_SUBJECT);
    if (target == null)     continue;
    if (target.tag().startsWith("W")) {
      IndexedWord parent=dependency.getParent(source);
      if (parent != null && dependency.reln(parent,source).equals(EnglishGrammaticalRelations.RELATIVE_CLAUSE_MODIFIER)) {
        target=parent;
      }
    }
    int sIdx=source.index() - 1;
    int tIdx=target.index() - 1;
    preNomi.add(Pair.makePair(tIdx,sIdx));
  }
  markMentionRelation(orderedMentions,preNomi,"PREDICATE_NOMINATIVE");
  Set<Pair<Integer,Integer>> relativePronounPairs=Generics.newHashSet();
  markMentionRelation(orderedMentions,relativePronounPairs,"RELATIVE_PRONOUN");
}
