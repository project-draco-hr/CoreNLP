{
  Optional<RelationTriple> extraction=mkExtraction("1\tScania-Vabis\t2\tnsubj\tNNP\tORGANIZATION\n" + "2\testablished\t0\troot\tVB\tO\n" + "3\tproduction\t4\tcompound\tNN\tO\n"+ "4\tplant\t2\tdobj\tNN\tO\n"+ "5\toutside\t6\tcase\tIN\tO\n"+ "6\tS??dert??lje\t2\tnmod:outside\tNN\tO\n");
  assertTrue("No extraction for sentence!",extraction.isPresent());
  assertEquals("1.0\tScania-Vabis\testablished production plant outside\tS??dert??lje",extraction.get().toString());
  extraction=mkExtraction("1\tHun\t2\tcompound\tNNP\tPERSON\n" + "2\tSen\t3\tnsubj\tNNP\tPERSON\n" + "3\tplayed\t0\troot\tVBD\tO\n"+ "4\tgolf\t3\tdobj\tNN\tO\n"+ "5\twith\t6\tcase\tIN\tO\n"+ "6\tShinawatra\t3\tnmod:with\tNNP\tPERSON\n");
  assertTrue("No extraction for sentence!",extraction.isPresent());
  assertEquals("1.0\tHun Sen\tplayed golf with\tShinawatra",extraction.get().toString());
  extraction=mkExtraction("1\tHun\t2\tcompound\tNNP\tPERSON\n" + "2\tSen\t3\tnsubj\tNNP\tPERSON\n" + "3\tplayed\t0\troot\tVBD\tO\n"+ "4\tgolf\t3\tdobj\tNN\tO\n"+ "5\tShinawatra\t3\tnmod:with\tNNP\tPERSON\n"+ "6\tCambodia\t3\tdobj\tNNP\tLOCATION\n");
  assertFalse("Should not have found extraction for sentence! Incorrectly found: " + extraction.orElse(null),extraction.isPresent());
}
