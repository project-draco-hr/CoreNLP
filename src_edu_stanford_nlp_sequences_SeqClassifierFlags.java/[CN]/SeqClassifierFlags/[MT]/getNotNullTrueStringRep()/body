{
  try {
    String rep="";
    String joiner="\n";
    Field[] f=this.getClass().getFields();
    for (    Field ff : f) {
      String name=ff.getName();
      Class<?> type=ff.getType();
      if (type.equals(Boolean.class) || type.equals(boolean.class)) {
        boolean val=ff.getBoolean(this);
        if (val) {
          rep+=joiner + name + "="+ val;
        }
      }
 else       if (type.equals(String.class)) {
        String val=(String)ff.get(this);
        if (val != null)         rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(Double.class)) {
        Double val=(Double)ff.get(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(double.class)) {
        double val=ff.getDouble(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(Integer.class)) {
        Integer val=(Integer)ff.get(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(int.class)) {
        int val=ff.getInt(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(Float.class)) {
        Float val=(Float)ff.get(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(float.class)) {
        float val=ff.getFloat(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(Byte.class)) {
        Byte val=(Byte)ff.get(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(byte.class)) {
        byte val=ff.getByte(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(char.class)) {
        char val=ff.getChar(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(Long.class)) {
        Long val=(Long)ff.get(this);
        rep+=joiner + name + "="+ val;
      }
 else       if (type.equals(long.class)) {
        long val=ff.getLong(this);
        rep+=joiner + name + "="+ val;
      }
    }
    return rep;
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
