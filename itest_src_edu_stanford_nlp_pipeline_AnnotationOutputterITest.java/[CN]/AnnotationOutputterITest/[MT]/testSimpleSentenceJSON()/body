{
  Annotation ann=new Annotation("Bad wolf");
  pipeline.annotate(ann);
  String actual=new JSONOutputter().print(ann);
  String expected="{\n" + "  \"sentences\": [\n" + "    {\n"+ "      \"index\": 0,\n"+ "      \"parse\": \"(ROOT (NP (JJ Bad) (NN wolf)))\",\n"+ "      \"basicDependencies\": [\n"+ "        {\n"+ "          \"dep\": \"ROOT\",\n"+ "          \"governor\": 0,\n"+ "          \"governorGloss\": \"ROOT\",\n"+ "          \"dependent\": 2,\n"+ "          \"dependentGloss\": \"wolf\"\n"+ "        },\n"+ "        {\n"+ "          \"dep\": \"amod\",\n"+ "          \"governor\": 2,\n"+ "          \"governorGloss\": \"wolf\",\n"+ "          \"dependent\": 1,\n"+ "          \"dependentGloss\": \"Bad\"\n"+ "        }\n"+ "      ],\n"+ "      \"enhancedDependencies\": [\n"+ "        {\n"+ "          \"dep\": \"ROOT\",\n"+ "          \"governor\": 0,\n"+ "          \"governorGloss\": \"ROOT\",\n"+ "          \"dependent\": 2,\n"+ "          \"dependentGloss\": \"wolf\"\n"+ "        },\n"+ "        {\n"+ "          \"dep\": \"amod\",\n"+ "          \"governor\": 2,\n"+ "          \"governorGloss\": \"wolf\",\n"+ "          \"dependent\": 1,\n"+ "          \"dependentGloss\": \"Bad\"\n"+ "        }\n"+ "      ],\n"+ "      \"enhancedPlusPlusDependencies\": [\n"+ "        {\n"+ "          \"dep\": \"ROOT\",\n"+ "          \"governor\": 0,\n"+ "          \"governorGloss\": \"ROOT\",\n"+ "          \"dependent\": 2,\n"+ "          \"dependentGloss\": \"wolf\"\n"+ "        },\n"+ "        {\n"+ "          \"dep\": \"amod\",\n"+ "          \"governor\": 2,\n"+ "          \"governorGloss\": \"wolf\",\n"+ "          \"dependent\": 1,\n"+ "          \"dependentGloss\": \"Bad\"\n"+ "        }\n"+ "      ],\n"+ "      \"tokens\": [\n"+ "        {\n"+ "          \"index\": 1,\n"+ "          \"word\": \"Bad\",\n"+ "          \"originalText\": \"Bad\",\n"+ "          \"lemma\": \"bad\",\n"+ "          \"characterOffsetBegin\": 0,\n"+ "          \"characterOffsetEnd\": 3,\n"+ "          \"pos\": \"JJ\",\n"+ "          \"ner\": \"O\",\n"+ "          \"before\": \"\",\n"+ "          \"after\": \" \"\n"+ "        },\n"+ "        {\n"+ "          \"index\": 2,\n"+ "          \"word\": \"wolf\",\n"+ "          \"originalText\": \"wolf\",\n"+ "          \"lemma\": \"wolf\",\n"+ "          \"characterOffsetBegin\": 4,\n"+ "          \"characterOffsetEnd\": 8,\n"+ "          \"pos\": \"NN\",\n"+ "          \"ner\": \"O\",\n"+ "          \"before\": \" \",\n"+ "          \"after\": \"\"\n"+ "        }\n"+ "      ]\n"+ "    }\n"+ "  ]\n"+ "}";
  assertEquals(expected,actual);
}
