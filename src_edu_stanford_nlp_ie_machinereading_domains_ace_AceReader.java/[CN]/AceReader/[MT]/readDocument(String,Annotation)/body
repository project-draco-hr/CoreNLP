{
  logger.info("Reading document: " + prefix);
  List<CoreMap> results=new ArrayList<CoreMap>();
  AceDocument aceDocument;
  if (aceVersion.equals("ACE2004")) {
    aceDocument=AceDocument.parseDocument(prefix,false,aceVersion);
  }
 else {
    aceDocument=AceDocument.parseDocument(prefix,false);
  }
  String docId=aceDocument.getId();
  Map<String,EntityMention> entityMentionMap=Generics.newHashMap();
  int tokenOffset=0;
  for (int sentenceIndex=0; sentenceIndex < aceDocument.getSentenceCount(); sentenceIndex++) {
    List<AceToken> tokens=aceDocument.getSentence(sentenceIndex);
    List<CoreLabel> words=new ArrayList<CoreLabel>();
    StringBuilder textContent=new StringBuilder();
    for (int i=0; i < tokens.size(); i++) {
      CoreLabel l=new CoreLabel();
      l.setWord(tokens.get(i).getLiteral());
      l.set(CoreAnnotations.ValueAnnotation.class,l.word());
      l.set(CoreAnnotations.CharacterOffsetBeginAnnotation.class,tokens.get(i).getByteStart());
      l.set(CoreAnnotations.CharacterOffsetEndAnnotation.class,tokens.get(i).getByteEnd());
      words.add(l);
      if (i > 0)       textContent.append(" ");
      textContent.append(tokens.get(i).getLiteral());
    }
    if (words.size() == 1) {
      String word=words.get(0).word();
      if (word.startsWith("<") && word.endsWith(">")) {
        tokenOffset+=tokens.size();
        continue;
      }
    }
    CoreMap sentence=new Annotation(textContent.toString());
    sentence.set(CoreAnnotations.DocIDAnnotation.class,docId);
    sentence.set(CoreAnnotations.TokensAnnotation.class,words);
    logger.info("Reading sentence: \"" + textContent + "\"");
    List<AceEntityMention> entityMentions=aceDocument.getEntityMentions(sentenceIndex);
    List<AceRelationMention> relationMentions=aceDocument.getRelationMentions(sentenceIndex);
    List<AceEventMention> eventMentions=aceDocument.getEventMentions(sentenceIndex);
    for (    AceEntityMention aceEntityMention : entityMentions) {
      String corefID="";
      for (      String entityID : aceDocument.getKeySetEntities()) {
        AceEntity e=aceDocument.getEntity(entityID);
        if (e.getMentions().contains(aceEntityMention)) {
          corefID=entityID;
          break;
        }
      }
      EntityMention convertedMention=convertAceEntityMention(aceEntityMention,docId,sentence,tokenOffset,corefID);
      entityCounts.incrementCount(convertedMention.getType());
      logger.info("CONVERTED MENTION HEAD SPAN: " + convertedMention.getHead());
      logger.info("CONVERTED ENTITY MENTION: " + convertedMention);
      AnnotationUtils.addEntityMention(sentence,convertedMention);
      entityMentionMap.put(aceEntityMention.getId(),convertedMention);
    }
    for (    AceRelationMention aceRelationMention : relationMentions) {
      RelationMention convertedMention=convertAceRelationMention(aceRelationMention,docId,sentence,entityMentionMap);
      if (convertedMention != null) {
        relationCounts.incrementCount(convertedMention.getType());
        logger.info("CONVERTED RELATION MENTION: " + convertedMention);
        AnnotationUtils.addRelationMention(sentence,convertedMention);
      }
    }
    for (    AceEventMention aceEventMention : eventMentions) {
      EventMention convertedMention=convertAceEventMention(aceEventMention,docId,sentence,entityMentionMap,tokenOffset);
      if (convertedMention != null) {
        eventCounts.incrementCount(convertedMention.getType());
        logger.info("CONVERTED EVENT MENTION: " + convertedMention);
        AnnotationUtils.addEventMention(sentence,convertedMention);
      }
    }
    results.add(sentence);
    tokenOffset+=tokens.size();
  }
  return results;
}
