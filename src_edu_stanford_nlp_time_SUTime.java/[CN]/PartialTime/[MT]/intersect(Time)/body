{
  if (t == null || t == TIME_UNKNOWN)   return this;
  if (base == null)   return t;
  if (t instanceof CompositePartialTime) {
    return t.intersect(this);
  }
 else   if (t instanceof PartialTime) {
    if (!isCompatible((PartialTime)t)) {
      return null;
    }
    Partial p=JodaTimeUtils.combine(base,((PartialTime)t).base);
    return new PartialTime(p);
  }
 else   if (t instanceof GroundedTime) {
    return t.intersect(this);
  }
 else   if (t instanceof RelativeTime) {
    return t.intersect(this);
  }
 else {
    Time cpt=makeComposite(this,t);
    if (cpt != null) {
      return cpt;
    }
    if (t instanceof InexactTime) {
      return t.intersect(this);
    }
  }
  return null;
}
