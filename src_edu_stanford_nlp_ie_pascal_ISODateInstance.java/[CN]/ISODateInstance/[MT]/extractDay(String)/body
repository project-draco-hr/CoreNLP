{
  for (int a=0; a < tokens.size(); a++) {
    String extract=tokens.get(a);
    if (QuantifiableEntityNormalizer.wordsToValues.containsKey(extract)) {
      extract=Integer.toString(Double.valueOf(QuantifiableEntityNormalizer.wordsToValues.getCount(extract)).intValue());
    }
 else     if (QuantifiableEntityNormalizer.ordinalsToValues.containsKey(extract)) {
      extract=Integer.toString(Double.valueOf(QuantifiableEntityNormalizer.ordinalsToValues.getCount(extract)).intValue());
    }
    extract=extract.replaceAll("[^0-9]","");
    if (!extract.equals("")) {
      try {
        Long i=Long.parseLong(extract);
        if (i.intValue() < 32l && i.intValue() > 0l) {
          if (isoDate.length() < 6) {
            if (isoDate.length() != 4) {
              isoDate=isoDate + "******";
            }
 else {
              isoDate=isoDate + "**";
            }
          }
          String day=(i < 10) ? "0" + i : String.valueOf(i);
          isoDate=isoDate + day;
          return true;
        }
      }
 catch (      NumberFormatException e) {
        System.err.println("Exception in extract Day.");
        System.err.println("tokens size :" + tokens.size());
        e.printStackTrace();
      }
    }
  }
  return false;
}
