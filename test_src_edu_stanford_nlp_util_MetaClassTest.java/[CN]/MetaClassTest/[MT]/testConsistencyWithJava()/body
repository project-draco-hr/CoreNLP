{
  Object[] options=new Object[]{new String("hi"),new Something(),new SSomething(),new SubSSomething()};
  for (  Object option : options) {
    ManyConstructors ref=new ManyConstructors(option);
    ManyConstructors test=(ManyConstructors)MetaClass.create(CLASS + "$ManyConstructors").createFactory(Object.class).createInstance(option);
    assertEquals(ref.constructorInvoked(),test.constructorInvoked());
  }
  for (int i=0; i < options.length; i++) {
    ManyConstructors ref=makeRef(i);
    ManyConstructors test=(ManyConstructors)MetaClass.create(CLASS + "$ManyConstructors").createInstance(options[i]);
    assertEquals(ref,test);
  }
  for (int i=0; i < options.length; i++) {
    for (int j=0; j < options.length; j++) {
      ManyConstructors ref=makeRef(i,j);
      ManyConstructors test=(ManyConstructors)MetaClass.create(CLASS + "$ManyConstructors").createInstance(options[i],options[j]);
      assertEquals(ref,test);
    }
  }
}
