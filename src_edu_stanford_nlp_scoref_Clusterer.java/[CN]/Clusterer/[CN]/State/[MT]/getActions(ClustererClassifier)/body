{
  Counter<String> mergeFeatures=getFeatures(doc,c1,c2,globalFeatures.get(currentIndex));
  double mergeScore=Math.exp(classifier.weightFeatureProduct(mergeFeatures));
  hashedScores.put(new MergeKey(c1,c2,currentIndex),mergeScore > 0.5);
  State merge=new State(this);
  merge.doAction(true);
  double mergeB3=merge.getFinalCost(classifier);
  State noMerge=new State(this);
  noMerge.doAction(false);
  double noMergeB3=noMerge.getFinalCost(classifier);
  double weight=doc.mentions.size() / 100.0;
  double maxB3=Math.max(mergeB3,noMergeB3);
  return new Pair<CandidateAction,CandidateAction>(new CandidateAction(mergeFeatures,weight * (maxB3 - mergeB3)),new CandidateAction(new ClassicCounter<>(),weight * (maxB3 - noMergeB3)));
}
