{
  Map<String,String> docDates=(dct != null) ? IOUtils.readMap(dct) : IOUtils.readMap(in + "/dct.txt");
  if (requiredDocDateFormat != null) {
    DateFormat defaultFormatter=new SimpleDateFormat("yyyyMMdd");
    DateFormat requiredFormatter=new SimpleDateFormat(requiredDocDateFormat);
    for (    String docId : docDates.keySet()) {
      Date date=defaultFormatter.parse(docDates.get(docId));
      docDates.put(docId,requiredFormatter.format(date));
    }
  }
  processTempEval2Tab(pipeline,in,out,docDates);
  if (eval != null) {
    List<String> command=new ArrayList<String>();
    if (PYTHON != null) {
      command.add(PYTHON);
    }
    command.add(eval);
    command.add(in + "/base-segmentation.tab");
    command.add(in + "/timex-extents.tab");
    command.add(out + "/timex-extents.res.tab");
    command.add(in + "/timex-attributes.tab");
    command.add(out + "/timex-attrs.res.tab");
    ProcessBuilder pb=new ProcessBuilder(command);
    FileOutputStream evalFileOutput=new FileOutputStream(out + "/scores.txt");
    Writer output=new OutputStreamWriter(new TeeStream(System.out,evalFileOutput));
    SystemUtils.run(pb,output,null);
    evalFileOutput.close();
  }
}
