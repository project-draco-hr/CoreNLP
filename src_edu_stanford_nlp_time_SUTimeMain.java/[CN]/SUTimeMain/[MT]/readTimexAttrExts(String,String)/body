{
  Map<String,List<TimexAttributes>> timexMap=Generics.newHashMap();
  BufferedReader extBr=IOUtils.getBufferedFileReader(extentsFile);
  String line;
  String lastDocId=null;
  TimexAttributes lastTimex=null;
  while ((line=extBr.readLine()) != null) {
    if (line.trim().length() == 0)     continue;
    String[] fields=line.split("\t");
    String docName=fields[0];
    int sentNo=Integer.parseInt(fields[1]);
    int tokenNo=Integer.parseInt(fields[2]);
    String tid=fields[4];
    if (lastDocId != null && lastDocId.equals(docName) && lastTimex != null && lastTimex.tid.equals(tid)) {
      assert(lastTimex.sentIndex == sentNo);
      lastTimex.tokenEnd=tokenNo + 1;
    }
 else {
      lastDocId=docName;
      lastTimex=new TimexAttributes(tid,sentNo,tokenNo);
      List<TimexAttributes> list=timexMap.get(docName);
      if (list == null) {
        timexMap.put(docName,list=new ArrayList<TimexAttributes>());
      }
      list.add(lastTimex);
    }
  }
  extBr.close();
  BufferedReader attrBr=IOUtils.getBufferedFileReader(attrsFile);
  while ((line=attrBr.readLine()) != null) {
    if (line.trim().length() == 0)     continue;
    String[] fields=line.split("\t");
    String docName=fields[0];
    int sentNo=Integer.parseInt(fields[1]);
    int tokenNo=Integer.parseInt(fields[2]);
    String tid=fields[4];
    String attrname=fields[6];
    String attrvalue=fields[7];
    TimexAttributes timex=findTimex(timexMap,docName,tid);
    assert(timex.sentIndex == sentNo);
    assert(timex.tokenStart <= tokenNo && timex.tokenEnd > tokenNo);
    if ("type".equals(attrname)) {
      assert(timex.type == null || timex.type.equals(attrvalue));
      timex.type=attrvalue;
    }
 else     if ("value".equals(attrname)) {
      assert(timex.value == null || timex.value.equals(attrvalue));
      timex.value=attrvalue;
    }
 else {
      throw new RuntimeException("Error processing " + attrsFile + ":"+ "Unknown attribute "+ attrname+ ": from line "+ line);
    }
  }
  attrBr.close();
  return timexMap;
}
