{
  final int wordId=iTW.word();
  final int tagId=iTW.tag();
  final int boundaryId=wordIndex.indexOf(BOUNDARY);
  final int boundaryTagId=tagIndex.indexOf(BOUNDARY_TAG);
  if (wordId == boundaryId && tagId == boundaryTagId) {
    return 0.0f;
  }
  String tag=tagIndex.get(iTW.tag());
  Pair<String,String> lemmaMorph=MorphoFeatureSpecification.splitMorphString(word,featureSpec);
  String lemma=lemmaMorph.first();
  int lemmaId=wordIndex.indexOf(lemma);
  String richMorphTag=lemmaMorph.second();
  String reducedMorphTag=morphoSpec.strToFeatures(richMorphTag).toString().trim();
  reducedMorphTag=reducedMorphTag.length() == 0 ? NO_MORPH_ANALYSIS : reducedMorphTag;
  int morphId=morphIndex.indexOf(reducedMorphTag,true);
  double p_W_Tf=Math.log(probWordTag(word,loc,wordId,tagId));
  double p_L_T=0.0;
  double p_M_T=Math.log(probMorphTag(tagId,morphId));
  double p_W_T=p_W_Tf + p_L_T + p_M_T;
  if (DEBUG) {
    System.err.printf("WSGDEBUG: %s --> %s %s %s ||  %.10f (%.5f / %.5f / %.5f)%n",tag,word,lemma,reducedMorphTag,p_W_T,p_W_Tf,p_L_T,p_M_T);
  }
  return p_W_T > -100.0 ? (float)p_W_T : Float.NEGATIVE_INFINITY;
}
