{
  State state=initialState;
  success=true;
  unparsable=false;
  while (!state.finished) {
    Set<String> features=parser.featureFactory.featurize(state);
    ScoredObject<Integer> predictedTransition=parser.findHighestScoringTransition(state,features,true);
    if (predictedTransition.object() >= 0) {
      Transition transition=parser.transitionIndex.get(predictedTransition.object());
      state=transition.apply(state);
    }
 else {
      success=false;
      unparsable=true;
      break;
    }
  }
  finalState=state;
  debinarized=debinarizer.transformTree(state.stack.peek());
  return success;
}
