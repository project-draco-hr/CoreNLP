{
  OneDimDiffFunction oneDim=new OneDimDiffFunction(function,initial,direction);
  double guess=0.01;
  if (!silent) {
    log.info("[");
  }
  Triple bracketing=mnbrak(new Triple(0,guess,0),oneDim);
  if (!silent) {
    log.info("]");
  }
  double ax=bracketing.a;
  double xx=bracketing.b;
  double bx=bracketing.c;
  if (!(ax <= xx && xx <= bx) && !(bx <= xx && xx <= ax)) {
    log.info("Bad bracket order!");
  }
  if (verbose) {
    log.info("Bracketing found: " + ax + ' '+ xx+ ' '+ bx);
    log.info("Bracketing found: " + oneDim.valueAt(ax) + ' '+ oneDim.valueAt(xx)+ ' '+ oneDim.valueAt(bx));
  }
  if (!silent) {
    log.info("<");
  }
  double xmin=dbrent(oneDim,ax,xx,bx);
  if (!silent) {
    log.info(">");
  }
  return oneDim.vectorOf(xmin);
}
