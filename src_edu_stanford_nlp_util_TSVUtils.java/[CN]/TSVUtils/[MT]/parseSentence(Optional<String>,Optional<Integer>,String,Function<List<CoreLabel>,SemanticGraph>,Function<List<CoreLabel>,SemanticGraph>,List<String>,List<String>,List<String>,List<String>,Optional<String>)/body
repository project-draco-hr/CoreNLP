{
  if (lemmas.size() != words.size()) {
    throw new IllegalArgumentException("Array lengths don't match: " + words.size() + " vs "+ lemmas.size()+ " (sentence "+ sentenceid.orElse("???")+ ")");
  }
  if (pos.size() != words.size()) {
    throw new IllegalArgumentException("Array lengths don't match: " + words.size() + " vs "+ pos.size()+ " (sentence "+ sentenceid.orElse("???")+ ")");
  }
  if (ner.size() != words.size()) {
    throw new IllegalArgumentException("Array lengths don't match: " + words.size() + " vs "+ ner.size()+ " (sentence "+ sentenceid.orElse("???")+ ")");
  }
  List<CoreLabel> tokens=new ArrayList<>(words.size());
  int beginChar=0;
  for (int i=0; i < words.size(); ++i) {
    CoreLabel token=new CoreLabel(12);
    token.setWord(words.get(i));
    token.setValue(words.get(i));
    token.setBeginPosition(beginChar);
    token.setEndPosition(beginChar + words.get(i).length());
    beginChar+=words.get(i).length() + 1;
    token.setLemma(lemmas.get(i));
    token.setTag(pos.get(i));
    token.setNER(ner.get(i));
    token.set(CoreAnnotations.DocIDAnnotation.class,docid.orElse("???"));
    token.set(CoreAnnotations.SentenceIndexAnnotation.class,sentenceIndex.orElse(-1));
    token.set(CoreAnnotations.IndexAnnotation.class,i + 1);
    token.set(CoreAnnotations.TokenBeginAnnotation.class,i);
    token.set(CoreAnnotations.TokenEndAnnotation.class,i + 1);
    tokens.add(token);
  }
  gloss=gloss.replace("\\n","\n").replace("\\t","\t");
  CoreMap sentence=new ArrayCoreMap(16);
  sentence.set(CoreAnnotations.TokensAnnotation.class,tokens);
  SemanticGraph graph=tree.apply(tokens);
  sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,graph);
  sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,graph);
  sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class,graph);
  SemanticGraph maltGraph=maltTree.apply(tokens);
  sentence.set(SemanticGraphCoreAnnotations.AlternativeDependenciesAnnotation.class,maltGraph);
  sentence.set(CoreAnnotations.DocIDAnnotation.class,docid.orElse("???"));
  sentence.set(CoreAnnotations.SentenceIndexAnnotation.class,sentenceIndex.orElse(-1));
  sentence.set(CoreAnnotations.TextAnnotation.class,gloss);
  sentence.set(CoreAnnotations.TokenBeginAnnotation.class,0);
  sentence.set(CoreAnnotations.TokenEndAnnotation.class,tokens.size());
  Annotation doc=new Annotation(gloss);
  doc.set(CoreAnnotations.TokensAnnotation.class,tokens);
  doc.set(CoreAnnotations.SentencesAnnotation.class,Collections.singletonList(sentence));
  doc.set(CoreAnnotations.DocIDAnnotation.class,docid.orElse("???"));
  doc.set(CoreAnnotations.SentenceIndexAnnotation.class,sentenceIndex.orElse(-1));
  return doc;
}
