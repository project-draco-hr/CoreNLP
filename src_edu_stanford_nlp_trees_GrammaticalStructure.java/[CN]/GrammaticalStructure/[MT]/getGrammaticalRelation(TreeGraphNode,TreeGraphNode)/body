{
  GrammaticalRelation reln=GrammaticalRelation.DEPENDENT;
  TreeGraphNode govH=gov.highestNodeWithSameHead();
  TreeGraphNode depH=dep.highestNodeWithSameHead();
  Set<Class<? extends GrammaticalRelationAnnotation>> arcLabels=new TreeSet<Class<? extends GrammaticalRelationAnnotation>>(new NameComparator<Class<? extends GrammaticalRelationAnnotation>>());
  arcLabels.addAll(govH.arcLabelsToNode(depH));
  for (  Class<? extends GrammaticalRelationAnnotation> arcLabel : arcLabels) {
    if (arcLabel != null) {
      GrammaticalRelation reln2;
      try {
        reln2=GrammaticalRelation.getRelation(arcLabel);
      }
 catch (      Exception e) {
        continue;
      }
      if (reln.isAncestor(reln2)) {
        reln=reln2;
      }
 else       if (PRINT_DEBUGGING && !reln2.isAncestor(reln)) {
        System.err.println("@@@\t" + reln + "\t"+ reln2+ "\t"+ govH.label().get(CoreAnnotations.ValueAnnotation.class)+ "\t"+ depH.label().get(CoreAnnotations.ValueAnnotation.class));
      }
    }
  }
  if (PRINT_DEBUGGING && reln.equals(GrammaticalRelation.DEPENDENT)) {
    String topCat=govH.label().get(CoreAnnotations.ValueAnnotation.class);
    String topTag=govH.label().get(HeadTagAnnotation.class).value();
    String topWord=govH.label().get(HeadWordAnnotation.class).value();
    String botCat=depH.label().get(CoreAnnotations.ValueAnnotation.class);
    String botTag=depH.label().get(HeadTagAnnotation.class).value();
    String botWord=depH.label().get(HeadWordAnnotation.class).value();
    System.err.println("### dep\t" + topCat + "\t"+ topTag+ "\t"+ topWord+ "\t"+ botCat+ "\t"+ botTag+ "\t"+ botWord+ "\t");
  }
  return reln;
}
