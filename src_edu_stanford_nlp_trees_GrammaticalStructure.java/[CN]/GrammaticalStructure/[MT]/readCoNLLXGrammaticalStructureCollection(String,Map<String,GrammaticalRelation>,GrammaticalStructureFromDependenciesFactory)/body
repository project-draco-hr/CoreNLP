{
  LineNumberReader reader=new LineNumberReader(IOUtils.readerFromString(fileName));
  List<GrammaticalStructure> gsList=new LinkedList<GrammaticalStructure>();
  List<List<String>> tokenFields=new ArrayList<List<String>>();
  for (String inline=reader.readLine(); inline != null; inline=reader.readLine()) {
    if (!inline.isEmpty()) {
      List<String> fields=Arrays.asList(inline.split("\t"));
      if (fields.size() != CoNLLX_FieldCount) {
        throw new RuntimeException(String.format("Error (line %d): 10 fields expected but %d are present",reader.getLineNumber(),fields.size()));
      }
      tokenFields.add(fields);
    }
 else {
      if (tokenFields.isEmpty())       continue;
      gsList.add(buildCoNLLXGrammaticalStructure(tokenFields,shortNameToGRel,factory));
      tokenFields=new ArrayList<List<String>>();
    }
  }
  return gsList;
}
