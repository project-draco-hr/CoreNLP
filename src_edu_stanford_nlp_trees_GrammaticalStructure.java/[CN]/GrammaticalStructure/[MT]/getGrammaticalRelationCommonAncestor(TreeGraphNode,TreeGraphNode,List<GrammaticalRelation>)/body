{
  GrammaticalRelation reln=GrammaticalRelation.DEPENDENT;
  List<GrammaticalRelation> sortedLabels;
  if (labels.size() <= 1) {
    sortedLabels=labels;
  }
 else {
    sortedLabels=new ArrayList(labels);
    Collections.sort(sortedLabels,new NameComparator<GrammaticalRelation>());
  }
  for (  GrammaticalRelation reln2 : sortedLabels) {
    if (reln.isAncestor(reln2)) {
      reln=reln2;
    }
 else     if (PRINT_DEBUGGING && !reln2.isAncestor(reln)) {
      System.err.println("@@@\t" + reln + "\t"+ reln2+ "\t"+ govH.label().get(CoreAnnotations.ValueAnnotation.class)+ "\t"+ depH.label().get(CoreAnnotations.ValueAnnotation.class));
    }
  }
  if (PRINT_DEBUGGING && reln.equals(GrammaticalRelation.DEPENDENT)) {
    String topCat=govH.label().get(CoreAnnotations.ValueAnnotation.class);
    String topTag=govH.label().get(TreeCoreAnnotations.HeadTagAnnotation.class).value();
    String topWord=govH.label().get(TreeCoreAnnotations.HeadWordAnnotation.class).value();
    String botCat=depH.label().get(CoreAnnotations.ValueAnnotation.class);
    String botTag=depH.label().get(TreeCoreAnnotations.HeadTagAnnotation.class).value();
    String botWord=depH.label().get(TreeCoreAnnotations.HeadWordAnnotation.class).value();
    System.err.println("### dep\t" + topCat + "\t"+ topTag+ "\t"+ topWord+ "\t"+ botCat+ "\t"+ botTag+ "\t"+ botWord+ "\t");
  }
  return reln;
}
