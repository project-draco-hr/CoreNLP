{
  List<GrammaticalRelation> list=new ArrayList<GrammaticalRelation>();
  TreeGraphNode govH=gov.highestNodeWithSameHead();
  TreeGraphNode depH=dep.highestNodeWithSameHead();
  Set<Class<? extends GrammaticalRelationAnnotation>> arcLabels=govH.arcLabelsToNode(depH);
  if (dep != depH) {
    Set<Class<? extends GrammaticalRelationAnnotation>> arcLabels2=govH.arcLabelsToNode(dep);
    arcLabels.addAll(arcLabels2);
  }
  for (  Class<? extends GrammaticalRelationAnnotation> arcLabel : arcLabels) {
    if (arcLabel != null) {
      GrammaticalRelation reln=GrammaticalRelation.getRelation(arcLabel);
      boolean descendantFound=false;
      for (int index=0; index < list.size(); ++index) {
        GrammaticalRelation gr=list.get(index);
        if (gr.isAncestor(reln)) {
          list.remove(index);
          --index;
        }
 else         if (reln.isAncestor(gr)) {
          descendantFound=true;
        }
      }
      if (!descendantFound) {
        list.add(reln);
      }
    }
  }
  return list;
}
