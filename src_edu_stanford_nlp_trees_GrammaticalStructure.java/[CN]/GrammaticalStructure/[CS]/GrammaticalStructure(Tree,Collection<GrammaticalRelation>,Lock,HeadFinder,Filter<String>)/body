{
  super(t);
  if (hf == null) {
    throw new AssertionError("Cannot use null HeadFinder");
  }
  root.percolateHeads(hf);
  if (root.value() == null) {
    root.setValue("ROOT");
  }
  this.puncFilter=puncFilter;
  NoPunctFilter puncDepFilter=new NoPunctFilter(puncFilter);
  NoPunctTypedDependencyFilter puncTypedDepFilter=new NoPunctTypedDependencyFilter(puncFilter);
  DirectedMultiGraph<TreeGraphNode,GrammaticalRelation> basicGraph=new DirectedMultiGraph<TreeGraphNode,GrammaticalRelation>();
  if (relationsLock != null) {
    relationsLock.lock();
  }
  try {
    analyzeNode(root,root,relations,hf,puncFilter,basicGraph);
  }
  finally {
    if (relationsLock != null) {
      relationsLock.unlock();
    }
  }
  attachStrandedNodes(root,root,false,puncFilter,basicGraph);
  typedDependencies=getDeps(false,puncTypedDepFilter,basicGraph);
  allTypedDependencies=getDeps(true,puncTypedDepFilter,basicGraph);
}
