{
  super(t);
  root.percolateHeads(hf);
  NoPunctFilter puncDepFilter=new NoPunctFilter(puncFilter);
  NoPunctTypedDependencyFilter puncTypedDepFilter=new NoPunctTypedDependencyFilter(puncFilter);
  dependencies=root.dependencies(puncDepFilter,null);
  for (  Dependency<Label,Label,Object> p : dependencies) {
    TreeGraphNode gov=(TreeGraphNode)p.governor();
    TreeGraphNode dep=(TreeGraphNode)p.dependent();
    dep.addArc(GrammaticalRelation.getAnnotationClass(GOVERNOR),gov);
  }
  if (relationsLock != null) {
    relationsLock.lock();
  }
  try {
    analyzeNode(root,root,relations);
  }
  finally {
    if (relationsLock != null) {
      relationsLock.unlock();
    }
  }
  typedDependencies=getDeps(false,puncTypedDepFilter);
  allTypedDependencies=getDeps(true,puncTypedDepFilter);
}
