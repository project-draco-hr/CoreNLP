{
  super(t);
  if (hf == null) {
    throw new AssertionError("Cannot use null HeadFinder");
  }
  root.percolateHeads(hf);
  if (root.value() == null) {
    root.setValue("ROOT");
  }
  this.puncFilter=puncFilter;
  NoPunctFilter puncDepFilter=new NoPunctFilter(puncFilter);
  NoPunctTypedDependencyFilter puncTypedDepFilter=new NoPunctTypedDependencyFilter(puncFilter);
  Set<Dependency<Label,Label,Object>> dependencies=root.dependencies(puncDepFilter,null);
  for (  Dependency<Label,Label,Object> p : dependencies) {
    TreeGraphNode gov=(TreeGraphNode)p.governor();
    TreeGraphNode dep=(TreeGraphNode)p.dependent();
    dep.addArc(GrammaticalRelation.getAnnotationClass(GOVERNOR),gov);
  }
  if (relationsLock != null) {
    relationsLock.lock();
  }
  try {
    analyzeNode(root,root,relations,hf);
  }
  finally {
    if (relationsLock != null) {
      relationsLock.unlock();
    }
  }
  typedDependencies=getDeps(false,puncTypedDepFilter,dependencies);
  allTypedDependencies=getDeps(true,puncTypedDepFilter,dependencies);
}
