{
  List<String> word=new ArrayList<>();
  List<String> pos=new ArrayList<>();
  List<String> label=new ArrayList<>();
  for (  CoreMap sentence : sents) {
    List<CoreLabel> tokens=sentence.get(CoreAnnotations.TokensAnnotation.class);
    for (    CoreLabel token : tokens) {
      word.add(token.word());
      pos.add(token.tag());
    }
  }
  String rootLabel=null;
  for (  DependencyTree tree : trees)   for (int k=1; k <= tree.n; ++k)   if (tree.getHead(k) == 0)   rootLabel=tree.getLabel(k);
 else   label.add(tree.getLabel(k));
  knownWords=Util.generateDict(word,config.wordCutOff);
  knownPos=Util.generateDict(pos);
  knownLabels=Util.generateDict(label);
  knownLabels.add(0,rootLabel);
  knownWords.add(0,Config.UNKNOWN);
  knownWords.add(1,Config.NULL);
  knownWords.add(2,Config.ROOT);
  knownPos.add(0,Config.UNKNOWN);
  knownPos.add(1,Config.NULL);
  knownPos.add(2,Config.ROOT);
  knownLabels.add(0,Config.NULL);
  generateIDs();
  System.out.println(Config.SEPARATOR);
  System.out.println("#Word: " + knownWords.size());
  System.out.println("#POS:" + knownPos.size());
  System.out.println("#Label: " + knownLabels.size());
}
