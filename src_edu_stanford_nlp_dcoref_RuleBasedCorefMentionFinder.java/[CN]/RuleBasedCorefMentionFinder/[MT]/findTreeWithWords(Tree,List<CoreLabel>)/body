{
  List<Tree> leaves=tree.getLeaves();
  for (int i=0; i < leaves.size() - tokens.size() + 1; ++i) {
    boolean found=true;
    for (int j=0; j < tokens.size(); ++j) {
      if (!tokens.get(j).value().equals(leaves.get(i + j).label().value())) {
        found=false;
        break;
      }
    }
    if (found) {
      Tree subtree=Trees.getLowestCommonAncestor(Arrays.asList(leaves.get(i),leaves.get(i + tokens.size() - 1)),tree);
      return subtree;
    }
  }
  return null;
}
