{
  List<CoreLabel> sent=s.get(CoreAnnotations.TokensAnnotation.class);
  SemanticGraph dependency=s.get(SemanticGraphCoreAnnotations.AlternativeDependenciesAnnotation.class);
  int beginIndex=-1;
  for (  CoreLabel w : sent) {
    MultiTokenTag t=w.get(CoreAnnotations.MentionTokenAnnotation.class);
    if (t != null) {
      if (t.isStart()) {
        beginIndex=w.get(CoreAnnotations.IndexAnnotation.class) - 1;
      }
      if (t.isEnd()) {
        int endIndex=w.get(CoreAnnotations.IndexAnnotation.class);
        if (beginIndex >= 0) {
          IntPair mSpan=new IntPair(beginIndex,endIndex);
          int dummyMentionId=-1;
          Mention m=new Mention(dummyMentionId,beginIndex,endIndex,dependency,new ArrayList<>(sent.subList(beginIndex,endIndex)));
          mentions.add(m);
          mentionSpanSet.add(mSpan);
          beginIndex=-1;
        }
 else {
          SieveCoreferenceSystem.logger.warning("Start of marked mention not found in sentence: " + t + " at tokenIndex="+ (w.get(CoreAnnotations.IndexAnnotation.class) - 1)+ " for "+ s.get(CoreAnnotations.TextAnnotation.class));
        }
      }
    }
  }
}
