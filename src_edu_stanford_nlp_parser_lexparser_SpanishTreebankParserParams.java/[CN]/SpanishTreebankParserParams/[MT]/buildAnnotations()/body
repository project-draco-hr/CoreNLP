{
  annotations.put("-markInf",new Pair("/^(S|grup\\.verb|infinitiu|gerundi)/ < @infinitiu",new SimpleStringFunction("-infinitive")));
  annotations.put("-markGer",new Pair("/^(S|grup\\.verb|infinitiu|gerundi)/ < @gerundi",new SimpleStringFunction("-gerund")));
  annotations.put("-markRelative",new Pair("@S <, @relatiu",new SimpleStringFunction("-relative")));
  annotations.put("-markPPHeads",new Pair("@sp",new AnnotateHeadFunction(headFinder)));
  annotations.put("-markComo",new Pair("@cs < /(?i)^como$/",new SimpleStringFunction("[como]")));
  annotations.put("-markSpecHeads",new Pair("@spec",new AnnotateHeadFunction(headFinder)));
  annotations.put("-markSingleChildNPs",new Pair("/^(sn|grup\\.nom)/ <: __",new SimpleStringFunction("-singleChild")));
  annotations.put("-markPPFriendlyVerbs",new Pair("/^v/ > /^grup\\.prep/",new SimpleStringFunction("-PPFriendly")));
  annotations.put("-markConjTypes",new Pair("@conj <: /^c[cs]/=c",new MarkConjTypeFunction()));
  annotations.put("-markPronounNPs",new Pair("@sn <: (/^grup\\.nom/ <: /^pp/)",new SimpleStringFunction("-pronoun")));
  annotations.put("-markParticipleAdjs",new Pair("@aq0000 < /[aei??]d[oa]s?$/",new SimpleStringFunction("-part")));
  annotations.put("-markSentenceInitialClauses",new Pair("@S !, __",new SimpleStringFunction("-init")));
  annotations.put("-markPoder",new Pair(String.format("/^(infinitiu|gerundi|grup\\.verb)$/ <<: /%s/",PODER_FORM),new SimpleStringFunction("-poder")));
  annotations.put("-markBaseNPs",new Pair("/^grup\\.nom/ !< (__ < (__ < __))",new SimpleStringFunction("-base")));
  annotations.put("-markVerbless",new Pair("@S|sentence !<< /^(v|participi$)/",new SimpleStringFunction("-verbless")));
  compileAnnotations(headFinder);
}
