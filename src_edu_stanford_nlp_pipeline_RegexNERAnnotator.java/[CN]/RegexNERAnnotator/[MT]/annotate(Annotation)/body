{
  if (verbose) {
    timer.start();
    System.err.print("Adding RegexNER annotation...");
  }
  if (!annotation.containsKey(SentencesAnnotation.class))   throw new RuntimeException("Unable to find sentences in " + annotation);
  List<CoreMap> sentences=annotation.get(SentencesAnnotation.class);
  for (  CoreMap sentence : sentences) {
    List<CoreLabel> tokens=sentence.get(TokensAnnotation.class);
    classifier.classify(tokens);
    for (    CoreLabel token : tokens) {
      if (token.get(NamedEntityTagAnnotation.class) == null)       token.set(NamedEntityTagAnnotation.class,classifier.flags.backgroundSymbol);
    }
    for (int start=0; start < tokens.size(); start++) {
      CoreLabel token=tokens.get(start);
      String answerType=token.get(AnswerAnnotation.class);
      String NERType=token.get(NamedEntityTagAnnotation.class);
      if (answerType == null)       continue;
      int answerEnd=findEndOfAnswerAnnotation(tokens,start);
      int NERStart=findStartOfNERAnnotation(tokens,start);
      int NEREnd=findEndOfNERAnnotation(tokens,start);
      if ((NERStart == start || NERType.equals(classifier.flags.backgroundSymbol)) && (answerEnd == NEREnd || (NERType.equals(classifier.flags.backgroundSymbol) && NEREnd >= answerEnd))) {
        for (int i=start; i < answerEnd; i++)         tokens.get(i).set(NamedEntityTagAnnotation.class,answerType);
      }
      start=answerEnd - 1;
    }
  }
  if (verbose)   timer.stop("done.");
}
