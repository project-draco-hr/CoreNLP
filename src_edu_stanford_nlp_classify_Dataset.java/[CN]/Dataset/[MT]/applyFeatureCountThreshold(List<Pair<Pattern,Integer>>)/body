{
  float[] counts=getFeatureCounts();
  Index<F> newFeatureIndex=new HashIndex<>();
  LOOP:   for (  F f : featureIndex) {
    for (    Pair<Pattern,Integer> threshold : thresholds) {
      Pattern p=threshold.first();
      Matcher m=p.matcher(f.toString());
      if (m.matches()) {
        if (counts[featureIndex.indexOf(f)] >= threshold.second) {
          newFeatureIndex.add(f);
        }
        continue LOOP;
      }
    }
    newFeatureIndex.add(f);
  }
  counts=null;
  int[] featMap=new int[featureIndex.size()];
  for (int i=0; i < featMap.length; i++) {
    featMap[i]=newFeatureIndex.indexOf(featureIndex.get(i));
  }
  featureIndex=null;
  for (int i=0; i < size; i++) {
    List<Integer> featList=new ArrayList<>(data[i].length);
    for (int j=0; j < data[i].length; j++) {
      if (featMap[data[i][j]] >= 0) {
        featList.add(featMap[data[i][j]]);
      }
    }
    data[i]=new int[featList.size()];
    for (int j=0; j < data[i].length; j++) {
      data[i][j]=featList.get(j);
    }
  }
  featureIndex=newFeatureIndex;
}
