{
  String treeString="(albatross (foo 1) (bar 2))";
  Tree tree=treeFromString(treeString);
  TregexPattern pattern=TregexPattern.compile("/(.*)/#1%name < foo");
  TregexMatcher matcher=pattern.matcher(tree);
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertFalse(matcher.find());
  pattern=TregexPattern.compile("/(.*)/#1%name < /foo(.*)/#1%blah");
  matcher=pattern.matcher(tree);
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("",matcher.getVariableString("blah"));
  assertFalse(matcher.find());
  pattern=TregexPattern.compile("/(.*)/#1%name < (/(.*)/#1%blah < __)");
  matcher=pattern.matcher(tree);
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("foo",matcher.getVariableString("blah"));
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("bar",matcher.getVariableString("blah"));
  assertFalse(matcher.find());
  treeString="(albatross (foo foo_albatross) (bar foo_albatross))";
  tree=treeFromString(treeString);
  pattern=TregexPattern.compile("/(.*)/#1%name < (/(.*)/#1%blah < /(.*)_(.*)/#2%name)");
  matcher=pattern.matcher(tree);
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("foo",matcher.getVariableString("blah"));
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("bar",matcher.getVariableString("blah"));
  assertFalse(matcher.find());
  pattern=TregexPattern.compile("/(.*)/#1%name < (/(.*)/#1%blah < /(.*)_(.*)/#1%blah#2%name)");
  matcher=pattern.matcher(tree);
  assertTrue(matcher.find());
  assertEquals(treeString,matcher.getMatch().toString());
  assertEquals("albatross",matcher.getVariableString("name"));
  assertEquals("foo",matcher.getVariableString("blah"));
  assertFalse(matcher.find());
}
