{
  String parserModel=null;
  String sentimentModel=null;
  String filename=null;
  for (int argIndex=0; argIndex < args.length; ) {
    if (args[argIndex].equalsIgnoreCase("-file")) {
      filename=args[argIndex + 1];
      argIndex+=2;
    }
 else {
      System.err.println("Unknown argument " + args[argIndex + 1]);
      throw new IllegalArgumentException("Unknown argument " + args[argIndex + 1]);
    }
  }
  Properties props=new Properties();
  props.setProperty("annotators","tokenize, ssplit, parse, sentiment");
  if (sentimentModel != null) {
    props.setProperty("sentiment.model",sentimentModel);
  }
  if (parserModel != null) {
    props.setProperty("parse.model",parserModel);
  }
  StanfordCoreNLP pipeline=new StanfordCoreNLP(props);
  String text=IOUtils.slurpFileNoExceptions(filename);
  Annotation annotation=new Annotation(text);
  pipeline.annotate(annotation);
  for (  CoreMap sentence : annotation.get(CoreAnnotations.SentencesAnnotation.class)) {
    Tree tree=sentence.get(SentimentCoreAnnotations.AnnotatedTree.class);
    int sentiment=RNNCoreAnnotations.getPredictedClass(tree);
    System.err.println(sentence);
    System.err.println("  Predicted sentiment: " + sentimentString(sentiment));
  }
}
