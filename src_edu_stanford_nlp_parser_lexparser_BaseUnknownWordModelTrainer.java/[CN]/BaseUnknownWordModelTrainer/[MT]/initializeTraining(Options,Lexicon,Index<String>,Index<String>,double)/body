{
  super.initializeTraining(op,lex,wordIndex,tagIndex,totalTrees);
  seenCounter=new ClassicCounter<IntTaggedWord>();
  unSeenCounter=new ClassicCounter<IntTaggedWord>();
  tagHash=Generics.newHashMap();
  tc=new ClassicCounter<Label>();
  c=Generics.newHashMap();
  seenEnd=Generics.newHashSet();
  useEnd=(op.lexOptions.unknownSuffixSize > 0 && op.lexOptions.useUnknownWordSignatures > 0);
  useFirstCap=op.lexOptions.useUnknownWordSignatures > 0;
  useGT=(op.lexOptions.useUnknownWordSignatures == 0);
  useFirst=false;
  if (useFirst) {
    System.err.println("Including first letter for unknown words.");
  }
  if (useFirstCap) {
    System.err.println("Including whether first letter is capitalized for unknown words");
  }
  if (useEnd) {
    System.err.println("Classing unknown word as the average of their equivalents by identity of last " + op.lexOptions.unknownSuffixSize + " letters.");
  }
  if (useGT) {
    System.err.println("Using Good-Turing smoothing for unknown words.");
  }
  this.indexToStartUnkCounting=(totalTrees * op.trainOptions.fractionBeforeUnseenCounting);
  this.unknownGTTrainer=(useGT) ? new UnknownGTTrainer() : null;
  this.model=buildUWM();
}
