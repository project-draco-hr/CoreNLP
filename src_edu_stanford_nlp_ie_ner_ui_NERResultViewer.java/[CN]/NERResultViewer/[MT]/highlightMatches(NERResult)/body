{
  String text=textPane.getText();
  ArrayList matchedRanges=new ArrayList();
  for (Iterator iter=result.getMatches().iterator(); iter.hasNext(); ) {
    NERMatch match=(NERMatch)iter.next();
    int startIndex=StringUtils.nthIndex(text,' ',match.getStart());
    if (startIndex == -1) {
      System.err.println("ERROR: highlightMatches: illegal start index: " + match.getStart());
      continue;
    }
    if (startIndex > 0) {
      startIndex++;
    }
    int endIndex=StringUtils.nthIndex(text,' ',match.getEnd() + 1);
    if (endIndex == -1) {
      endIndex=text.length();
    }
    highlightText(startIndex,endIndex,highlightStyles[match.getType()]);
    IndexPair newRange=new IndexPair(match.getStart(),match.getEnd());
    for (Iterator iter2=matchedRanges.iterator(); iter2.hasNext(); ) {
      IndexPair range=(IndexPair)iter2.next();
      IndexPair overlap=getOverlap(range,newRange);
      if (overlap != null) {
        startIndex=StringUtils.nthIndex(text,' ',overlap.start);
        if (startIndex > 0) {
          startIndex++;
        }
        endIndex=StringUtils.nthIndex(text,' ',overlap.end + 1);
        if (endIndex == -1) {
          endIndex=text.length();
        }
        highlightText(startIndex,endIndex,highlightStyles[3]);
      }
    }
    matchedRanges.add(newRange);
  }
}
