{
  int[] indsselected=new int[train.numAttributes];
  byte guessedCorrect[]=new byte[train.numSamples()];
  boolean improves=true;
  indsselected[0]=inds[0];
  int current=0;
  int currentAcc=0;
  int max=top;
  while (improves && (currentAcc < max)) {
    improves=false;
    for (int i=0; i < train.numSamples(); i++) {
      if (guessedCorrect[i] < 2) {
        double[] a=train.getData(i).x;
        int y=train.getClass(i);
        String cls=train.getYName(y);
        int j=inds[currentAcc];
        if (train.getAttrName(j,(int)a[j]).equals(cls)) {
          guessedCorrect[i]++;
        }
      }
    }
    while (currentAcc < max) {
      if (improves) {
        break;
      }
      currentAcc++;
      for (int i=0; i < train.numSamples(); i++) {
        if (guessedCorrect[i] < 2) {
          double[] a=train.getData(i).x;
          int y=train.getClass(i);
          String cls=train.getYName(y);
          int j=inds[currentAcc];
          if (train.getAttrName(j,(int)a[j]).equals(cls)) {
            improves=true;
            current++;
            indsselected[current]=inds[currentAcc];
            System.out.println(" Adding " + currentAcc);
            break;
          }
        }
      }
    }
  }
  System.out.println("Selected " + (current + 1) + " classifiers ");
  selected=current + 1;
  if (fitNumClassifiers && selectOverlap) {
    top=selected;
    for (int i=0; i < top; i++) {
      inds[i]=indsselected[i];
    }
  }
}
