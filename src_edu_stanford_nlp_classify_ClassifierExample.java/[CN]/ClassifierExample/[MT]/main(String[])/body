{
  List<Datum<String,String>> trainingData=new ArrayList<Datum<String,String>>();
  trainingData.add(makeStopLights(GREEN,RED));
  trainingData.add(makeStopLights(GREEN,RED));
  trainingData.add(makeStopLights(GREEN,RED));
  trainingData.add(makeStopLights(RED,GREEN));
  trainingData.add(makeStopLights(RED,GREEN));
  trainingData.add(makeStopLights(RED,GREEN));
  trainingData.add(makeStopLights(RED,RED));
  Datum<String,String> workingLights=makeStopLights(GREEN,RED);
  Datum<String,String> brokenLights=makeStopLights(RED,RED);
  LinearClassifierFactory<String,String> factory=new LinearClassifierFactory<String,String>();
  factory.useConjugateGradientAscent();
  factory.setVerbose(true);
  factory.setSigma(10.0);
  LinearClassifier<String,String> classifier=factory.trainClassifier(trainingData);
  classifier.dump();
  System.out.println("Working instance got: " + classifier.classOf(workingLights));
  classifier.justificationOf(workingLights);
  System.out.println("Broken instance got: " + classifier.classOf(brokenLights));
  classifier.justificationOf(brokenLights);
}
