{
  Properties prop=StringUtils.argsToProperties(args);
  String trainFile=prop.getProperty("train");
  String testFile=prop.getProperty("test");
  int numComponents=Integer.parseInt(prop.getProperty("numComponents"));
  int maxIter=Integer.parseInt(prop.getProperty("maxIter"));
  double convergence=Double.parseDouble(prop.getProperty("convergence"));
  double priorScale=Double.parseDouble(prop.getProperty("priorScale"));
  List<GeneralDataset<String,String>> datasets=new ArrayList<GeneralDataset<String,String>>();
  for (int j=0; j < numComponents; j++) {
    String compTrainFile=trainFile + "_" + j+ ".txt";
    GeneralDataset<String,String> dataset=RVFDataset.readSVMLightFormat(compTrainFile);
    datasets.add(dataset);
  }
  List<DataCollection<String,String>> dataCollections=new ArrayList<DataCollection<String,String>>();
  for (int j=0; j < numComponents; j++) {
    DataCollection<String,String> dataCollection=BasicDataCollection.readSVMLightFormat(testFile + "_" + j+ ".txt");
    dataCollections.add(dataCollection);
  }
  MixtureOfLogistics<String,String> mol=new MixtureOfLogistics<String,String>(datasets,maxIter,convergence,priorScale);
  mol.runEMCrossValidation(maxIter,true,1.0);
  System.out.println("Finished training!");
  double accuracy=mol.test(dataCollections,1.0);
  System.out.printf("Accuracy = %2.2f\n",accuracy);
  mol.printAll();
}
