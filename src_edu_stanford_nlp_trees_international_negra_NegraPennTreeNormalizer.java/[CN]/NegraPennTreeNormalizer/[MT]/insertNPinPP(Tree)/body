{
  if (tlp.basicCategory(t.label().value()).equals("PP")) {
    Tree[] kids=t.children();
    int i=0;
    int j=kids.length - 1;
    while (i < j && prepositionTags.contains(tlp.basicCategory(kids[i].label().value()))) {
      i++;
    }
    while (i < j && postpositionTags.contains(tlp.basicCategory(kids[j].label().value()))) {
      j--;
    }
    if (i > j) {
      log.info("##### Warning -- no NP material here!");
      return;
    }
    int npKidsLength=j - i + 1;
    Tree[] npKids=new Tree[npKidsLength];
    System.arraycopy(kids,i,npKids,0,npKidsLength);
    Tree np=t.treeFactory().newTreeNode(t.label().labelFactory().newLabel("NP"),Arrays.asList(npKids));
    Tree[] newPPkids=new Tree[kids.length - npKidsLength + 1];
    System.arraycopy(kids,0,newPPkids,0,i + 1);
    newPPkids[i]=np;
    System.arraycopy(kids,j + 1,newPPkids,i + 1,kids.length - j - 1);
    t.setChildren(newPPkids);
    System.out.println("#### inserted NP in PP");
    t.pennPrint();
  }
}
