{
  List<CoreMap> sentences=anno.get(SentencesAnnotation.class);
  for (  CoreMap sentence : sentences) {
    Tree tree=sentence.get(TreeAnnotation.class);
    if (tree == null)     continue;
    SemanticGraph deps=null;
    SemanticGraph basicDeps=null;
    if (options.lang == Locale.CHINESE) {
      final boolean threadSafe=true;
      deps=SemanticGraphFactory.makeFromTree(new ChineseGrammaticalStructure(tree,Filters.acceptFilter(),chineseHeadFinder),SemanticGraphFactory.Mode.COLLAPSED,GrammaticalStructure.Extras.NONE,threadSafe,null);
      basicDeps=SemanticGraphFactory.makeFromTree(new ChineseGrammaticalStructure(tree,Filters.acceptFilter(),chineseHeadFinder),SemanticGraphFactory.Mode.BASIC,GrammaticalStructure.Extras.NONE,threadSafe,null);
    }
 else {
      deps=SemanticGraphFactory.makeFromTree(tree,true);
      basicDeps=SemanticGraphFactory.makeFromTree(tree,false);
    }
    sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,basicDeps);
    sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,deps);
  }
}
