{
  super(ois,props);
  Boolean diskUseSUTime=ois.readBoolean();
  if (props.getProperty("ner.useSUTime") != null) {
    this.useSUTime=Boolean.parseBoolean(props.getProperty("ner.useSUTime"));
  }
 else {
    this.useSUTime=diskUseSUTime;
  }
  Boolean diskApplyNumericClassifiers=ois.readBoolean();
  if (props.getProperty("ner.applyNumericClassifiers") != null) {
    this.applyNumericClassifiers=Boolean.parseBoolean(props.getProperty("ner.applyNumericClassifiers"));
  }
 else {
    this.applyNumericClassifiers=diskApplyNumericClassifiers;
  }
  this.nsc=new NumberSequenceClassifier(new Properties(),useSUTime,props);
  if (PropertiesUtils.getBool(props,NERClassifierCombiner.APPLY_GAZETTE_PROPERTY,NERClassifierCombiner.APPLY_GAZETTE_DEFAULT)) {
    this.gazetteMapping=readRegexnerGazette(DefaultPaths.DEFAULT_NER_GAZETTE_MAPPING);
  }
 else {
    this.gazetteMapping=Collections.emptyMap();
  }
}
