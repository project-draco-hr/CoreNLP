{
  String prefix=(name == null) ? "ner." : name.isEmpty() ? "" : name + '.';
  String modelNames=properties.getProperty(prefix + "model");
  if (modelNames == null) {
    modelNames=DefaultPaths.DEFAULT_NER_THREECLASS_MODEL + ',' + DefaultPaths.DEFAULT_NER_MUC_MODEL+ ','+ DefaultPaths.DEFAULT_NER_CONLL_MODEL;
  }
  String[] models;
  if (!modelNames.isEmpty()) {
    models=modelNames.split(",");
  }
 else {
    log.info("WARNING: no NER models specified");
    models=StringUtils.EMPTY_STRING_ARRAY;
  }
  NERClassifierCombiner nerCombiner;
  try {
    boolean applyNumericClassifiers=PropertiesUtils.getBool(properties,prefix + APPLY_NUMERIC_CLASSIFIERS_PROPERTY_BASE,APPLY_NUMERIC_CLASSIFIERS_DEFAULT);
    boolean useSUTime=PropertiesUtils.getBool(properties,prefix + NumberSequenceClassifier.USE_SUTIME_PROPERTY_BASE,NumberSequenceClassifier.USE_SUTIME_DEFAULT);
    boolean applyRegexner=PropertiesUtils.getBool(properties,NERClassifierCombiner.APPLY_GAZETTE_PROPERTY,NERClassifierCombiner.APPLY_GAZETTE_DEFAULT);
    Properties combinerProperties;
    if (passDownProperties != null) {
      combinerProperties=PropertiesUtils.extractSelectedProperties(properties,passDownProperties);
      if (useSUTime) {
        Properties sutimeProps=PropertiesUtils.extractPrefixedProperties(properties,NumberSequenceClassifier.SUTIME_PROPERTY + ".",true);
        PropertiesUtils.overWriteProperties(combinerProperties,sutimeProps);
      }
    }
 else {
      combinerProperties=properties;
    }
    nerCombiner=new NERClassifierCombiner(applyNumericClassifiers,NERClassifierCombiner.NER_LANGUAGE_DEFAULT,useSUTime,applyRegexner,combinerProperties,models);
  }
 catch (  IOException e) {
    throw new RuntimeIOException(e);
  }
  return nerCombiner;
}
