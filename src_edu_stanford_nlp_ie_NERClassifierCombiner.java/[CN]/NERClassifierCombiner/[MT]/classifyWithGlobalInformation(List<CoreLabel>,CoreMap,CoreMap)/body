{
  List<CoreLabel> output=super.classify(tokens);
  if (applyNumericClassifiers) {
    try {
      recognizeNumberSequences(output,document,sentence);
    }
 catch (    RuntimeInterruptedException e) {
      throw e;
    }
catch (    Exception e) {
      log.info("Ignored an exception in NumberSequenceClassifier: (result is that some numbers were not classified)");
      log.info("Tokens: " + StringUtils.joinWords(tokens," "));
      e.printStackTrace(System.err);
    }
    copyAnswerFieldsToNERField(output);
    try {
      QuantifiableEntityNormalizer.addNormalizedQuantitiesToEntities(output,false,useSUTime);
    }
 catch (    Exception e) {
      log.info("Ignored an exception in QuantifiableEntityNormalizer: (result is that entities were not normalized)");
      log.info("Tokens: " + StringUtils.joinWords(tokens," "));
      e.printStackTrace(System.err);
    }
catch (    AssertionError e) {
      log.info("Ignored an assertion in QuantifiableEntityNormalizer: (result is that entities were not normalized)");
      log.info("Tokens: " + StringUtils.joinWords(tokens," "));
      e.printStackTrace(System.err);
    }
  }
 else {
    copyAnswerFieldsToNERField(output);
  }
  for (int i=1; i < tokens.size(); ++i) {
    CoreLabel token=tokens.get(i);
    if (token.tag().charAt(0) == 'N' && "O".equals(token.ner()) || "MISC".equals(token.ner())) {
      String target=gazetteMapping.get(token.originalText());
      if (target != null) {
        token.setNER(target);
      }
    }
  }
  return output;
}
