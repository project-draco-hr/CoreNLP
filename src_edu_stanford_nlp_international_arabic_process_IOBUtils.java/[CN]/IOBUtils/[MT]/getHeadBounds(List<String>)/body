{
  final int NOT_FOUND=-1;
  int potentialSuffix=segments.size() - 1;
  int nonSuffix=NOT_FOUND;
  int potentialPrefix=0;
  int nonPrefix=NOT_FOUND;
  while (true) {
    if (nonSuffix == NOT_FOUND) {
      if (arSuffixSet.contains(segments.get(potentialSuffix)))       potentialSuffix--;
 else       nonSuffix=potentialSuffix;
    }
    if (potentialSuffix < potentialPrefix)     break;
    if (nonPrefix == NOT_FOUND) {
      if (arPrefixSet.contains(segments.get(potentialPrefix)))       potentialPrefix++;
 else       nonPrefix=potentialPrefix;
    }
    if (potentialSuffix < potentialPrefix || (nonSuffix != NOT_FOUND && nonPrefix != NOT_FOUND))     break;
  }
  if (potentialSuffix < potentialPrefix) {
    if (potentialSuffix + 1 != potentialPrefix)     throw new RuntimeException("Suffix pointer moved too far!");
    return Pair.makePair(potentialSuffix + 1,potentialSuffix + 1);
  }
 else {
    int headIndex=nonPrefix;
    for (int i=nonPrefix + 1; i <= nonSuffix; i++) {
      if (segments.get(i).length() > segments.get(headIndex).length())       headIndex=i;
    }
    return Pair.makePair(headIndex,headIndex + 1);
  }
}
