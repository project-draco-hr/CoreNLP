{
  System.err.println("Training interpolation weights...");
  double[] cll=new double[classifiers.size()];
  List<CMMClassifier> ordered=new ArrayList<CMMClassifier>(classifiers.keySet());
  for (int i=0; i < ordered.size(); i++) {
    CMMClassifier c=ordered.get(i);
    cll[i]=c.loglikelihood(train);
  }
  int numClassifiers=classifiers.size();
  DiffFunction[] ineqConstraints=new DiffFunction[numClassifiers];
  for (int i=0; i < numClassifiers; i++) {
    ineqConstraints[i]=new ComponentMinimumConstraint(numClassifiers,i,0.0);
  }
  ConstrainedMinimizer minimizer=new PenaltyConstrainedMinimizer(new CGMinimizer());
  double[] weights=minimizer.minimize(new InterpolationDiffFunction(cll),flags.tolerance,new DiffFunction[]{new SumToOneConstraintFunction(numClassifiers)},flags.tolerance,ineqConstraints,flags.tolerance,new double[classifiers.size()]);
  for (int i=0; i < ordered.size(); i++) {
    CMMClassifier c=ordered.get(i);
    classifiers.put(c,new Double(weights[i]));
  }
  System.err.print("Interpolation weights: [");
  for (int i=0; i < weights.length; i++) {
    if (i > 0) {
      System.err.print(" ");
    }
    System.err.print(weights[i]);
  }
  System.err.println("]");
}
