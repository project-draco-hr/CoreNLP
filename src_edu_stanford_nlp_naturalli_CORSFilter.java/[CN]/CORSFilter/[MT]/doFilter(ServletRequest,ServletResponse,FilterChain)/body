{
  if (!(servletRequest instanceof HttpServletRequest) || !(servletResponse instanceof HttpServletResponse)) {
    String message="CORS doesn't support non-HTTP request or response.";
    throw new ServletException(message);
  }
  HttpServletRequest request=(HttpServletRequest)servletRequest;
  HttpServletResponse response=(HttpServletResponse)servletResponse;
  CORSFilter.CORSRequestType requestType=checkRequestType(request);
  if (decorateRequest) {
    CORSFilter.decorateCORSProperties(request,requestType);
  }
switch (requestType) {
case SIMPLE:
    this.handleSimpleCORS(request,response,filterChain);
  break;
case ACTUAL:
this.handleSimpleCORS(request,response,filterChain);
break;
case PRE_FLIGHT:
this.handlePreflightCORS(request,response,filterChain);
break;
case NOT_CORS:
this.handleNonCORS(request,response,filterChain);
break;
default :
this.handleInvalidCORS(request,response,filterChain);
break;
}
}
