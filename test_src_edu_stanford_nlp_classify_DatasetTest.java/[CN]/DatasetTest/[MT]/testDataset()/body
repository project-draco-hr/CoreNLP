{
  Dataset<String,String> data=new Dataset<String,String>();
  data.add(new BasicDatum<String,String>(Arrays.asList(new String[]{"fever","cough","congestion"}),"cold"));
  data.add(new BasicDatum<String,String>(Arrays.asList(new String[]{"fever","cough","nausea"}),"flu"));
  data.add(new BasicDatum<String,String>(Arrays.asList(new String[]{"cough","congestion"}),"cold"));
  assertEquals(4,data.numFeatures());
  assertEquals(4,data.numFeatureTypes());
  assertEquals(2,data.numClasses());
  assertEquals(8,data.numFeatureTokens());
  assertEquals(3,data.size());
  data.applyFeatureCountThreshold(2);
  assertEquals(3,data.numFeatures());
  assertEquals(3,data.numFeatureTypes());
  assertEquals(2,data.numClasses());
  assertEquals(7,data.numFeatureTokens());
  assertEquals(3,data.size());
  LinearClassifierFactory<String,String> factory=new LinearClassifierFactory<String,String>();
  LinearClassifier<String,String> classifier=factory.trainClassifier(data);
  Datum<String,String> d=new BasicDatum<String,String>(Arrays.asList(new String[]{"cough","fever"}));
  assertEquals("Classification incorrect","flu",classifier.classOf(d));
  Counter<String> probs=classifier.probabilityOf(d);
  assertEquals("Returned probability incorrect",0.4553,probs.getCount("cold"),0.0001);
  assertEquals("Returned probability incorrect",0.5447,probs.getCount("flu"),0.0001);
  System.out.println();
}
