{
  int i=0;
  for (  Pair<Example,Map<Integer,CompressedFeatureVector>> pair : examples) {
    if (i++ % 10000 == 0) {
      Redwood.log("scoref-train",String.format("On test example %d/%d = %.2f%%",i,examples.size(),100.0 * i / examples.size()));
    }
    Example example=pair.first;
    Map<Integer,CompressedFeatureVector> mentionFeatures=pair.second;
    double p=model.predict(example,mentionFeatures,compressor);
    writer.println(example.docId + " " + example.mentionId1+ ","+ example.mentionId2+ " "+ p+ " "+ example.label);
    Counter<Pair<Integer,Integer>> docScores=scores.get(example.docId);
    if (docScores == null) {
      docScores=new ClassicCounter<>();
      scores.put(example.docId,docScores);
    }
    docScores.incrementCount(new Pair<>(example.mentionId1,example.mentionId2),p);
  }
}
