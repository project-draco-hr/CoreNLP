{
  String trainFile=args[0];
  String testFile=args[1];
  NominalDataReader nR=new NominalDataReader();
  Map<Integer,Index<String>> indices=Generics.newHashMap();
  List<RVFDatum<String,Integer>> train=nR.readData(trainFile,indices);
  List<RVFDatum<String,Integer>> test=nR.readData(testFile,indices);
  System.out.println("Constrained conditional likelihood no prior :");
  for (int j=0; j < 100; j++) {
    NaiveBayesClassifier<String,Integer> classifier=new NaiveBayesClassifierFactory<String,Integer>(0.1,0.01,0.6,LogPrior.LogPriorType.NULL.ordinal(),NaiveBayesClassifierFactory.CL).trainClassifier(train);
    classifier.print();
    float accTrain=classifier.accuracy(train.iterator());
    System.err.println("training accuracy " + accTrain);
    float accTest=classifier.accuracy(test.iterator());
    System.err.println("test accuracy " + accTest);
  }
  System.out.println("Unconstrained conditional likelihood no prior :");
  for (int j=0; j < 100; j++) {
    NaiveBayesClassifier<String,Integer> classifier=new NaiveBayesClassifierFactory<String,Integer>(0.1,0.01,0.6,LogPrior.LogPriorType.NULL.ordinal(),NaiveBayesClassifierFactory.UCL).trainClassifier(train);
    classifier.print();
    float accTrain=classifier.accuracy(train.iterator());
    System.err.println("training accuracy " + accTrain);
    float accTest=classifier.accuracy(test.iterator());
    System.err.println("test accuracy " + accTest);
  }
}
