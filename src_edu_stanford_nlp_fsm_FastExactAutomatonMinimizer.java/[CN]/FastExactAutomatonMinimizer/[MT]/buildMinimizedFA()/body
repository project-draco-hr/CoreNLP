{
  TransducerGraph minimizedFA=new TransducerGraph();
  TransducerGraph unminimizedFA=getUnminimizedFA();
  for (Iterator arcI=unminimizedFA.getArcs().iterator(); arcI.hasNext(); ) {
    TransducerGraph.Arc arc=(TransducerGraph.Arc)arcI.next();
    Object source=projectNode(arc.getSourceNode());
    Object target=projectNode(arc.getTargetNode());
    try {
      if (minimizedFA.canAddArc(source,target,arc.getInput(),arc.getOutput())) {
        minimizedFA.addArc(source,target,arc.getInput(),arc.getOutput());
      }
    }
 catch (    Exception e) {
    }
  }
  minimizedFA.setStartNode(projectNode(unminimizedFA.getStartNode()));
  for (Iterator endIter=unminimizedFA.getEndNodes().iterator(); endIter.hasNext(); ) {
    Object o=endIter.next();
    minimizedFA.setEndNode(projectNode(o));
  }
  return minimizedFA;
}
