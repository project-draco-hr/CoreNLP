{
  int count=0;
  int[][] path=new int[(mask[0].length * mask.length)][2];
  path[count][0]=zero_RC[0];
  path[count][1]=zero_RC[1];
  boolean done=false;
  while (done == false) {
    int r=findStarInCol(mask,path[count][1]);
    if (r >= 0) {
      count=count + 1;
      path[count][0]=r;
      path[count][1]=path[count - 1][1];
    }
 else {
      done=true;
    }
    if (done == false) {
      int c=findPrimeInRow(mask,path[count][0]);
      count=count + 1;
      path[count][0]=path[count - 1][0];
      path[count][1]=c;
    }
  }
  convertPath(mask,path,count);
  clearCovers(rowCover,colCover);
  erasePrimes(mask);
  step=3;
  return step;
}
