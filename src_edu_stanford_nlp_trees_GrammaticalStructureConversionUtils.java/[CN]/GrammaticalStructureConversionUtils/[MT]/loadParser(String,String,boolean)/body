{
  if (parserFile == null || "".equals(parserFile)) {
    parserFile=DEFAULT_PARSER_FILE;
    if (parserOptions == null) {
      parserOptions="-retainTmpSubcategories";
    }
  }
  if (parserOptions == null) {
    parserOptions="";
  }
  if (makeCopulaHead) {
    parserOptions="-makeCopulaHead " + parserOptions;
  }
  parserOptions=parserOptions.trim();
  Function<List<? extends HasWord>,Tree> lp;
  try {
    Class<?>[] classes=new Class<?>[]{String.class,String[].class};
    Method method=Class.forName("edu.stanford.nlp.parser.lexparser.LexicalizedParser").getMethod("loadModel",classes);
    String[] opts=StringUtils.EMPTY_STRING_ARRAY;
    if (!parserOptions.isEmpty()) {
      opts=parserOptions.split(" +");
    }
    lp=(Function<List<? extends HasWord>,Tree>)method.invoke(null,parserFile,opts);
  }
 catch (  Exception cnfe) {
    throw new RuntimeException(cnfe);
  }
  return lp;
}
