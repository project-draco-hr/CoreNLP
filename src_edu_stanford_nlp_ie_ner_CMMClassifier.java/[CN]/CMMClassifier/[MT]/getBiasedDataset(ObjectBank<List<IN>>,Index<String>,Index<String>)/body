{
  makeAnswerArraysAndTagIndex(data);
  Index<String> origFeatIndex=new HashIndex<String>(featureIndex.objectsList());
  int size=0;
  for (  List<IN> doc : data) {
    size+=doc.size();
  }
  System.err.print("Making Dataset ... ");
  System.err.flush();
  Dataset<String,String> train=new Dataset<String,String>(size,featureIndex,classIndex);
  for (  List<IN> doc : data) {
    if (flags.useReverse) {
      Collections.reverse(doc);
    }
    for (int i=0, dsize=doc.size(); i < dsize; i++) {
      Datum<String,String> d=makeDatum(doc,i,featureFactories);
      Collection<String> newFeats=new ArrayList<String>();
      for (      String f : d.asFeatures()) {
        if (!origFeatIndex.contains(f)) {
          newFeats.add(f);
        }
      }
      train.add(d);
    }
    if (flags.useReverse) {
      Collections.reverse(doc);
    }
  }
  System.err.println("done.");
  if (flags.featThreshFile != null) {
    System.err.println("applying thresholds...");
    List<Pair<Pattern,Integer>> thresh=getThresholds(flags.featThreshFile);
    train.applyFeatureCountThreshold(thresh);
  }
 else   if (flags.featureThreshold > 1) {
    System.err.println("Removing Features with counts < " + flags.featureThreshold);
    train.applyFeatureCountThreshold(flags.featureThreshold);
  }
  train.summaryStatistics();
  return train;
}
