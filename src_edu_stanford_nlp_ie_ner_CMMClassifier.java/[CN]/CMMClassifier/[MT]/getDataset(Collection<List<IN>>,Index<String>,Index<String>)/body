{
  makeAnswerArraysAndTagIndex(data);
  int size=0;
  for (  List<IN> doc : data) {
    size+=doc.size();
  }
  log.info("Making Dataset ... ");
  System.err.flush();
  Dataset<String,String> train;
  if (featureIndex != null && classIndex != null) {
    log.info("  Using feature/class Index from existing Dataset...");
    log.info("  (This is used when getting Dataset from adaptation set. We want to make the index consistent.)");
    train=new Dataset<>(size,featureIndex,classIndex);
  }
 else {
    train=new Dataset<>(size);
  }
  for (  List<IN> doc : data) {
    if (flags.useReverse) {
      Collections.reverse(doc);
    }
    for (int i=0, dSize=doc.size(); i < dSize; i++) {
      Datum<String,String> d=makeDatum(doc,i,featureFactories);
      train.add(d);
    }
    if (flags.useReverse) {
      Collections.reverse(doc);
    }
  }
  log.info("done.");
  if (flags.featThreshFile != null) {
    log.info("applying thresholds...");
    List<Pair<Pattern,Integer>> thresh=getThresholds(flags.featThreshFile);
    train.applyFeatureCountThreshold(thresh);
  }
 else   if (flags.featureThreshold > 1) {
    log.info("Removing Features with counts < " + flags.featureThreshold);
    train.applyFeatureCountThreshold(flags.featureThreshold);
  }
  train.summaryStatistics();
  return train;
}
