{
  if (false) {
    return scoresOf(tags,pos)[tags[pos]];
  }
  if (lastWindow == null) {
    lastWindow=new int[leftWindow() + rightWindow() + 1];
    Arrays.fill(lastWindow,-1);
  }
  boolean match=(pos == lastPos);
  for (int i=pos - leftWindow(); i <= pos + rightWindow(); i++) {
    if (i == pos || i < 0) {
      continue;
    }
    match&=tags[i] == lastWindow[i - pos + leftWindow()];
  }
  if (!match) {
    scoreCache=scoresOf(tags,pos);
    for (int i=pos - leftWindow(); i <= pos + rightWindow(); i++) {
      if (i < 0) {
        continue;
      }
      lastWindow[i - pos + leftWindow()]=tags[i];
    }
    lastPos=pos;
  }
  return scoreCache[tags[pos]];
}
