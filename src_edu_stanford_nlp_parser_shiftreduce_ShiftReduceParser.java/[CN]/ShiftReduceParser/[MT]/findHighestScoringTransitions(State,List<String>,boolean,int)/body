{
  float[] scores=new float[transitionIndex.size()];
  for (  String feature : features) {
    Weight weight=featureWeights.get(feature);
    if (weight == null) {
      continue;
    }
    weight.score(scores);
  }
  PriorityQueue<ScoredObject<Integer>> queue=new PriorityQueue<ScoredObject<Integer>>(numTransitions + 1,ScoredComparator.ASCENDING_COMPARATOR);
  for (int i=0; i < scores.length; ++i) {
    if (!requireLegal || transitionIndex.get(i).isLegal(state)) {
      queue.add(new ScoredObject<Integer>(i,scores[i]));
      if (queue.size() > numTransitions) {
        queue.poll();
      }
    }
  }
  return queue;
}
