{
  double[] orthant=new double[x.length];
  for (int i=0; i < orthant.length; i++) {
    orthant[i]=(x[i] == 0.0) ? -grad[i] : x[i];
  }
  double step, c1;
  if (its <= 2) {
    step=0.1;
    c1=0.1;
  }
 else {
    step=1.0;
    c1=0.1;
  }
  double c=0.01;
  double[] newPoint=new double[3];
  while (true) {
    plusAndConstMult(x,dir,step,newX);
    projectOWL(newX,orthant,func);
    double value=func.valueAt(newX);
    double norm=l1NormOWL(newX,func);
    value+=norm * lambdaOWL;
    newPoint[f]=value;
    double dgtest=0.0;
    for (int i=0; i < x.length; i++) {
      dgtest+=(newX[i] - x[i]) * grad[i];
    }
    if (newPoint[f] <= lastValue + c * dgtest)     break;
 else {
      if (newPoint[f] < lastValue) {
        say("!");
      }
 else {
        say(".");
      }
    }
    step=c1 * step;
  }
  newPoint[a]=step;
  fevals+=1;
  if (fevals > maxFevals) {
    throw new MaxEvaluationsExceeded(" Exceeded during linesearch() Function ");
  }
  return newPoint;
}
