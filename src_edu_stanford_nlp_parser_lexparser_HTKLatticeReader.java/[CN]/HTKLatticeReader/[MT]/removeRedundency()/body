{
  boolean changed=true;
  while (changed) {
    changed=false;
    for (int i=0; i < wordsAtTime.length; i++) {
      if (wordsAtTime[i].size() < 2) {
        continue;
      }
      INNER:       for (int j=0; j < wordsAtTime[i].size() - 1; j++) {
        LatticeWord w1=wordsAtTime[i].get(j);
        for (int k=j + 1; k < wordsAtTime[i].size(); k++) {
          LatticeWord w2=wordsAtTime[i].get(k);
          if (w1.word.equalsIgnoreCase(w2.word)) {
            if (removeRedundentPair(w1,w2)) {
              changed=true;
              continue INNER;
            }
          }
        }
      }
    }
  }
}
