{
  Set<NFLGame> nflGames=new HashSet<NFLGame>();
  for (  EntityMention entityMention : entityMentions) {
    if (entityMention.getType().endsWith("Game")) {
      NFLGame nflGame=new NFLGame(entityMention);
      if (!nflGames.contains(nflGame)) {
        logger.fine("Made NFLGame from " + entityMention);
        nflGames.add(nflGame);
      }
    }
  }
  for (  RelationMention relation : RelationMention.filterUnrelatedRelations(relationMentions)) {
    logger.fine("Relation: " + relation);
    String relType=relation.getType();
    if (relType.equals("teamInGame") || relType.equals("gameWinner") || relType.equals("gameLoser")) {
      EntityMention gameArg=(EntityMention)relation.getArg(0);
      NFLGame game=new NFLGame(gameArg);
      NFLGame nflGame=null;
      for (      NFLGame candidateGame : nflGames) {
        if (candidateGame.equals(game)) {
          nflGame=candidateGame;
        }
      }
      if (nflGame == null) {
        nflGame=game;
      }
      EntityMention teamArg=(EntityMention)relation.getArg(1);
      logger.fine("Adding team: " + teamArg);
      nflGame.addTeam(teamArg);
    }
  }
  for (  RelationMention relation : relationMentions) {
    if (relation.getType().equals("teamScoringAll")) {
      logger.fine("Found teamScoringAll: " + relation);
      EntityMention teamArg=(EntityMention)relation.getArg(1);
      NFLGame nflGame=findNFLGame(nflGames,teamArg);
      logger.fine("Corresponding NFLGame for teamScoringAll: " + nflGame);
      if (nflGame != null) {
        EntityMention scoreArg=(EntityMention)relation.getArg(0);
        logger.fine("Setting score: " + scoreArg);
        nflGame.setTeamScore(teamArg,scoreArg);
      }
    }
  }
  for (  NFLGame game : nflGames) {
    List<RelationMention> missingRelations=game.generateMissingRelations(relationMentionFactory);
    logger.info("Made " + missingRelations.size() + " new relations.");
    for (    RelationMention relation : missingRelations) {
      logger.info("New relation: " + relation);
    }
    relationMentions.addAll(missingRelations);
  }
}
