{
  List<Tree> children=t.getChildrenAsList();
  for (  Tree child : children) {
    if (child.isPreTerminal()) {
      String word=child.firstChild().value();
      String curTag=child.value();
      String newTag=pennToMedline(curTag,word);
      if (newTag != null) {
      }
 else {
        if (curTag.startsWith("IN")) {
          String parentTag=t.value();
          if (parentTag.equals("ADJP") || parentTag.equals("WHPP") || parentTag.equals("PP")|| parentTag.equals("NP")|| parentTag.equals("ADVP"))           newTag="II";
 else           if (parentTag.equals("S"))           newTag="CS";
 else           if (parentTag.equals("QP")) {
            if (word.equals("than"))             newTag="CSN";
 else             newTag="II";
          }
 else           if (parentTag.equals("CONJP"))           newTag="CS";
 else           if (parentTag.equals("SBAR")) {
            if (word.equals("that"))             newTag="CST";
 else             newTag="CS";
          }
 else           if (parentTag.equals("WHNP")) {
            if (word.equalsIgnoreCase("that") || word.equalsIgnoreCase("which"))             newTag="CST";
          }
 else           if (parentTag.equals("VP")) {
            newTag="II";
          }
 else           if (parentTag.equals("WHADVP")) {
            newTag="PNR";
          }
 else {
            newTag="II";
          }
        }
        if (curTag.startsWith("WRB")) {
          String parentTag=t.value();
          if (parentTag.equals("WHADVP"))           newTag="PNR";
 else           if (parentTag.equals("WHNP"))           newTag="PNR";
        }
      }
      if (newTag == null) {
        System.err.println("Error converting " + curTag + " in: ");
        t.pennPrint();
      }
 else {
        child.setValue(newTag);
      }
    }
  }
  return t;
}
