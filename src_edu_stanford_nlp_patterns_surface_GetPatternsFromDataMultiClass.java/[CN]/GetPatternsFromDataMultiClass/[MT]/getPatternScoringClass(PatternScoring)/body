{
  if (patternScoring.equals(PatternScoring.F1)) {
    return ScorePatternsF1.class;
  }
 else   if (patternScoring.equals(PatternScoring.PosNegUnlabOdds) || patternScoring.equals(PatternScoring.PosNegOdds) || patternScoring.equals(PatternScoring.RatioAll)|| patternScoring.equals(PatternScoring.PhEvalInPat)|| patternScoring.equals(PatternScoring.PhEvalInPatLogP)|| patternScoring.equals(PatternScoring.LOGREG)|| patternScoring.equals(PatternScoring.LOGREGlogP)|| patternScoring.equals(PatternScoring.SqrtAllRatio)) {
    return ScorePatternsRatioModifiedFreq.class;
  }
 else   if (patternScoring.equals(PatternScoring.RlogF) || patternScoring.equals(PatternScoring.RlogFPosNeg) || patternScoring.equals(PatternScoring.RlogFUnlabNeg)|| patternScoring.equals(PatternScoring.RlogFNeg)|| patternScoring.equals(PatternScoring.YanGarber02)|| patternScoring.equals(PatternScoring.LinICML03)) {
    return ScorePatternsFreqBased.class;
  }
 else {
    return null;
  }
}
