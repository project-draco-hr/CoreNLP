{
  StringBuilder sb=new StringBuilder();
  String tCl=StringUtils.getShortClassName(t);
  String tfCl=StringUtils.getShortClassName(t.treeFactory());
  String lCl=StringUtils.getShortClassName(t.label());
  String lfCl=StringUtils.getShortClassName(t.label().labelFactory());
  Set<String> otherClasses=new HashSet<String>();
  for (  Tree st : t) {
    String stCl=StringUtils.getShortClassName(st);
    String stfCl=StringUtils.getShortClassName(st.treeFactory());
    String slCl=StringUtils.getShortClassName(st.label());
    String slfCl=StringUtils.getShortClassName(st.label().labelFactory());
    if (!tCl.equals(stCl)) {
      otherClasses.add(stCl);
    }
    if (!tfCl.equals(stfCl)) {
      otherClasses.add(stfCl);
    }
    if (!lCl.equals(slCl)) {
      otherClasses.add(slCl);
    }
    if (!lfCl.equals(slfCl)) {
      otherClasses.add(slfCl);
    }
  }
  sb.append("Tree with root of class ").append(tCl).append(" and factory ").append(tfCl);
  sb.append(" with label class ").append(lCl).append(" and factory ").append(lfCl);
  if (!otherClasses.isEmpty()) {
    sb.append(" with the following classes also found within the tree: ").append(otherClasses);
  }
  return sb.toString();
}
