{
  String[] annoPatternStrings=conf.trim().split("\\s*,\\s*");
  for (  String annoPatternString : annoPatternStrings) {
    String[] annoPattern=annoPatternString.split("\\s*=\\s*",2);
    if (annoPattern.length != 2) {
      throw new IllegalArgumentException("Invalid annotation to tag pattern: " + annoPatternString);
    }
    String annoKeyString=annoPattern[0];
    String pattern=annoPattern[1];
    Class annoKey=EnvLookup.lookupAnnotationKey(null,annoKeyString);
    if (annoKey == null) {
      throw new IllegalArgumentException("Cannot resolve annotation key " + annoKeyString);
    }
    Matcher m=TAG_ATTR_PATTERN.matcher(pattern);
    if (m.matches()) {
      Pattern tagPattern=toCaseInsensitivePattern(m.group(1));
      Pattern attrPattern=toCaseInsensitivePattern(m.group(2));
      annotationPatterns.add(annoKey,Pair.makePair(tagPattern,attrPattern));
    }
 else {
      if (attrOnly) {
        throw new IllegalArgumentException("Invalid tag pattern: " + pattern + " for annotation key "+ annoKeyString);
      }
 else {
        Pattern tagPattern=toCaseInsensitivePattern(pattern);
        annotationPatterns.add(annoKey,Pair.makePair(tagPattern,(Pattern)null));
      }
    }
  }
}
