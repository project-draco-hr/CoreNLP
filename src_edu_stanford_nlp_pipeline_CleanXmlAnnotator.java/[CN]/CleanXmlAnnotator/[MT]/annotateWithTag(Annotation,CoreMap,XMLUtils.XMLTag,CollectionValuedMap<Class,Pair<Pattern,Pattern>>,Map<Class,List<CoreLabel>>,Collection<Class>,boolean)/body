{
  Set<Class> foundAnnotations=new HashSet<Class>();
  if (annotationPatterns == null) {
    return foundAnnotations;
  }
  if (toAnnotate == null) {
    toAnnotate=annotationPatterns.keySet();
  }
  for (  Class key : toAnnotate) {
    for (    Pair<Pattern,Pattern> pattern : annotationPatterns.get(key)) {
      Pattern tagPattern=pattern.first;
      Pattern attrPattern=pattern.second;
      if (tagPattern.matcher(tag.name).matches()) {
        boolean matched=false;
        if (attrPattern != null) {
          if (tag.attributes != null) {
            for (            Map.Entry<String,String> entry : tag.attributes.entrySet()) {
              if (attrPattern.matcher(entry.getKey()).matches()) {
                cm.set(key,entry.getValue());
                foundAnnotations.add(key);
                matched=true;
                break;
              }
            }
          }
          if (clearAnnotationFromAttrOnTagEnd) {
            if (tag.isEndTag) {
              cm.remove(key);
            }
          }
        }
 else         if (savedTokens != null) {
          if (tag.isEndTag && !tag.isSingleTag) {
            List<CoreLabel> saved=savedTokens.remove(key);
            if (saved != null && saved.size() > 0) {
              cm.set(key,tokensToString(annotation,saved));
              foundAnnotations.add(key);
              matched=true;
            }
          }
 else {
            savedTokens.put(key,new ArrayList<CoreLabel>());
          }
        }
        if (matched)         break;
      }
    }
  }
  return foundAnnotations;
}
