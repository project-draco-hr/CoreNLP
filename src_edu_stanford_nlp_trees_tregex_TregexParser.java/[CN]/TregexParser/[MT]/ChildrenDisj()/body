{
  TregexPattern child;
  List<TregexPattern> children=new ArrayList<TregexPattern>();
  Set<String> originalKnownVariables=Generics.newHashSet(knownVariables);
  Set<String> allKnownVariables=Generics.newHashSet(knownVariables);
  child=ChildrenConj();
  children.add(child);
  allKnownVariables.addAll(knownVariables);
  label_2:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 20:
      ;
    break;
default :
  jj_la1[11]=jj_gen;
break label_2;
}
knownVariables=Generics.newHashSet(originalKnownVariables);
jj_consume_token(20);
child=ChildrenConj();
children.add(child);
allKnownVariables.addAll(knownVariables);
}
knownVariables=allKnownVariables;
if (children.size() == 1) {
if (true) return child;
}
 else {
if (true) return new CoordinationPattern(children,false);
}
throw new Error("Missing return statement in function");
}
