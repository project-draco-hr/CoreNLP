{
  boolean ner=PropertiesUtils.getBool(options,"ner",false);
  final String encoding=new SpanishTreebankLanguagePack().getEncoding();
  final SpanishXMLTreeReaderFactory trf=new SpanishXMLTreeReaderFactory(true,true,ner,false);
  ExecutorService pool=Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());
  List<Future<Pair<TwoDimensionalCounter<String,String>,List<Tree>>>> readFutures=new ArrayList<Future<Pair<TwoDimensionalCounter<String,String>,List<Tree>>>>();
  for (  final File file : inputFiles)   readFutures.add(pool.submit(new XMLTreeProcessor(trf,file,encoding)));
  for (  Future<Pair<TwoDimensionalCounter<String,String>,List<Tree>>> future : readFutures) {
    Pair<TwoDimensionalCounter<String,String>,List<Tree>> result=future.get();
    Counters.addInPlace(unigramTagger,result.first());
    trees.addAll(result.second());
  }
  pool.shutdown();
  return trees;
}
