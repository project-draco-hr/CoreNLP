{
  BufferedReader input=new BufferedReader(new FileReader(filename));
  String line;
  Identifier curPackage=null;
  Identifier curClass=null;
  while ((line=input.readLine()) != null) {
    Matcher matcher=pkgLine.matcher(line);
    String name;
    if (matcher.matches()) {
      name=matcher.group(1);
      curPackage=canonicalIdentifier(name);
      curClass=null;
    }
 else {
      matcher=classLine.matcher(line);
      if (matcher.matches()) {
        name=prependPackage(curPackage.name,matcher.group(1));
        curClass=canonicalIdentifier(name);
        curClass.isClass=true;
      }
 else {
        matcher=memberLine.matcher(line);
        if (matcher.matches()) {
          name=curClass.name + "." + matcher.group(1);
        }
 else {
          matcher=inDepLine.matcher(line);
          if (matcher.matches()) {
            name=matcher.group(1);
            Identifier inDep=canonicalIdentifier(name);
            if (curClass != null) {
              curClass.ingoingDependencies.add(inDep);
            }
          }
 else {
            matcher=outDepLine.matcher(line);
            if (matcher.matches()) {
              name=matcher.group(1);
              Identifier outDep=canonicalIdentifier(name);
              if (curClass != null) {
                curClass.outgoingDependencies.add(outDep);
              }
            }
 else {
              matcher=bothDepLine.matcher(line);
              if (matcher.matches()) {
                name=matcher.group(1);
                Identifier dep=canonicalIdentifier(name);
                if (curClass != null) {
                  curClass.ingoingDependencies.add(dep);
                  curClass.outgoingDependencies.add(dep);
                }
              }
 else {
                System.err.println("Found unmatching line: " + line);
              }
            }
          }
        }
      }
    }
  }
  for (  String className : identifiers.keySet()) {
    Identifier classId=identifiers.get(className);
    if (!classId.isClass) {
      continue;
    }
    int baseIndex=className.indexOf("$");
    if (baseIndex < 0) {
      continue;
    }
    String baseName=className.substring(0,baseIndex);
    Identifier baseId=identifiers.get(baseName);
    if (baseId == null) {
      continue;
    }
    baseId.ingoingDependencies.add(classId);
    baseId.outgoingDependencies.add(classId);
    classId.ingoingDependencies.add(baseId);
    classId.outgoingDependencies.add(baseId);
  }
}
