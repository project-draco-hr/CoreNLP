{
  Pattern[] startingPatterns=new Pattern[startingClasses.size()];
  boolean[] matched=new boolean[startingClasses.size()];
  for (int i=0; i < startingClasses.size(); ++i) {
    String startingClass=startingClasses.get(i);
    startingClass=startingClass.replaceAll("\\.","\\\\\\.");
    startingClass=startingClass.replaceAll("\\$","\\\\\\$");
    startingClass=startingClass.replaceAll("\\*",".*");
    startingPatterns[i]=Pattern.compile(startingClass);
    matched[i]=false;
  }
  for (  Identifier id : identifiers.values()) {
    if (!id.isClass)     continue;
    for (int i=0; i < startingClasses.size(); ++i) {
      if (startingPatterns[i].matcher(id.name).matches()) {
        depQueue.addLast(id);
        closure.add(id);
        matched[i]=true;
        if (VERBOSE) {
          log.info("Starting class: " + id.name);
        }
        break;
      }
    }
  }
  for (int i=0; i < startingClasses.size(); ++i) {
    if (!matched[i]) {
      log.info("Warning: pattern " + startingClasses.get(i) + " matched nothing");
    }
  }
}
