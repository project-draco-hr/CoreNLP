{
  tree=tree.prune(emptyFilter,tf).spliceOut(aOverAFilter,tf);
  for (  Tree t : tree) {
    if (t.isPreTerminal()) {
      String posStr=normalizePreterminal(t);
      t.setValue(posStr);
      if (t.label() instanceof HasTag)       ((HasTag)t.label()).setTag(posStr);
    }
 else     if (t.isLeaf()) {
      if (t.value().contains(MorphoFeatureSpecification.MORPHO_MARK)) {
        String[] toks=t.value().split(MorphoFeatureSpecification.MORPHO_MARK);
        if (toks.length != 2)         System.err.printf("%s: Word contains malformed morph annotation: %s%n",this.getClass().getName(),t.value());
 else         if (t.label() instanceof CoreLabel) {
          ((CoreLabel)t.label()).setValue(toks[0].trim().intern());
          ((CoreLabel)t.label()).setWord(toks[0].trim().intern());
          ((CoreLabel)t.label()).setOriginalText(toks[1].trim().intern());
        }
 else {
          System.err.printf("%s: Cannot store morph analysis in non-CoreLabel: %s%n",this.getClass().getName(),t.label().getClass().getName());
        }
      }
    }
  }
  while (tree != null && (tree.value() == null || tree.value().equals("")) && tree.numChildren() <= 1)   tree=tree.firstChild();
  if (tree != null && !tree.value().equals(rootLabel))   tree=tf.newTreeNode(rootLabel,Collections.singletonList(tree));
  return tree;
}
