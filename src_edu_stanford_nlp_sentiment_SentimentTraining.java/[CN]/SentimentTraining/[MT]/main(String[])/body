{
  RNNOptions op=new RNNOptions();
  boolean runGradientCheck=false;
  boolean runTraining=false;
  String modelPath=null;
  for (int argIndex=0; argIndex < args.length; ) {
    if (args[argIndex].equalsIgnoreCase("-train")) {
      runTraining=true;
      argIndex++;
    }
 else     if (args[argIndex].equalsIgnoreCase("-gradientcheck")) {
      runGradientCheck=true;
      argIndex++;
    }
 else {
      int newArgIndex=op.setOption(args,argIndex);
      if (newArgIndex == argIndex) {
        throw new IllegalArgumentException("Unknown argument " + args[argIndex]);
      }
      argIndex=newArgIndex;
    }
  }
  List<Tree> trainingTrees=Generics.newArrayList();
  MemoryTreebank treebank=new MemoryTreebank();
  treebank.loadPath("sentimentTreesDebug.txt",null);
  for (  Tree tree : treebank) {
    attachGoldLabels(tree);
    trainingTrees.add(tree);
  }
  List<Tree> devTrees=null;
  List<Tree> testTrees=null;
  SentimentModel model=new SentimentModel(op,trainingTrees);
  if (runGradientCheck) {
    runGradientCheck(model,trainingTrees);
  }
  if (runTraining) {
    train(model,modelPath,trainingTrees,devTrees);
  }
}
