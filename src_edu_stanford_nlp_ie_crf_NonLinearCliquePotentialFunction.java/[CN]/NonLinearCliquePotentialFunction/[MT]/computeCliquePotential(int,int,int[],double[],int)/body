{
  double output=0.0;
  if (cliqueSize > 1) {
    for (    int cliqueFeature : cliqueFeatures) {
      output+=linearWeights[cliqueFeature][labelIndex];
    }
  }
 else {
    double[] hiddenLayer=hiddenLayerOutput(inputLayerWeights,cliqueFeatures,flags,featureVal);
    int outputLayerSize=inputLayerWeights.length / outputLayerWeights[0].length;
    if (flags.useOutputLayer) {
      double[] outputWs;
      if (flags.tieOutputLayer) {
        outputWs=outputLayerWeights[0];
      }
 else {
        outputWs=outputLayerWeights[labelIndex];
      }
      if (flags.softmaxOutputLayer) {
        outputWs=ArrayMath.softmax(outputWs);
      }
      for (int i=0; i < inputLayerWeights.length; i++) {
        if (flags.sparseOutputLayer || flags.tieOutputLayer) {
          if (i % outputLayerSize == labelIndex) {
            output+=outputWs[i / outputLayerSize] * hiddenLayer[i];
          }
        }
 else {
          output+=outputWs[i] * hiddenLayer[i];
        }
      }
    }
 else {
      output=hiddenLayer[labelIndex];
    }
  }
  return output;
}
