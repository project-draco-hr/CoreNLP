{
  int lineNum=0;
  try {
    LineNumberReader reader=new LineNumberReader(new FileReader(configFile));
    Properties paramsForDataset=null;
    while (reader.ready()) {
      String line=reader.readLine();
      lineNum=reader.getLineNumber();
      Matcher m=skipLine.matcher(line);
      if (m.lookingAt())       continue;
      m=setDelim.matcher(line);
      if (m.matches() && paramsForDataset != null) {
        datasetList.add(paramsForDataset);
        paramsForDataset=null;
        continue;
      }
 else       if (paramsForDataset == null) {
        paramsForDataset=new Properties();
      }
      boolean matched=false;
      for (      String param : patternsMap.keySet()) {
        Pair<Pattern,Pattern> paramTemplate=patternsMap.get(param);
        Matcher paramToken=paramTemplate.first.matcher(line);
        if (paramToken.lookingAt()) {
          matched=true;
          String[] tokens=line.split(DELIM);
          if (tokens.length != 2) {
            System.err.printf("%s: Skipping malformed parameter in %s (line %d)\n",this.getClass().getName(),configFile,reader.getLineNumber());
            break;
          }
          String actualParam=tokens[0].trim();
          String paramValue=tokens[1].trim();
          if (paramTemplate.second != null) {
            paramToken=paramTemplate.second.matcher(paramValue);
            if (paramToken.matches()) {
              paramsForDataset.setProperty(actualParam,paramValue);
            }
 else {
              System.err.printf("%s: Skipping illegal parameter value in %s (line %d)\n",this.getClass().getName(),configFile,reader.getLineNumber());
              break;
            }
          }
 else {
            paramsForDataset.setProperty(actualParam,paramValue);
          }
        }
      }
      if (!matched) {
        System.err.printf("%s: Unknown token in %s (line %d)\n",this.getClass().getName(),configFile,reader.getLineNumber());
        System.exit(-1);
      }
    }
    if (paramsForDataset != null)     datasetList.add(paramsForDataset);
    reader.close();
  }
 catch (  FileNotFoundException e) {
    System.err.printf("%s: Cannot open file %s\n",this.getClass().getName(),configFile);
  }
catch (  IOException e) {
    System.err.printf("%s: Error reading %s (line %d)\n",this.getClass().getName(),lineNum);
  }
}
