{
  svm_problem problem=new svm_problem();
  int numTrain=examples.size();
  problem.l=numTrain;
  problem.x=new svm_node[numTrain][];
  problem.y=new double[numTrain];
  for (int i=0, num=examples.size(); i < num; i++) {
    Datum<L,F> example=examples.getDatum(i);
    Collection<F> features=example.asFeatures();
    ArrayList<svm_node> nodes=new ArrayList<svm_node>();
    for (    F feature : features) {
      Pair<Integer,Double> indexValue=getIndexAndValue(featureIndex,feature,example);
      nodes.add(newSVMnode(indexValue.first(),indexValue.second()));
    }
    Collections.sort(nodes,new NodeComparator());
    problem.x[i]=new svm_node[nodes.size()];
    nodes.toArray(problem.x[i]);
    problem.y[i]=labelIndex.indexOf(example.label());
  }
  return problem;
}
