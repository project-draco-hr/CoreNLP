{
  SemanticGraph tree=new SemanticGraph(sentence.get(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class));
  List<CoreLabel> tokens=sentence.get(CoreAnnotations.TokensAnnotation.class);
  if (tokens.size() > 63) {
    System.err.println("Very long sentence (>63 tokens); " + this.getClass().getSimpleName() + " is not attempting to extract relations.");
    sentence.set(NaturalLogicAnnotations.RelationTriplesAnnotation.class,Collections.EMPTY_LIST);
    sentence.set(NaturalLogicAnnotations.EntailedSentencesAnnotation.class,Collections.EMPTY_LIST);
  }
 else {
    Collection<SentenceFragment> fragments=new ArrayList<>();
    Collection<RelationTriple> extractions=new ArrayList<>();
    for (    SearchResult result : search(tokens,tree)) {
      SentenceFragment fragment=new SentenceFragment(result.tree,false);
      fragments.add(fragment);
      Optional<RelationTriple> extraction=RelationTriple.segment(result.tree);
      if (extraction.isPresent()) {
        extractions.add(extraction.get());
      }
    }
    sentence.set(NaturalLogicAnnotations.EntailedSentencesAnnotation.class,fragments);
    sentence.set(NaturalLogicAnnotations.RelationTriplesAnnotation.class,extractions);
  }
}
