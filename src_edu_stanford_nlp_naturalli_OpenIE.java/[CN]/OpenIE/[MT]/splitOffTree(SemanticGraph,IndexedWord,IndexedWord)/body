{
  SemanticGraph subtree=new SemanticGraph();
  subtree.addRoot(subtreeRoot);
  Stack<IndexedWord> fringe=new Stack<>();
  for (  IndexedWord child : tree.getChildren(subtreeRoot)) {
    fringe.add(child);
  }
  while (!fringe.isEmpty()) {
    IndexedWord node=fringe.pop();
    subtree.addVertex(node);
    for (    SemanticGraphEdge incomingEdge : tree.incomingEdgeIterable(node)) {
      subtree.addEdge(incomingEdge.getGovernor(),incomingEdge.getDependent(),incomingEdge.getRelation(),incomingEdge.getWeight(),incomingEdge.isExtra());
    }
    for (    IndexedWord child : tree.getChildren(node)) {
      fringe.add(child);
    }
  }
  for (  IndexedWord vertex : subtree.vertexSet()) {
    tree.removeVertex(vertex);
  }
  tree.removeVertex(subtreeRoot);
  if (subjectOrNull != null) {
    subtree.addVertex(subjectOrNull);
    for (    SemanticGraphEdge incomingEdge : tree.incomingEdgeIterable(subjectOrNull)) {
      subtree.addEdge(subtreeRoot,subjectOrNull,incomingEdge.getRelation(),incomingEdge.getWeight(),incomingEdge.isExtra());
    }
  }
  return subtree;
}
