{
  if (tree.size() == 0) {
    if (tree.getRoots().size() == 0) {
      System.err.println("WARNING: empty tree passed to " + this.getClass().getSimpleName() + ".relationInClause()");
    }
    return Collections.emptyList();
  }
  List<IndexedWord> vertices=tree.vertexListSorted();
  byte[] indexToMaskIndex=new byte[vertices.get(vertices.size() - 1).index()];
  byte i=0;
  for (  IndexedWord vertex : vertices) {
    indexToMaskIndex[vertex.index() - 1]=i;
    i+=1;
  }
  List<SearchResult> results=search(null,tree,indexToMaskIndex);
  List<RelationTriple> triples=new ArrayList<>();
  Optional<RelationTriple> rootExtraction=RelationTriple.segment(tree,Optional.empty());
  if (rootExtraction.isPresent()) {
    triples.add(rootExtraction.get());
  }
  for (  SearchResult result : results) {
    SentenceFragment fragment=new SentenceFragment(result.tree,false);
    Optional<RelationTriple> extraction=RelationTriple.segment(result.tree,Optional.of(result.confidence));
    if (extraction.isPresent()) {
      triples.add(extraction.get());
    }
  }
  return triples;
}
