{
  List<CoreLabel> tokens=sentence.get(CoreAnnotations.TokensAnnotation.class);
  if (tokens.size() < 2) {
    sentence.set(NaturalLogicAnnotations.RelationTriplesAnnotation.class,Collections.EMPTY_LIST);
    sentence.set(NaturalLogicAnnotations.EntailedSentencesAnnotation.class,Collections.EMPTY_SET);
  }
 else {
    SemanticGraph parse=sentence.get(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class);
    if (parse == null) {
      parse=sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);
    }
    if (parse == null) {
      throw new IllegalStateException("Cannot run OpenIE without a parse tree!");
    }
    Util.cleanTree(parse);
    SemanticGraph canonicalizedParse=parse;
    if (resolveCoref && !canonicalMentionMap.isEmpty()) {
      canonicalizedParse=canonicalizeCoref(parse,canonicalMentionMap);
    }
    List<SentenceFragment> clauses=clausesInSentence(canonicalizedParse,true);
    Set<SentenceFragment> fragments=entailmentsFromClauses(clauses);
    List<RelationTriple> extractions=segmenter.extract(parse,tokens);
    extractions.addAll(relationsInFragments(fragments,sentence));
    sentence.set(NaturalLogicAnnotations.EntailedSentencesAnnotation.class,fragments);
    sentence.set(NaturalLogicAnnotations.RelationTriplesAnnotation.class,new ArrayList<>(new HashSet<>(extractions)));
  }
}
