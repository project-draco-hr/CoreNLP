{
switch (param) {
case "contingency":
{
      StringBuilder sb=new StringBuilder();
      for (      K obj : ErasureUtils.sortedIfPossible(topLevelKeySet())) {
        sb.append(obj);
        sb.append(" = ");
        GeneralizedCounter<K> gc=conditionalizeOnce(obj);
        sb.append(gc);
        sb.append("\n");
      }
      return sb.toString();
    }
case "sorted":
{
    StringBuilder sb=new StringBuilder();
    sb.append("{\n");
    for (    K obj : ErasureUtils.sortedIfPossible(topLevelKeySet())) {
      sb.append(obj);
      sb.append(" = ");
      GeneralizedCounter<K> gc=conditionalizeOnce(obj);
      sb.append(gc);
      sb.append("\n");
    }
    sb.append("}\n");
    return sb.toString();
  }
default :
return toString();
}
}
