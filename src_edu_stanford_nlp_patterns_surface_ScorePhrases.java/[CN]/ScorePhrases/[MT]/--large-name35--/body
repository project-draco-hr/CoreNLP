{
  boolean computeDataFreq=false;
  if (Data.processedDataFreq == null || Data.rawFreq == null) {
    Data.rawFreq=new ClassicCounter<String>();
    computeDataFreq=true;
    Data.processedDataFreq=new ClassicCounter<String>();
  }
  Counter<String> words=learnNewPhrasesPrivate(label,patternsForEachToken,patternsLearnedThisIter,allSelectedPatterns,constVars.getLabelDictionary().get(label),tokensMatchedPatterns,scoreForAllWordsThisIteration,terms,wordsPatExtracted,patternsAndWords4Label,identifier,ignoreWords,computeDataFreq);
  constVars.addLabelDictionary(label,words.keySet());
  return words;
}
