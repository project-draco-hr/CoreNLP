{
  boolean entityCorrect=true;
  String previousGold=background;
  String previousGuess=background;
  String previousGoldEntity="";
  String previousGuessEntity="";
  char previousGoldPrefix=' ';
  char previousGuessPrefix=' ';
  for (  CoreMap word : doc) {
    String gold=word.get(CoreAnnotations.GoldAnswerAnnotation.class);
    String guess=word.get(CoreAnnotations.AnswerAnnotation.class);
    String goldEntity;
    String guessEntity;
    char goldPrefix;
    char guessPrefix;
    if (gold == null || gold.isEmpty()) {
      System.err.println("Missing gold entity");
      return false;
    }
 else     if (gold.length() > 2 && gold.charAt(1) == '-') {
      goldEntity=gold.substring(2,gold.length());
      goldPrefix=gold.charAt(0);
    }
 else {
      goldEntity=gold;
      goldPrefix=' ';
    }
    if (guess == null || guess.isEmpty()) {
      System.err.println("Missing guess entity");
      return false;
    }
 else     if (guess.length() > 2 && guess.charAt(1) == '-') {
      guessEntity=guess.substring(2,guess.length());
      guessPrefix=guess.charAt(0);
    }
 else {
      guessEntity=guess;
      guessPrefix=' ';
    }
    boolean goldIsStartAdjacentSame=goldEntity.equals(previousGoldEntity) && (goldPrefix == 'B' || goldPrefix == 'S' || previousGoldPrefix == 'E' || previousGoldPrefix == 'S');
    boolean newGold=!gold.equals(background) && (!goldEntity.equals(previousGoldEntity) || goldIsStartAdjacentSame);
    boolean guessIsStartAdjacentSame=guessEntity.equals(previousGuessEntity) && (guessPrefix == 'B' || guessPrefix == 'S' || previousGuessPrefix == 'E' || previousGuessPrefix == 'S');
    boolean newGuess=!guess.equals(background) && (!guessEntity.equals(previousGuessEntity) || guessIsStartAdjacentSame);
    ;
    boolean goldEnded=!previousGold.equals(background) && (!goldEntity.equals(previousGoldEntity) || goldIsStartAdjacentSame);
    boolean guessEnded=!previousGuess.equals(background) && (!guessEntity.equals(previousGuessEntity) || guessIsStartAdjacentSame);
    if (goldEnded && !guessEnded) {
      entityFN.incrementCount(previousGoldEntity);
      entityCorrect=gold.equals(background) && guess.equals(background);
    }
    if (goldEnded && guessEnded) {
      if (entityCorrect) {
        entityTP.incrementCount(previousGoldEntity);
      }
 else {
        entityFN.incrementCount(previousGoldEntity);
        entityFP.incrementCount(previousGuessEntity);
      }
      entityCorrect=goldEntity.equals(guessEntity);
    }
    if (!goldEnded && guessEnded) {
      entityCorrect=false;
      entityFP.incrementCount(previousGuessEntity);
    }
    if (newGold && !newGuess) {
      entityCorrect=false;
    }
    if (newGold && newGuess) {
      entityCorrect=guessEntity.equals(goldEntity);
    }
    if (!newGold && newGuess) {
      entityCorrect=false;
    }
    previousGold=gold;
    previousGuess=guess;
    previousGoldEntity=goldEntity;
    previousGuessEntity=guessEntity;
  }
  if (!previousGold.equals(background)) {
    if (entityCorrect) {
      entityTP.incrementCount(previousGoldEntity);
    }
 else {
      entityFN.incrementCount(previousGoldEntity);
    }
  }
  if (!previousGuess.equals(background)) {
    if (!entityCorrect) {
      entityFP.incrementCount(previousGuessEntity);
    }
  }
  return true;
}
