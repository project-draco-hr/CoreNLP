{
  String chstr;
  if (ch == 10) {
    chstr="nl";
  }
 else   if (ch == 13) {
    chstr="cr";
  }
 else {
    char[] chArr=Character.toChars(ch);
    chstr=new String(chArr);
  }
  int ty=Character.getType(ch);
  String tyStr="";
switch (ty) {
case 1:
    tyStr=" uppercase";
  break;
case 2:
tyStr=" lowercase";
break;
case 5:
tyStr=" otherLetter";
break;
case 12:
tyStr=" spaceSeparator";
break;
case 20:
tyStr=" dashPunct";
break;
case 21:
tyStr=" startPunct";
break;
case 22:
tyStr=" endPunct";
break;
case 24:
tyStr=" otherPunct";
break;
default :
}
Character.UnicodeBlock cub=Character.UnicodeBlock.of(ch);
pw.println("Character " + ch + " ["+ chstr+ ", U+"+ Integer.toHexString(ch).toUpperCase()+ ", valid="+ Character.isValidCodePoint(ch)+ ", suppl="+ Character.isSupplementaryCodePoint(ch)+ ", mirror="+ Character.isMirrored(ch)+ ", type="+ Character.getType(ch)+ tyStr+ ", uBlock="+ cub+ "]");
}
