{
  StringUtils.printErrInvocationString("BisequenceCRFClassifier",args);
  Properties props=StringUtils.argsToProperties(args);
  SeqClassifierFlags flags=new SeqClassifierFlags(props);
  String loadPathEn=flags.loadBisequenceClassifierEn;
  String loadPathCh=flags.loadBisequenceClassifierCh;
  String[] argsEn=new String[]{"-prop",flags.bisequenceClassifierPropEn};
  String[] argsCh=new String[]{"-prop",flags.bisequenceClassifierPropCh};
  Properties propsEn=StringUtils.argsToProperties(argsEn);
  Properties propsCh=StringUtils.argsToProperties(argsCh);
  CRFClassifier<CoreLabel> crfEn=new CRFClassifier<CoreLabel>(propsEn);
  if (loadPathEn != null) {
    crfEn.loadClassifierNoExceptions(loadPathEn,props);
  }
  CRFClassifier<CoreLabel> crfCh=new CRFClassifier<CoreLabel>(propsCh);
  if (loadPathCh != null) {
    crfCh.loadClassifierNoExceptions(loadPathCh,props);
  }
  if (crfEn.classIndex.objectsList().size() != (crfCh.classIndex.objectsList().size()))   throw new RuntimeException("classIndex of crfEn and crfCh size not equal\n" + "crfEn's classIndex: " + crfEn.classIndex.toString() + "\ncrfCh's classIndex: "+ crfCh.classIndex.toString());
  System.err.println("crfEn's classIndex: " + crfEn.classIndex.toString() + "\ncrfCh's classIndex: "+ crfCh.classIndex.toString());
  BisequenceCRFClassifier<CoreLabel> biCRF=new BisequenceCRFClassifier<CoreLabel>(crfEn,crfCh,flags);
  biCRF.classIndexEn=crfEn.classIndex;
  biCRF.classIndexCh=crfCh.classIndex;
  biCRF.classifyAndWriteAnswers();
  System.err.println("biCRF completed on " + new Date());
}
