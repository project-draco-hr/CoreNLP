{
  String line=null;
  try {
    BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(new File(alignmentFile))));
    List<List<Triple<Integer,Integer,Double>>> alignments=new ArrayList<List<Triple<Integer,Integer,Double>>>();
    while ((line=br.readLine()) != null) {
      Set<Triple<Integer,Integer,Double>> sent=new HashSet<Triple<Integer,Integer,Double>>();
      line=line.trim();
      if (line.length() > 0) {
        String[] parts=line.split(" ");
        for (        String part : parts) {
          String[] subparts=part.trim().split("-");
          int chIndex=Integer.parseInt(subparts[0]);
          int enIndex=Integer.parseInt(subparts[1]);
          String leftover=subparts[2];
          if (subparts.length > 3)           for (int j=3; j < subparts.length; j++)           leftover+="-" + subparts[j];
          double prob=Double.parseDouble(leftover);
          if (prob >= flags.alignmentPruneThreshold) {
            Triple<Integer,Integer,Double> edge=new Triple(enIndex,chIndex,prob);
            sent.add(edge);
          }
        }
      }
      alignments.add(new ArrayList<Triple<Integer,Integer,Double>>(sent));
    }
    return alignments;
  }
 catch (  Exception ex) {
    System.err.println("Reading alignments error in line:\n" + line);
    ex.printStackTrace();
    return null;
  }
}
