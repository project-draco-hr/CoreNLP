{
  Map<Integer,Set<Integer>> graph=new HashMap<Integer,Set<Integer>>();
  for (  Triple<Integer,Integer,Double> edge : alignment) {
    Integer node1=edge.first();
    Integer node2=edge.second() + enDocSize;
    if (!graph.containsKey(node1)) {
      graph.put(node1,new HashSet<Integer>());
    }
    if (!graph.containsKey(node2)) {
      graph.put(node2,new HashSet<Integer>());
    }
    graph.get(node1).add(node2);
    graph.get(node2).add(node1);
  }
  for (int i=0; i < enDocSize; i++) {
    if (!graph.containsKey(i)) {
      graph.put(i,new HashSet<Integer>());
    }
    if (i > 0)     graph.get(i).add(i - 1);
    if (i < enDocSize - 1)     graph.get(i).add(i + 1);
  }
  int totalSize=enDocSize + chDocSize;
  for (int i=enDocSize; i < totalSize; i++) {
    if (!graph.containsKey(i)) {
      graph.put(i,new HashSet<Integer>());
    }
    if (i > enDocSize)     graph.get(i).add(i - 1);
    if (i < totalSize - 1)     graph.get(i).add(i + 1);
  }
  return graph;
}
