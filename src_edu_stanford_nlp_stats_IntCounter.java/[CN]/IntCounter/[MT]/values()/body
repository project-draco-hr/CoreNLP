{
  return new AbstractCollection<Double>(){
    @Override public Iterator<Double> iterator(){
      return new Iterator<Double>(){
        Iterator<MutableInteger> inner=map.values().iterator();
        public boolean hasNext(){
          return inner.hasNext();
        }
        public Double next(){
          return inner.next().doubleValue();
        }
        public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
    @Override public int size(){
      return map.size();
    }
  }
;
}
