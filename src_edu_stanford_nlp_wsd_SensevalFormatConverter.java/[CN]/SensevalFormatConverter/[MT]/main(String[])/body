{
  if (args.length < 2) {
    parseError();
  }
  int nextArg=0;
  double ttsplit=-1;
  quiet=false;
  boolean noNonIntSenses=false;
  String outputPrefix="";
  boolean combineTestAndAns=false;
  while (args[nextArg].charAt(0) == '-') {
    if (args[nextArg].equals("-ttsplit")) {
      nextArg++;
      ttsplit=Double.parseDouble(args[nextArg]);
      if (args.length < 4) {
        parseError();
      }
    }
 else     if (args[nextArg].equals("-quiet")) {
      quiet=true;
    }
 else     if (args[nextArg].equals("-noNonIntSenses")) {
      noNonIntSenses=true;
    }
 else     if (args[nextArg].equals("-outputPrefix")) {
      nextArg++;
      outputPrefix=args[nextArg];
    }
 else     if (args[nextArg].equals("-combineTestAndAns")) {
      combineTestAndAns=true;
    }
 else     if (args[nextArg].equals("-stringSenses")) {
      stringSenses=true;
    }
 else     if (args[nextArg].equals("-allSenses")) {
      allSenses=true;
    }
 else     if (args[nextArg].equals("-instanceIDs")) {
      instanceIDs=true;
    }
    nextArg++;
    if (nextArg >= args.length) {
      parseError();
    }
  }
  String keyFilename=args[nextArg++];
  numMap=new HashMap<String,Index<String>>();
  keyMap=new HashMap<String,ArrayList<String>>();
  parseKeyFile(keyFilename,noNonIntSenses);
  if (nextArg >= args.length) {
    parseError();
  }
  ArrayList<String> inFilenames=new ArrayList<String>();
  while (nextArg < args.length) {
    inFilenames.add(args[nextArg++]);
  }
  allInstances=new ArrayList<SensevalInstance>();
  parseInputFiles(inFilenames,noNonIntSenses);
  writeOutput(ttsplit,outputPrefix,combineTestAndAns);
  System.out.println("Finished processing.");
}
