{
  BufferedReader key=null;
  try {
    key=new BufferedReader(new FileReader(keyFilename));
  }
 catch (  FileNotFoundException e) {
    System.err.println("Cannot find key file " + keyFilename);
    parseError();
  }
  try {
    System.out.println("Processing key file \"" + keyFilename + "\"");
    for (String line; (line=key.readLine()) != null; ) {
      StringTokenizer tokens=new StringTokenizer(line);
      ArrayList<String> senseIDs=new ArrayList<String>();
      String instanceID=null;
      String lexElt=null;
      while (tokens.hasMoreTokens()) {
        String token=tokens.nextToken();
        if (lexElt == null) {
          lexElt=token;
        }
 else         if (instanceID == null) {
          instanceID=token;
        }
 else         if (!noNonIntSenses || token.length() > 1) {
          senseIDs.add(new String(token));
        }
      }
      if (instanceID == null) {
        if (!quiet) {
          System.err.println("Could not find instanceID in key file " + keyFilename + ":");
          System.err.println(line);
        }
      }
 else       if (senseIDs.isEmpty()) {
        if (!quiet) {
          System.err.println("Could not find valid senseID in key file " + keyFilename + ":");
          System.err.println(line);
          System.err.println("Instance will be skipped if test instance.");
        }
      }
 else {
        Index<String> senseNum;
        if (numMap.containsKey(lexElt)) {
          senseNum=numMap.get(lexElt);
        }
 else {
          numMap.put(lexElt,senseNum=new HashIndex<String>());
        }
        for (int i=0; i < senseIDs.size(); i++) {
          if (senseIDs.get(i).length() > 1) {
            senseNum.indexOf(senseIDs.get(i),true);
          }
        }
        keyMap.put(instanceID,senseIDs);
      }
    }
  }
 catch (  Exception e) {
    System.err.println("IOexception reading key file " + keyFilename);
    System.exit(1);
  }
}
