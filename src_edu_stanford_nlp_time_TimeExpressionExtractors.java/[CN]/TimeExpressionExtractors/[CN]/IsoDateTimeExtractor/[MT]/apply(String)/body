{
  DateTime dateTime=null;
  try {
    dateTime=formatter.parseDateTime(text);
  }
 catch (  org.joda.time.IllegalFieldValueException e) {
    logger.warning("WARNING: Invalid temporal \"" + text + "\" ("+ e.getMessage()+ "). Skipping and continuing...");
    return null;
  }
  assert(dateTime != null);
  if (hasDate && hasTime) {
    if (dateTime.getZone() != null) {
      return new SUTime.GroundedTime(dateTime);
    }
 else {
      return new SUTime.IsoDateTime(new SUTime.IsoDate(dateTime.getYear(),dateTime.getMonthOfYear(),dateTime.getDayOfMonth()),new SUTime.IsoTime(dateTime.getHourOfDay(),dateTime.getMinuteOfHour(),dateTime.getSecondOfMinute()));
    }
  }
 else   if (hasTime) {
    return new SUTime.IsoTime(dateTime.getHourOfDay(),dateTime.getMinuteOfHour(),dateTime.getSecondOfMinute());
  }
 else   if (hasDate) {
    return new SUTime.IsoDate(dateTime.getYear(),dateTime.getMonthOfYear(),dateTime.getDayOfMonth());
  }
 else {
    return null;
  }
}
