{
  System.out.print("Reading trees");
  int numTrees=0;
  for (  Tree t : tb) {
    numTrees++;
    t=ta.transformTree(t);
    for (    Tree subtree : t) {
      String lhs=subtree.value();
      if (subtree.isLeaf()) {
        if (!SKIP_TERMINALS)         VtCtr.incrementCount(subtree.value());
        continue;
      }
 else {
        VnCtr.incrementCount(lhs);
        if (SKIP_TERMINALS && subtree.isPreTerminal())         continue;
      }
      RuleRHS rhs=new RuleRHS(subtree.children());
      ruleCtr.incrementCount(lhs,rhs);
      ruleTypes.add(new Rule(lhs,rhs));
    }
    if ((numTrees + 1) % 200 == 0)     System.out.print(".");
    if ((numTrees + 1) % 5000 == 0)     System.out.println();
  }
  System.out.printf("\nRead %d trees\n",numTrees);
}
