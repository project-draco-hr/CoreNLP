{
  if (initializedTransitions == null) {
    double[][] t=new double[transitions.size()][transitions.size()];
    for (int i=0; i < transitions.size(); i++) {
      List<Double> curTransitions=transitions.get(i);
      for (int j=0; j < curTransitions.size(); j++) {
        Double weight=curTransitions.get(j);
        t[i][j]=weight.doubleValue();
      }
      ArrayMath.normalize(t[i]);
    }
    perturbTransitions(t);
    return (t);
  }
 else {
    double[][] t=new double[initializedTransitions.length][initializedTransitions.length];
    for (int i=0; i < initializedTransitions.length; i++) {
      for (int j=0; j < initializedTransitions.length; j++) {
        t[i][j]=initializedTransitions[i][j];
      }
    }
    return t;
  }
}
