{
  Map<String,Set<CandidatePhrase>> seedWords=new HashMap<>();
  if (seedWordsFiles == null) {
    throw new RuntimeException("Needs both seedWordsFiles and file parameters to run this class!\nseedWordsFiles has format: label1,filewithlistofwords1;label2,filewithlistofwords2;...");
  }
  for (  String seedFile : seedWordsFiles.split(";")) {
    String[] t=seedFile.split(",");
    String label=t[0];
    Set<CandidatePhrase> seedWords4Label=new HashSet<>();
    for (int i=1; i < t.length; i++) {
      String seedWordsFile=t[i];
      for (      File fin : ConstantsAndVariables.listFileIncludingItself(seedWordsFile)) {
        Redwood.log(Redwood.DBG,"Reading seed words from " + fin + " for label "+ label);
        for (        String line : IOUtils.readLines(fin)) {
          line=line.trim();
          if (line.isEmpty() || line.startsWith("#")) {
            continue;
          }
          line=line.split("\t")[0];
          seedWords4Label.add(CandidatePhrase.createOrGet(line));
        }
      }
    }
    seedWords.put(label,seedWords4Label);
    Redwood.log(ConstantsAndVariables.minimaldebug,"Number of seed words for label " + label + " is "+ seedWords4Label.size());
  }
  return seedWords;
}
