{
  if (n < 0)   throw new IllegalArgumentException("n < 0: " + n);
  if (n > c.size())   throw new IllegalArgumentException("n > size of collection: " + n + ", "+ c.size());
  List<List<E>> resultAll=new ArrayList<>(numThreads);
  int num;
  if (numThreads == 1)   num=n;
 else   num=n / (numThreads - 1);
  System.out.println("shuffled " + c.size() + " sentences and selecting "+ num+ " sentences per thread");
  List<E> result=new ArrayList<>(num);
  int totalitems=0;
  int nitem=0;
  Random r=new Random(numCallsToCalStats.incrementAndGet());
  boolean[] added=new boolean[c.size()];
  Arrays.fill(added,false);
  while (totalitems < n) {
    int index;
    do {
      index=r.nextInt(c.size());
    }
 while (added[index]);
    added[index]=true;
    E c1=c.get(index);
    if (nitem == num) {
      resultAll.add(result);
      result=new ArrayList<>(num);
      nitem=0;
    }
    result.add(c1);
    totalitems++;
    nitem++;
  }
  if (!result.isEmpty())   resultAll.add(result);
  return resultAll;
}
