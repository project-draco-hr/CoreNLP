{
  String prev=(beforeIndex >= 0) ? list.get(beforeIndex).get(CoreAnnotations.TextAnnotation.class).toLowerCase() : "";
  String prev2=(beforeIndex - 1 >= 0) ? list.get(beforeIndex - 1).get(CoreAnnotations.TextAnnotation.class).toLowerCase() : "";
  String prev3=(beforeIndex - 2 >= 0) ? list.get(beforeIndex - 2).get(CoreAnnotations.TextAnnotation.class).toLowerCase() : "";
  int sz=list.size();
  String next=(afterIndex < sz) ? list.get(afterIndex).get(CoreAnnotations.TextAnnotation.class).toLowerCase() : "";
  if (DEBUG) {
    err.println("Quantifiable modifiers: previous: " + prev3 + ' '+ prev2+ ' '+ prev);
    err.println("Quantifiable modifiers: next: " + next);
  }
  String longPrev=prev3 + prev2 + prev;
  if (longPrev.matches(lessEqualThreeWords)) {
    return "<=";
  }
  if (longPrev.matches(greaterEqualThreeWords)) {
    return ">=";
  }
  longPrev=prev2 + prev;
  if (longPrev.matches(greaterEqualTwoWords)) {
    return ">=";
  }
  if (longPrev.matches(lessEqualTwoWords)) {
    return "<=";
  }
  if (longPrev.matches(approxTwoWords)) {
    return "~";
  }
  if (prev.matches(greaterThanOneWord)) {
    return ">";
  }
  if (prev.matches(lessThanOneWord)) {
    return "<";
  }
  if (prev.matches(approxOneWord)) {
    return "~";
  }
  if (next.matches(approxOneWord)) {
    return "~";
  }
  if (prev.matches(greaterEqualTwoWords)) {
    return ">=";
  }
  if (prev.matches(lessEqualTwoWords)) {
    return "<=";
  }
  if (DEBUG) {
    err.println("Quantifiable: not a quantity modifier");
  }
  return null;
}
