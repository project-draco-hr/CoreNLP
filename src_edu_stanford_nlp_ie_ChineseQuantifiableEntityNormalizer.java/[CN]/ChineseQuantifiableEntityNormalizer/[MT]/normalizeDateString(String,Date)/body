{
  String ctxyear=new SimpleDateFormat("yyyy").format(ctxdate);
  String ctxmonth=new SimpleDateFormat("MM").format(ctxdate);
  String ctxday=new SimpleDateFormat("dd").format(ctxdate);
  Pattern p=Pattern.compile("^" + BASIC_YYYYMMDD_PATTERN + "$");
  Matcher m=p.matcher(s);
  if (m.find() && m.groupCount() == 3) {
    StringBuilder res=new StringBuilder();
    res.append(normalizeYear(m.group(1),ctxyear));
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(2),ctxmonth));
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(3),ctxday));
    return res.toString();
  }
  p=Pattern.compile("^" + BASIC_MMDD_PATTERN + "$");
  m=p.matcher(s);
  if (m.find() && m.groupCount() == 2) {
    StringBuilder res=new StringBuilder();
    res.append(ctxyear);
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(1),ctxmonth));
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(2),ctxday));
    return res.toString();
  }
  p=Pattern.compile("^" + BASIC_DD_PATTERN + "$");
  m=p.matcher(s);
  if (m.find() && m.groupCount() == 1) {
    StringBuilder res=new StringBuilder();
    res.append(ctxyear);
    res.append("-");
    res.append(ctxmonth);
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(1),ctxday));
    return res.toString();
  }
  p=Pattern.compile("^" + ENGLISH_MMDDYYYY_PATTERN + "$");
  m=p.matcher(s);
  if (m.find() && m.groupCount() == 3) {
    StringBuilder res=new StringBuilder();
    if (m.group(3) == null)     res.append(ctxyear);
 else     res.append(normalizeYear(m.group(3),ctxyear));
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(1),ctxmonth));
    res.append("-");
    res.append(normalizeMonthOrDay(m.group(2),ctxday));
    return res.toString();
  }
  return s;
}
