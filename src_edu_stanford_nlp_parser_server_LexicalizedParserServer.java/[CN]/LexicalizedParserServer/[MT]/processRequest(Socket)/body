{
  BufferedReader reader=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),"utf-8"));
  String line=reader.readLine();
  System.err.println(line);
  if (line == null)   return;
  line=line.trim();
  String[] pieces=line.split(" ",2);
  String[] commandPieces=pieces[0].split(":",2);
  String command=commandPieces[0];
  String commandArgs="";
  if (commandPieces.length > 1) {
    commandArgs=commandPieces[1];
  }
  String arg=null;
  if (pieces.length > 1) {
    arg=pieces[1];
  }
  System.err.println("Got the command " + command);
  if (arg != null) {
    System.err.println(" ... with argument " + arg);
  }
switch (command) {
case "quit":
    handleQuit();
  break;
case "parse":
handleParse(arg,clientSocket.getOutputStream(),commandArgs.equals("binarized"));
break;
case "dependencies":
handleDependencies(arg,clientSocket.getOutputStream(),commandArgs);
break;
case "tree":
handleTree(arg,clientSocket.getOutputStream());
break;
case "tokenize":
handleTokenize(arg,clientSocket.getOutputStream());
break;
case "lemma":
handleLemma(arg,clientSocket.getOutputStream());
break;
}
System.err.println("Handled request");
clientSocket.close();
}
