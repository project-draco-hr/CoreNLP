{
  addProjectedCategoriesToGrammaticalStructure(gs);
  Collection<TypedDependency> deps;
switch (mode) {
case COLLAPSED_TREE:
    deps=gs.typedDependenciesCollapsedTree();
  break;
case COLLAPSED:
deps=gs.typedDependenciesCollapsed(includeExtras);
break;
case CCPROCESSED:
deps=gs.typedDependenciesCCprocessed(includeExtras);
break;
case BASIC:
deps=gs.typedDependencies(includeExtras);
break;
default :
throw new IllegalArgumentException("Unknown mode " + mode);
}
if (filter != null) {
List<TypedDependency> depsFiltered=Generics.newArrayList();
for (TypedDependency td : deps) {
if (filter.accept(td)) {
depsFiltered.add(td);
}
}
deps=depsFiltered;
}
Collection<TreeGraphNode> roots=Generics.newHashSet();
return new SemanticGraph(deps,docID,sentIndex,lemmatize);
}
