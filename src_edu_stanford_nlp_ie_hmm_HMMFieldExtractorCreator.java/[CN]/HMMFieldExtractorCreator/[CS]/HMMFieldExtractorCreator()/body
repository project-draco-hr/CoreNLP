{
  setName("Hidden Markov Model");
  setPropertyDefaults(Extractor.getDefaultProperties());
  setPropertyRequired("dataFile");
  setPropertyRequired("targetFields");
  setPropertyRequired("singleMatchStrategy");
  setPropertyClass("dataFile",PC_FILE);
  setPropertyClass("singleMatchStrategy",Arrays.asList(new String[]{"best_match","first_match"}));
  setPropertyClass("uniformTransSmoothing",PC_DOUBLE);
  setPropertyClass("trainType",Arrays.asList(new String[]{"joint","conditional"}));
  setPropertyClass("numCandidates",PC_INTEGER);
  setPropertyClass("targetType",Arrays.asList(new String[]{"fixed","chain","ergodic","learned","learned2","lchain"}));
  setPropertyClass("nts",PC_INTEGER);
  setPropertyClass("nbs",PC_INTEGER);
  setPropertyClass("contextType",Arrays.asList(new String[]{"fixed","flexible","learned","ergodic"}));
  setPropertyClass("ncs",PC_INTEGER);
  setPropertyClass("clInitThreshold",PC_INTEGER);
  setPropertyClass("sigmaSquared",PC_DOUBLE);
  setPropertyClass("initEmissions",PC_BOOLEAN);
  setPropertyClass("unseenMode",Arrays.asList(new String[]{"nonexistent","unk_low_counts","hold_out_mass"}));
  setPropertyClass("unkModel",Arrays.asList(new String[]{"single_unk","featural_decomp"}));
  setPropertyClass("unseenProbSource",Arrays.asList(new String[]{"singletons","held_out"}));
  setPropertyClass("featureSource",Arrays.asList(new String[]{"singletons","held_out"}));
  setPropertyClass("hmmFile",PC_FILE);
}
