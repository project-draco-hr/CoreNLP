{
  CRC32 crc=new CRC32();
  crc.reset();
  if (!testGzipMagic(in,crc)) {
    throw new NoGzipMagicException();
  }
  this.length+=2;
  if (readByte(in,crc) != Deflater.DEFLATED) {
    throw new IOException("Unknown compression");
  }
  this.length++;
  this.flg=readByte(in,crc);
  this.length++;
  this.mtime=readInt(in,crc);
  this.length+=4;
  this.xfl=readByte(in,crc);
  this.length++;
  this.os=readByte(in,crc);
  this.length++;
  final int FLG_FEXTRA=4;
  if ((this.flg & FLG_FEXTRA) == FLG_FEXTRA) {
    int count=readShort(in,crc);
    this.length+=2;
    this.fextra=new byte[count];
    readByte(in,crc,this.fextra,0,count);
    this.length+=count;
  }
  final int FLG_FNAME=8;
  if ((this.flg & FLG_FNAME) == FLG_FNAME) {
    while (readByte(in,crc) != 0) {
      this.length++;
    }
  }
  final int FLG_FCOMMENT=16;
  if ((this.flg & FLG_FCOMMENT) == FLG_FCOMMENT) {
    while (readByte(in,crc) != 0) {
      this.length++;
    }
  }
  final int FLG_FHCRC=2;
  if ((this.flg & FLG_FHCRC) == FLG_FHCRC) {
    int calcCrc=(int)(crc.getValue() & 0xffff);
    if (readShort(in,crc) != calcCrc) {
      throw new IOException("Bad header CRC");
    }
    this.length+=2;
  }
}
