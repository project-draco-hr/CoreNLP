{
  if (graph.getChildren(node1).contains(node2))   return true;
  if (directionSensitive) {
    Queue<V> nodes=new LinkedList<V>();
    V vertex=node1;
    int i=0;
    nodes.addAll(graph.getChildren(vertex));
    while (!nodes.isEmpty()) {
      V child=nodes.poll();
      i++;
      if (i > maxDepth - 1)       break;
      if (child.equals(node2))       return true;
      boolean changed=nodes.addAll(graph.getChildren(child));
      if (changed == false)       return false;
      if (nodes.contains(node2))       return true;
      vertex=child;
    }
  }
 else {
    Queue<V> nodes=new LinkedList<V>();
    V vertex=node1;
    int i=0;
    nodes.addAll(graph.getNeighbors(vertex));
    while (!nodes.isEmpty()) {
      V child=nodes.poll();
      i++;
      if (i > maxDepth - 1)       break;
      if (child.equals(node2))       return true;
      boolean changed=nodes.addAll(graph.getNeighbors(child));
      if (changed == false)       return false;
      if (nodes.contains(node2))       return true;
      vertex=child;
    }
  }
  return false;
}
