{
  sayln("SGDToQNMinimizer called on function of " + function.domainDimension() + " variables;");
  if (!(function instanceof AbstractStochasticCachingDiffFunction)) {
    throw new UnsupportedOperationException();
  }
  AbstractStochasticCachingDiffFunction dfunction=(AbstractStochasticCachingDiffFunction)function;
  dfunction.method=StochasticCalculateMethods.GradientOnly;
  ScaledSGDMinimizer sgd=new ScaledSGDMinimizer(this.gain,this.bSize,this.SGDPasses,1,this.outputIterationsToFile);
  QNMinimizer qn=new QNMinimizer(this.QNMem,true);
  double[] x=sgd.minimize(dfunction,functionTolerance,initial,this.SGDPasses);
  QNMinimizer.QNInfo qnInfo=qn.new QNInfo(sgd.sList,sgd.yList);
  qnInfo.d=sgd.diag;
  qn.minimize(dfunction,functionTolerance,x,this.QNPasses,qnInfo);
  System.err.println("");
  System.err.println("Minimization complete.");
  System.err.println("");
  System.err.println("Exiting for Debug");
  return x;
}
