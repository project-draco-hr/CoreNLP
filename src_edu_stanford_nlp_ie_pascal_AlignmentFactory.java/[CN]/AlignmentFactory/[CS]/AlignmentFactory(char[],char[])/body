{
  this.longForm=longForm;
  this.lcLongForm=toLower(longForm);
  this.shortForm=shortForm;
  this.lcShortForm=toLower(shortForm);
  alignMatrix=new int[lcLongForm.length][lcShortForm.length];
  backMatrix=new byte[lcLongForm.length][lcShortForm.length];
  for (int l=0; l < lcLongForm.length; ++l) {
    for (int s=0; s < lcShortForm.length; ++s) {
      int match=(lcLongForm[l] == lcShortForm[s]) ? 1 : 0;
      int froml=(l == 0) ? 0 : alignMatrix[l - 1][s];
      int froms=(s == 0) ? 0 : alignMatrix[l][s - 1];
      int frommatch=((l == 0 || s == 0) ? 0 : alignMatrix[l - 1][s - 1]) + match;
      int max=Math.max(froml,Math.max(froms,frommatch));
      byte backp=0;
      if (froml == max)       backp|=SHIFT_LONG;
      if (froms == max)       backp|=SHIFT_SHORT;
      if (match == 1 && frommatch == max)       backp|=SHIFT_BOTH;
      backMatrix[l][s]=backp;
      alignMatrix[l][s]=max;
    }
  }
  alignments=new HashSet<Alignment>();
  int[] pointers=new int[lcShortForm.length];
  Arrays.fill(pointers,-1);
  if (lcLongForm.length > 0 && lcShortForm.length > 0) {
    addCount=0;
    findAlignments(pointers,lcLongForm.length - 1,lcShortForm.length - 1);
  }
}
