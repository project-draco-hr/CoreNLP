{
  if (bparser == null || parseSkipped) {
    return null;
  }
  List<ScoredObject<Tree>> binaryTrees=bparser.getKGoodParses(k);
  if (binaryTrees == null) {
    return null;
  }
  List<ScoredObject<Tree>> trees=new ArrayList<>(k);
  for (  ScoredObject<Tree> tp : binaryTrees) {
    Tree t=debinarizer.transformTree(tp.object());
    if (op.nodePrune) {
      NodePruner np=new NodePruner(pparser,debinarizer);
      t=np.prune(t);
    }
    t=subcategoryStripper.transformTree(t);
    restoreOriginalWords(t);
    trees.add(new ScoredObject<>(t,tp.score()));
  }
  return trees;
}
