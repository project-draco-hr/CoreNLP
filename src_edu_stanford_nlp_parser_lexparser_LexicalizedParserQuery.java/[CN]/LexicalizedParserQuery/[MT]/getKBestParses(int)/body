{
  if (parseSkipped) {
    return null;
  }
  if (bparser != null && parseSucceeded) {
    return this.getKGoodFactoredParses(k);
  }
 else   if (pparser != null && pparser.hasParse() && fallbackToPCFG) {
    return this.getKBestPCFGParses(k);
  }
 else   if (dparser != null && dparser.hasParse()) {
    Tree tree=this.getBestDependencyParse(true);
    double score=dparser.getBestScore();
    ScoredObject<Tree> so=new ScoredObject<>(tree,score);
    List<ScoredObject<Tree>> trees=new ArrayList<>(1);
    trees.add(so);
    return trees;
  }
 else {
    throw new NoSuchParseException();
  }
}
