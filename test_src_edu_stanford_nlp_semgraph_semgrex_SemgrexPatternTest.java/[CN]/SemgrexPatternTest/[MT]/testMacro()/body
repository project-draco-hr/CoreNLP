{
  SemanticGraph h=SemanticGraph.valueOf("[married/VBN nsubjpass>Hughes/NNP auxpass>was/VBD nmod:to>Gracia/NNP]");
  String macro="macro WORD = married";
  SemgrexBatchParser parser=new SemgrexBatchParser();
  String pattern="({word:${WORD}}=parent >>nsubjpass {}=node)";
  List<SemgrexPattern> pats=parser.compileStream(new ByteArrayInputStream((macro + "\n" + pattern).getBytes(StandardCharsets.UTF_8)));
  SemgrexPattern pat3=pats.get(0);
  boolean ignoreCase=true;
  SemgrexMatcher mat3=pat3.matcher(h,ignoreCase);
  if (mat3.find()) {
    String parent=mat3.getNode("parent").word();
    String node=mat3.getNode("node").word();
    System.out.println("Result: parent is " + parent + " and node is "+ node);
    Assert.assertEquals(parent,"married");
    Assert.assertEquals(node,"Hughes");
  }
 else   throw new RuntimeException("failed!");
}
