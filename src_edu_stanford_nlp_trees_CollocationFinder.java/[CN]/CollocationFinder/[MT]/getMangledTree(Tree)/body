{
  Collocation matchingColl=null;
  for (  Tree child : t.children()) {
    child=getMangledTree(child);
  }
  for (  Collocation c : collocationCollector) {
    if (t.equals(c.parentNode)) {
      if (matchingColl == null || (c.span.first() <= matchingColl.span.first() && c.span.second() >= matchingColl.span.second())) {
        matchingColl=c;
        if (DEBUG) {
          err.println("Found matching collocation for tree:");
          t.pennPrint();
          err.print("  head label: " + c.headLabel);
          err.println("; collocation string: " + c.collocationString);
          err.println("  Constituents: " + c.indicesOfConstituentChildren);
        }
      }
    }
  }
  if (matchingColl == null) {
    return t;
  }
 else {
    if (DEBUG) {
      err.println("Collapsing " + matchingColl);
    }
    Tree[] allChildren=t.children();
    StringBuilder mutatedString=new StringBuilder(160);
    for (    int i : matchingColl.indicesOfConstituentChildren) {
      String strToAppend=mergeLeavesIntoCollocatedString(allChildren[i]);
      mutatedString.append(strToAppend);
      mutatedString.append("_");
    }
    mutatedString=mutatedString.deleteCharAt(mutatedString.length() - 1);
    if (DEBUG) {
      err.println("allChildren is: " + Arrays.toString(allChildren));
    }
    for (int index=matchingColl.indicesOfConstituentChildren.size() - 1; index > 0; index--) {
      int thisConstituent=matchingColl.indicesOfConstituentChildren.get(index);
      allChildren=(Tree[])ArrayUtils.removeAt(allChildren,thisConstituent);
      if (DEBUG) {
        err.println(" deleted " + thisConstituent + "; allChildren is: "+ Arrays.toString(allChildren));
      }
    }
    String newNodeString=mutatedString.toString();
    int firstChildIndex=matchingColl.indicesOfConstituentChildren.get(0);
    Tree newCollocationChild=allChildren[firstChildIndex];
    if (DEBUG)     err.println("Manipulating: " + newCollocationChild);
    newCollocationChild.setValue(matchingColl.headLabel.value());
    Tree newCollocationLeaf=newCollocationChild.treeFactory().newLeaf(newNodeString);
    newCollocationChild.setChildren(Collections.singletonList(newCollocationLeaf));
    if (DEBUG)     err.println("  changed to: " + newCollocationChild);
    allChildren[firstChildIndex]=newCollocationChild;
    t.setChildren(allChildren);
    if (DEBUG) {
      err.println("Restructured tree is:");
      t.pennPrint();
      err.println();
    }
    return t;
  }
}
