{
  List<TokenSequencePattern> patterns=new ArrayList<TokenSequencePattern>();
  patterns.add(TokenSequencePattern.compile("which word should? be matched{1,2}"));
  MultiPatternMatcher.SequencePatternTrigger<CoreMap> trigger=new MultiPatternMatcher.BasicSequencePatternTrigger<CoreMap>(new CoreMapNodePatternTrigger(patterns));
  Collection<SequencePattern<CoreMap>> triggered=trigger.apply(SentenceUtils.toCoreLabelList("one","two","three"));
  assertEquals(0,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("which"));
  assertEquals(0,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("matched"));
  assertEquals(1,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("should"));
  assertEquals(0,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("which","word","be"));
  assertEquals(0,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("which","word","be","matched"));
  assertEquals(1,triggered.size());
  triggered=trigger.apply(SentenceUtils.toCoreLabelList("which","word","should","be","matched"));
  assertEquals(1,triggered.size());
}
