{
  bestMatcher=null;
  this.fromIndex=fromIndex;
  if (!caseSensitive) {
    s=s.toLowerCase();
  }
  s=s.substring(fromIndex);
  String key=s.substring(0,Math.min(KEY_LENGTH,s.length()));
  Map<String,Entry> patterns=dictionary.get(key);
  if (patterns == null) {
    return false;
  }
  int maxLength=0;
  bestData=new HashSet<String>();
  for (Iterator<Entry> iter=patterns.values().iterator(); iter.hasNext(); ) {
    Entry pattern=iter.next();
    Matcher m=pattern.pattern().matcher(s);
    if (m.lookingAt()) {
      int length=m.end() - m.start();
      if (length > maxLength) {
        bestMatcher=m;
        bestData=new HashSet<String>();
        bestData.addAll(pattern.data());
        maxLength=length;
      }
 else       if (length > 0 && length == maxLength) {
        bestData.addAll(pattern.data());
      }
    }
  }
  return (bestMatcher != null);
}
