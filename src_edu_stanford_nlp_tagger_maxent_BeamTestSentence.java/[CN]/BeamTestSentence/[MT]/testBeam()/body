{
  for (int j=0; j < kBestSize; j++) {
    for (int i=0; i < size; i++) {
      nBest[j][i]=naTag;
      pBest[j]=1.0;
    }
  }
  for (int current=0; current < size; current++) {
    if (VERBOSE) {
      System.err.println("current is " + current + " word "+ sent.get(current));
    }
    String[][] hCurrent=new String[kBestSize][size];
    double[] pCurrent=new double[kBestSize];
    for (int j=0; j < pCurrent.length; j++) {
      pCurrent[j]=Double.NEGATIVE_INFINITY;
    }
    insertTags(current,hCurrent,pCurrent);
    if (VERBOSE) {
      System.err.println("current is " + current + " word "+ sent.get(current));
    }
    for (int i=0; i < kBestSize; i++) {
      if (hCurrent[i][0] == null) {
        for (int s=i; s < kBestSize; s++) {
          System.arraycopy(hCurrent[i - 1],0,hCurrent[s],0,current + 1);
          pCurrent[s]=pCurrent[i - 1];
        }
        break;
      }
    }
    nBest=hCurrent;
    pBest=pCurrent;
  }
  return nBest[0];
}
