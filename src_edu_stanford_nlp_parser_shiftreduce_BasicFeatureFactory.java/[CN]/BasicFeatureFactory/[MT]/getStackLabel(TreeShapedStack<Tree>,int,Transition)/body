{
  if (stack.size() <= nodeNum) {
    return null;
  }
  for (int i=0; i < nodeNum; ++i) {
    stack=stack.pop();
  }
  Tree node=stack.peek();
  for (  Transition t : transitions) {
switch (t) {
case LEFT:
      if (node.children().length != 2) {
        return null;
      }
    node=node.children()[0];
  break;
case RIGHT:
if (node.children().length != 2) {
  return null;
}
node=node.children()[1];
break;
case UNARY:
if (node.children().length != 1) {
return null;
}
node=node.children()[0];
break;
default :
throw new IllegalArgumentException("Unknown transition type " + t);
}
}
if (!(node.label() instanceof CoreLabel)) {
throw new IllegalArgumentException("Can only featurize CoreLabel trees");
}
return (CoreLabel)node.label();
}
