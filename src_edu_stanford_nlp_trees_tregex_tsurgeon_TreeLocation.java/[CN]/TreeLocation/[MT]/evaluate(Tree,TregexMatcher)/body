{
  int newIndex=-1;
  Tree parent=null;
  Tree relativeNode=p.evaluate(t,tm);
  Matcher m=daughterPattern.matcher(relation);
  if (m.matches()) {
    newIndex=Integer.parseInt(m.group(1)) - 1;
    parent=relativeNode;
    if (relation.charAt(1) == '-')     newIndex=parent.children().length - newIndex;
  }
 else {
    parent=relativeNode.parent(t);
    if (parent == null) {
      throw new RuntimeException("Error: looking for a non-existent parent in tree " + t + " for \""+ toString()+ "\"");
    }
    int index=parent.objectIndexOf(relativeNode);
switch (relation) {
case "$+":
      newIndex=index;
    break;
case "$-":
  newIndex=index + 1;
break;
default :
throw new RuntimeException("Error: Haven't dealt with relation " + relation + " yet.");
}
}
return new Pair<Tree,Integer>(parent,newIndex);
}
