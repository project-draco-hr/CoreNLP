{
  this.fileFilter=fileFilter;
  recursively=recurse;
  try {
    String[] ra=ranges.split(",");
    for (int i=0; i < ra.length; i++) {
      String[] one=ra[i].split("-");
      if (one.length > 2) {
        throw new IllegalArgumentException("Too many hyphens");
      }
 else {
        int low=Integer.parseInt(one[0].trim());
        int high;
        if (one.length == 2) {
          high=Integer.parseInt(one[1].trim());
        }
 else {
          high=low;
        }
        Pair<Integer,Integer> p=new Pair<Integer,Integer>(Integer.valueOf(low),Integer.valueOf(high));
        this.ranges.add(p);
      }
    }
  }
 catch (  Exception e) {
    IllegalArgumentException iae=new IllegalArgumentException("Constructor argument not valid: " + ranges);
    iae.initCause(e);
    throw iae;
  }
}
