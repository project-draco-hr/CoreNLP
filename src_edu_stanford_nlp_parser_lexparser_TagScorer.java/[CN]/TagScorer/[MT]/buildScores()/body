{
  double[] bestTag=new double[words.size()];
  for (int pos=0; pos < words.size(); pos++) {
    bestTag[pos]=Double.NEGATIVE_INFINITY;
    for (Iterator tI=lex.ruleIteratorByWord(words.get(pos).toString(),pos,null); tI.hasNext(); ) {
      IntTaggedWord ur=(IntTaggedWord)tI.next();
      double score=lex.score(ur,pos,wordIndex.get(ur.word),null);
      if (score > bestTag[pos]) {
        bestTag[pos]=score;
      }
    }
  }
  iScore=new double[words.size() + 1][words.size() + 1];
  for (int start=0; start < words.size(); start++) {
    double bestSum=0;
    for (int end=start + 1; end <= words.size(); end++) {
      bestSum+=bestTag[end - 1];
      iScore[start][end]=bestSum;
    }
  }
  oScore=new double[words.size() + 1][words.size() + 1];
  for (int start=0; start < words.size(); start++) {
    for (int end=start + 1; end <= words.size(); end++) {
      oScore[start][end]=iScore[0][words.size()] - iScore[start][end];
    }
  }
}
