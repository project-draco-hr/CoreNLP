{
  Tree startChild=children[0].evaluate(t,tm);
  Tree endChild=(children.length == 2) ? children[1].evaluate(t,tm) : startChild;
  Tree parent=startChild.parent(t);
  if (parent != endChild.parent(t)) {
    throw new TsurgeonRuntimeException("Parents did not match for trees when applied to " + this);
  }
  AuxiliaryTree treeCopy=auxTree.copy(this);
  List<Tree> children=Generics.newArrayList();
  List<Tree> innerChildren=Generics.newArrayList();
  boolean insideSpan=false;
  for (  Tree child : parent.children()) {
    if (child == startChild || child == endChild) {
      if (!insideSpan && startChild != endChild) {
        insideSpan=true;
        innerChildren.add(child);
      }
 else {
        insideSpan=false;
        innerChildren.add(child);
        treeCopy.foot.setChildren(innerChildren);
        children.add(treeCopy.tree);
      }
    }
 else     if (insideSpan) {
      innerChildren.add(child);
    }
 else {
      children.add(child);
    }
  }
  parent.setChildren(children);
  return t;
}
