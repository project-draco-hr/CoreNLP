{
  Tree startChild=children[0].evaluate(t,tm);
  Tree endChild=(children.length == 2) ? children[1].evaluate(t,tm) : startChild;
  Tree parent=startChild.parent(t);
  if (parent != endChild.parent(t)) {
    throw new TsurgeonRuntimeException("Parents did not match for trees when applied to " + this);
  }
  Label label;
  LabelFactory lf=parent.labelFactory();
  if (lf == null) {
    lf=t.labelFactory();
  }
  if (lf == null) {
    label=new CoreLabel();
    label.setValue(newLabel);
  }
 else {
    label=lf.newLabel(newLabel);
  }
  List<Tree> children=Generics.newArrayList();
  List<Tree> innerChildren=Generics.newArrayList();
  boolean insideSpan=false;
  for (  Tree child : parent.children()) {
    if (child == startChild || child == endChild) {
      if (!insideSpan && startChild != endChild) {
        insideSpan=true;
        innerChildren.add(child);
      }
 else {
        insideSpan=false;
        innerChildren.add(child);
        Tree newNode=t.treeFactory().newTreeNode(label,innerChildren);
        children.add(newNode);
      }
    }
 else     if (insideSpan) {
      innerChildren.add(child);
    }
 else {
      children.add(child);
    }
  }
  parent.setChildren(children);
  return t;
}
