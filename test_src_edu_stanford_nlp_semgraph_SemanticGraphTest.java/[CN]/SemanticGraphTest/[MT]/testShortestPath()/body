{
  graph.prettyPrint();
  IndexedWord word1=graph.getNodeByIndex(10);
  IndexedWord word2=graph.getNodeByIndex(14);
  System.out.println("word1: " + word1);
  System.out.println("word1: " + word1.hashCode());
  System.out.println("word2: " + word2);
  System.out.println("word2: " + word2.hashCode());
  System.out.println("word eq: " + word1.equals(word2));
  System.out.println("word eq: " + (word1.hashCode() == word2.hashCode()));
  System.out.println("word eq: " + (word1.toString().equals(word2.toString())));
  List<SemanticGraphEdge> edges=graph.getShortestUndirectedPathEdges(word1,word2);
  System.out.println("path: " + edges);
  assertNotNull(edges);
  List<IndexedWord> nodes=graph.getShortestUndirectedPathNodes(word1,word2);
  System.out.println("path: " + nodes);
  assertNotNull(nodes);
  assertEquals(word1,nodes.get(0));
  assertEquals(word2,nodes.get(nodes.size() - 1));
  edges=graph.getShortestUndirectedPathEdges(word1,word1);
  System.out.println("path: " + edges);
  assertNotNull(edges);
  assertEquals(0,edges.size());
  nodes=graph.getShortestUndirectedPathNodes(word1,word1);
  System.out.println("path: " + nodes);
  assertNotNull(nodes);
  assertEquals(1,nodes.size());
  assertEquals(word1,nodes.get(0));
}
