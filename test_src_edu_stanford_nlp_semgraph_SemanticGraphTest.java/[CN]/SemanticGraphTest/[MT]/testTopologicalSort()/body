{
  SemanticGraph gr=SemanticGraph.valueOf("[ate subj:Bill dobj:[muffins nn:blueberry]]");
  verifyTopologicalSort(gr);
  List<IndexedWord> vertices=gr.vertexListSorted();
  gr.addEdge(vertices.get(1),vertices.get(2),EnglishGrammaticalRelations.DIRECT_OBJECT,1.0,false);
  verifyTopologicalSort(gr);
  gr=SemanticGraph.valueOf("[ate subj:Bill dobj:[muffins nn:blueberry]]");
  vertices=gr.vertexListSorted();
  gr.addEdge(vertices.get(2),vertices.get(1),EnglishGrammaticalRelations.DIRECT_OBJECT,1.0,false);
  verifyTopologicalSort(gr);
  gr=SemanticGraph.valueOf("[ate subj:Bill dobj:[muffins nn:blueberry]]");
  vertices=gr.vertexListSorted();
  gr.addEdge(vertices.get(1),vertices.get(3),EnglishGrammaticalRelations.DIRECT_OBJECT,1.0,false);
  verifyTopologicalSort(gr);
  gr=SemanticGraph.valueOf("[ate subj:Bill dobj:[muffins nn:blueberry]]");
  vertices=gr.vertexListSorted();
  gr.addEdge(vertices.get(3),vertices.get(0),EnglishGrammaticalRelations.DIRECT_OBJECT,1.0,false);
  try {
    verifyTopologicalSort(gr);
    throw new RuntimeException("Expected to fail");
  }
 catch (  IllegalStateException e) {
  }
}
