{
  int parserCnt=0;
  int goldCnt=0;
  int parserUnlabeledCnt=0;
  int goldUnlabeledCnt=0;
  int correctAttachment=0;
  int correctUnlabeledAttachment=0;
  int labelCnt=0;
  int labelCorrect=0;
  ClassicCounter<String> unlabeledErrorCounts=new ClassicCounter<>();
  ClassicCounter<String> labeledErrorCounts=new ClassicCounter<>();
  for (int i=0; i < system.size(); i++) {
    List<Set<TypedDependency>> l=toSets(system.get(i));
    if (ignorePunc) {
      removeHeadsAssignedToPunc(l.get(0));
      removeHeadsAssignedToPunc(l.get(1));
    }
    parserCnt+=l.get(0).size();
    goldCnt+=goldDeps.get(i).size();
    parserUnlabeledCnt+=l.get(1).size();
    goldUnlabeledCnt+=goldDepsUnlabeled.get(i).size();
    l.get(0).retainAll(goldDeps.get(i));
    l.get(1).retainAll(goldDepsUnlabeled.get(i));
    correctAttachment+=l.get(0).size();
    correctUnlabeledAttachment+=l.get(1).size();
    labelCnt+=l.get(1).size();
    labelCorrect+=l.get(0).size();
    List<Set<TypedDependency>> errl=toSets(system.get(i));
    errl.get(0).removeAll(goldDeps.get(i));
    errl.get(1).removeAll(goldDepsUnlabeled.get(i));
    Map<String,String> childCorrectWithLabel=Generics.newHashMap();
    Map<String,String> childCorrectWithOutLabel=Generics.newHashMap();
    for (    TypedDependency goldDep : goldDeps.get(i)) {
      String sChild=goldDep.dep().toString().replaceFirst("-[^-]*$","");
      String prefixLabeled="";
      String prefixUnlabeled="";
      if (childCorrectWithLabel.containsKey(sChild)) {
        prefixLabeled=childCorrectWithLabel.get(sChild) + ", ";
        prefixUnlabeled=childCorrectWithOutLabel.get(sChild) + ", ";
      }
      childCorrectWithLabel.put(sChild,prefixLabeled + goldDep.reln() + "("+ goldDep.gov().toString().replaceFirst("-[^-]*$","")+ ", "+ sChild+ ")");
      childCorrectWithOutLabel.put(sChild,prefixUnlabeled + "dep(" + goldDep.gov().toString().replaceFirst("-[^-]*$","")+ ", "+ sChild+ ")");
    }
    for (    TypedDependency labeledError : errl.get(0)) {
      String sChild=labeledError.dep().toString().replaceFirst("-[^-]*$","");
      String sGov=labeledError.gov().toString().replaceFirst("-[^-]*$","");
      labeledErrorCounts.incrementCount(labeledError.reln().toString() + "(" + sGov+ ", "+ sChild+ ") <= "+ childCorrectWithLabel.get(sChild));
    }
    for (    TypedDependency unlabeledError : errl.get(1)) {
      String sChild=unlabeledError.dep().toString().replaceFirst("-[^-]*$","");
      String sGov=unlabeledError.gov().toString().replaceFirst("-[^-]*$","");
      unlabeledErrorCounts.incrementCount("dep(" + sGov + ", "+ sChild+ ") <= "+ childCorrectWithOutLabel.get(sChild));
    }
  }
  return new Score(parserCnt,goldCnt,parserUnlabeledCnt,goldUnlabeledCnt,correctAttachment,correctUnlabeledAttachment,labelCnt,labelCorrect,labeledErrorCounts,unlabeledErrorCounts);
}
