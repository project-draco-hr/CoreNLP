{
  List<Interval<Integer>> matched=new ArrayList<Interval<Integer>>();
  int minEnd=start + minNodes;
  int maxEnd=nodes.size();
  if (maxNodes >= 0 && maxNodes + start < nodes.size()) {
    maxEnd=maxNodes + start;
  }
  for (int end=minEnd; end <= maxEnd; end++) {
    CoreMap chunk=ChunkAnnotationUtils.getMergedChunk(nodes,start,end,aggregators,null);
    if (nodePattern.match(chunk)) {
      matched.add(Interval.toInterval(start,end));
    }
  }
  return matched;
}
