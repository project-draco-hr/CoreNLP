{
  boolean printing=true;
  int i;
  for (i=start; i < start + length; i++) {
switch (ch[i]) {
case '[':
      printing=false;
    break;
case ']':
  printing=true;
break;
case '\\':
break;
default :
if (!printing) {
continue;
}
if (Character.isWhitespace(ch[i])) {
commitCurrent();
break;
}
if (!printing) {
break;
}
if (Character.isLetterOrDigit(ch[i]) || ch[i] == '-' || ch[i] == '\'') {
currentString+=ch[i];
}
 else if (ch[i] == '_') {
currentString+='-';
}
 else {
commitCurrent();
if (!justSawSpecialChar) {
context.add(Character.toString(ch[i]));
}
}
justSawSpecialChar=false;
break;
}
}
if (i < ch.length && ch[i] == '&') {
String specString=new String("");
while (i < ch.length && ch[i] != ';') {
specString+=ch[i++];
}
specString+=';';
if (specString.matches(".*grave;") || specString.matches(".*acute;") || specString.matches(".*circ;")|| specString.matches(".*tilde;")|| specString.matches(".*uml;")|| specString.matches(".*ring;")|| specString.matches(".*slash;")|| specString.matches(".*strok;")|| specString.matches(".*thorn;")|| specString.matches(".*THORN;")|| specString.matches(".*dot;")|| specString.matches(".*breve;")|| specString.matches(".*macr;")|| specString.matches(".*ogon;")|| specString.matches(".*caron;")|| specString.matches(".*dblac;")|| specString.matches(".*green;")|| specString.matches(".*eng;")|| specString.matches(".*lig;")|| specString.matches(".*cedil;")) {
currentString+=specString;
}
 else {
commitCurrent();
currentString=specString;
commitCurrent();
}
justSawSpecialChar=true;
}
 else {
if (!justSawSpecialChar) {
commitCurrent();
}
}
}
