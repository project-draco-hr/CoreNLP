{
  Mention m1=document.predictedMentionsByID.get(pair.first);
  Mention m2=document.predictedMentionsByID.get(pair.second);
  List<Integer> featureVals=pairwiseFeatures(document,m1,m2,dictionaries,conll);
  SimpleMatrix features=new SimpleMatrix(featureVals.size(),1);
  for (int i=0; i < featureVals.size(); i++) {
    features.set(i,featureVals.get(i));
  }
  features=NeuralUtils.concatenate(features,encodeDistance(m2.sentNum - m1.sentNum),encodeDistance(m2.mentionNum - m1.mentionNum - 1),new SimpleMatrix(new double[][]{{m1.sentNum == m2.sentNum && m1.endIndex > m2.startIndex ? 1 : 0}}),getMentionFeatures(m1,document,mentionsByHeadIndex),getMentionFeatures(m2,document,mentionsByHeadIndex),encodeGenre(document));
  return features;
}
