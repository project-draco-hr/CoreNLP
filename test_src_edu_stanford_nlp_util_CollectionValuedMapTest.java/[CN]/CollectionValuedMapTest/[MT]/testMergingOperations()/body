{
  CollectionValuedMap<String,Integer> cvm=new CollectionValuedMap<String,Integer>();
  cvm.add("key1",1);
  cvm.add("key2",2);
  cvm.add("key3",3);
  Map<String,Integer> map=new HashMap<String,Integer>();
  map.put("key1",1);
  map.put("key2",2);
  map.put("key3",3);
  CollectionValuedMap<String,Integer> cvmFromMap=new CollectionValuedMap<String,Integer>();
  cvmFromMap.addAll(map);
  Assert.assertEquals(cvm,cvmFromMap);
  CollectionValuedMap<String,Integer> cvmFromCvm=new CollectionValuedMap<String,Integer>(cvm);
  Assert.assertEquals(cvm,cvmFromCvm);
  CollectionValuedMap<String,Integer> cvmFromClone=cvm.clone();
  Assert.assertEquals(cvm,cvmFromClone);
  CollectionValuedMap<String,Integer> cvmToMerge=new CollectionValuedMap<String,Integer>();
  cvmToMerge.add("key1",11);
  cvmToMerge.add("key5",55);
  Assert.assertFalse(cvmToMerge.equals(cvm));
  cvm.addAll(cvmToMerge);
  CollectionValuedMap<String,Integer> expectedMerge=new CollectionValuedMap<String,Integer>();
  expectedMerge.add("key1",1);
  expectedMerge.add("key1",11);
  expectedMerge.add("key2",2);
  expectedMerge.add("key3",3);
  expectedMerge.add("key5",55);
  Assert.assertEquals(cvm,expectedMerge);
}
