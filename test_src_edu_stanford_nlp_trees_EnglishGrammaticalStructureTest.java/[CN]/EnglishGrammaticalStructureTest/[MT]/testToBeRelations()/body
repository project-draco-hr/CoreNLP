{
  String[] testTrees={"(ROOT (S (NP (NNP Sue)) (VP (VBZ is) (VP (VBG speaking))) (. .)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is)  (VP (VBG speaking))) (. ?)))","(ROOT (S (VP (VB Be) (ADJP (JJ honest))) (. .)))","(ROOT (SBARQ (WHNP (WP What) ) (SQ (VBZ is) (NP (PRP he) ) (VP (VBG doing)))))","(ROOT (SBARQ (WHNP (WP What) ) (SQ (VBP am) (NP (PRP I) ) (VP (VBG doing) (PP (IN in) (NP (NNP Jackson) (NNP Hole) )))) (. ?) ))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP am) (NP (PRP I)) (S (VP (TO to) (VP (VB judge))))) (. ?)))","(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))","(ROOT (SBARQ (WHNP (WP What) (NN dignity) ) (SQ (VBZ is) (NP (EX there)) (PP (IN in) (NP (DT that) ))) (. ?)))","(ROOT (S (NP (NN Hand-holding) ) (VP (VBZ is) (VP (VBG becoming) (NP (DT an) (NN investment-banking) (NN job) (NN requirement) ))) (. .) ))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (ADJP (JJ wrong) (PP (IN with) (S (VP (VBG expecting) (NP (NN pizza))))))) (. ?)))","(ROOT (SBARQ (WHNP (WP Who) ) (SQ (VBZ is) (VP (VBG going) (S (VP (TO to) (VP (VB carry) (NP (DT the) (NN water) )))))) (. ?)))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP am) (NP (PRP I)) (VP (VBG doing) (S (VP (VBG dating) (NP (PRP her)))))) (. ?)))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT that))) (. ?)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NNP John))) (. ?)))","(ROOT (SBARQ (WHNP (WDT What) (NN dog)) (SQ (VP (VBZ is) (VP (VBG barking) (ADVP (RB so) (RB loudly))))) (. ?)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ is) (VP (VBG barking) (ADVP (RB so) (RB much))))) (. ?)))","(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ is) (NP (NNP Dave)) (VP (VBG becoming) (NP (DT a) (NN problem)))) (. ?)))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NNP UAL) (NN stock) ) (ADJP (NN worth) )) (. ?)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP am) (NP (PRP I)) ) (. ?)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD told) (NP (PRP him)))) (. ?)))","(ROOT (S (NP (NNP Sue)) (VP (VBZ is) (NP (DT a) (NN lawyer))) (. .)))","(ROOT (S (NP (NNP Sue)) (VP (VBZ is) (ADJP (JJ intelligent))) (. .)))","(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (ADJP (JJ nervous))) (. ?)))","(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN cow))) (PP (IN in) (NP (DT the) (NN field)))) (. .)))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (EX there)) (PP (IN in) (NP (DT the) (NN field)))) (. ?)))","(ROOT (SINV (ADVP (RB Here)) (VP (VBP are)) (NP (DT some) (NNS bags))))","(ROOT (S (NP (PRP He)) (VP (VBZ is) (PP (IN in) (NP (DT the) (NN garden))))))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ 's) (PP (IN on) (NP (DT the) (NN test)))) (. ?)))","(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ is) (NP (DT the) (NN dog)) (ADJP (JJ pink))) (. ?)))","(ROOT (S (NP (DT The) (NN dog)) (VP (VBZ is) (ADJP (JJ pink))) (. .)))","(ROOT (SBARQ (WHNP (WDT What) (NN disease)) (SQ (VP (VBZ causes) (NP (NN pain)))) (. ?)))","(ROOT (SBARQ (WHNP (WDT What) (NN disease)) (SQ (VBZ causes) (NP (NN pain))) (. ?)))","(ROOT (S (VP (VB Be) (VP (VBG waiting) (PP (IN in) (NP (NN line))) (PP-TMP (IN at) (NP (CD 3) (NN p.m.))))) (. !)))","(ROOT (S (VP (VB Be) (NP (DT a) (NN man))) (. !)))","(ROOT (SBARQ (RB So) (WHNP (WP what)) (SQ (VBZ is) (NP (NNP Santa) (NNP Fe) ) (ADJP (IN worth) )) (. ?) ))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (PRP$ your) (NN sister) (POS 's)) (NN name))) (. ?)))","(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN fear)) (PP (IN of) (NP (NNS cockroaches)))) (VP (VBN called))) (. ?)))"};
  String[] basicAnswers={"nsubj(speaking-3, Sue-1)\n" + "aux(speaking-3, is-2)\n" + "root(ROOT-0, speaking-3)\n","nsubj(speaking-3, Who-1)\n" + "aux(speaking-3, is-2)\n" + "root(ROOT-0, speaking-3)\n","cop(honest-2, Be-1)\n" + "root(ROOT-0, honest-2)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, is-2)\n" + "nsubj(doing-4, he-3)\n"+ "root(ROOT-0, doing-4)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, am-2)\n" + "nsubj(doing-4, I-3)\n"+ "root(ROOT-0, doing-4)\n"+ "prep(doing-4, in-5)\n"+ "nn(Hole-7, Jackson-6)\n"+ "pobj(in-5, Hole-7)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, am-2)\n" + "nsubj(Who-1, I-3)\n"+ "aux(judge-5, to-4)\n"+ "vmod(Who-1, judge-5)\n","nsubj(man-5, Bill-1)\n" + "cop(man-5, is-2)\n" + "det(man-5, an-3)\n"+ "amod(man-5, honest-4)\n"+ "root(ROOT-0, man-5)\n","det(dignity-2, What-1)\n" + "nsubj(is-3, dignity-2)\n" + "root(ROOT-0, is-3)\n"+ "expl(is-3, there-4)\n"+ "prep(is-3, in-5)\n"+ "pobj(in-5, that-6)\n","nsubj(becoming-3, Hand-holding-1)\n" + "aux(becoming-3, is-2)\n" + "root(ROOT-0, becoming-3)\n"+ "det(requirement-7, an-4)\n"+ "nn(requirement-7, investment-banking-5)\n"+ "nn(requirement-7, job-6)\n"+ "xcomp(becoming-3, requirement-7)\n","nsubj(wrong-3, What-1)\n" + "cop(wrong-3, is-2)\n" + "root(ROOT-0, wrong-3)\n"+ "prep(wrong-3, with-4)\n"+ "pcomp(with-4, expecting-5)\n"+ "dobj(expecting-5, pizza-6)\n","nsubj(going-3, Who-1)\n" + "aux(going-3, is-2)\n" + "root(ROOT-0, going-3)\n"+ "aux(carry-5, to-4)\n"+ "xcomp(going-3, carry-5)\n"+ "det(water-7, the-6)\n"+ "dobj(carry-5, water-7)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, am-2)\n" + "nsubj(doing-4, I-3)\n"+ "root(ROOT-0, doing-4)\n"+ "vmod(doing-4, dating-5)\n"+ "dobj(dating-5, her-6)\n","root(ROOT-0, What-1)\n" + "cop(What-1, is-2)\n" + "nsubj(What-1, that-3)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, is-2)\n" + "nsubj(Who-1, John-3)\n","det(dog-2, What-1)\n" + "nsubj(barking-4, dog-2)\n" + "aux(barking-4, is-3)\n"+ "root(ROOT-0, barking-4)\n"+ "advmod(loudly-6, so-5)\n"+ "advmod(barking-4, loudly-6)\n","nsubj(barking-3, Who-1)\n" + "aux(barking-3, is-2)\n" + "root(ROOT-0, barking-3)\n"+ "advmod(much-5, so-4)\n"+ "advmod(barking-3, much-5)\n","advmod(becoming-4, Why-1)\n" + "aux(becoming-4, is-2)\n" + "nsubj(becoming-4, Dave-3)\n"+ "root(ROOT-0, becoming-4)\n"+ "det(problem-6, a-5)\n"+ "xcomp(becoming-4, problem-6)\n","dobj(worth-5, What-1)\n" + "cop(worth-5, is-2)\n" + "nn(stock-4, UAL-3)\n"+ "nsubj(worth-5, stock-4)\n"+ "root(ROOT-0, worth-5)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, am-2)\n" + "nsubj(Who-1, I-3)\n","nsubj(told-2, Who-1)\n" + "root(ROOT-0, told-2)\n" + "dobj(told-2, him-3)\n","nsubj(lawyer-4, Sue-1)\n" + "cop(lawyer-4, is-2)\n" + "det(lawyer-4, a-3)\n"+ "root(ROOT-0, lawyer-4)\n","nsubj(intelligent-3, Sue-1)\n" + "cop(intelligent-3, is-2)\n" + "root(ROOT-0, intelligent-3)\n","nsubj(nervous-3, Who-1)\n" + "cop(nervous-3, is-2)\n" + "root(ROOT-0, nervous-3)\n","expl(is-2, There-1)\n" + "root(ROOT-0, is-2)\n" + "det(cow-4, a-3)\n"+ "nsubj(is-2, cow-4)\n"+ "prep(is-2, in-5)\n"+ "det(field-7, the-6)\n"+ "pobj(in-5, field-7)\n","nsubj(is-2, What-1)\n" + "root(ROOT-0, is-2)\n" + "expl(is-2, there-3)\n"+ "prep(is-2, in-4)\n"+ "det(field-6, the-5)\n"+ "pobj(in-4, field-6)\n","advmod(are-2, Here-1)\n" + "root(ROOT-0, are-2)\n" + "det(bags-4, some-3)\n"+ "nsubj(are-2, bags-4)\n","nsubj(is-2, He-1)\n" + "root(ROOT-0, is-2)\n" + "prep(is-2, in-3)\n"+ "det(garden-5, the-4)\n"+ "pobj(in-3, garden-5)\n","nsubj('s-2, What-1)\n" + "root(ROOT-0, 's-2)\n" + "prep('s-2, on-3)\n"+ "det(test-5, the-4)\n"+ "pobj(on-3, test-5)\n","advmod(pink-5, Why-1)\n" + "cop(pink-5, is-2)\n" + "det(dog-4, the-3)\n"+ "nsubj(pink-5, dog-4)\n"+ "root(ROOT-0, pink-5)\n","det(dog-2, The-1)\n" + "nsubj(pink-4, dog-2)\n" + "cop(pink-4, is-3)\n"+ "root(ROOT-0, pink-4)\n","det(disease-2, What-1)\n" + "nsubj(causes-3, disease-2)\n" + "root(ROOT-0, causes-3)\n"+ "dobj(causes-3, pain-4)\n","det(disease-2, What-1)\n" + "nsubj(causes-3, disease-2)\n" + "root(ROOT-0, causes-3)\n"+ "dobj(causes-3, pain-4)\n","aux(waiting-2, Be-1)\n" + "root(ROOT-0, waiting-2)\n" + "prep(waiting-2, in-3)\n"+ "pobj(in-3, line-4)\n"+ "prep(waiting-2, at-5)\n"+ "num(p.m.-7, 3-6)\n"+ "pobj(at-5, p.m.-7)\n","cop(man-3, Be-1)\n" + "det(man-3, a-2)\n" + "root(ROOT-0, man-3)\n","advmod(worth-6, So-1)\n" + "dobj(worth-6, what-2)\n" + "cop(worth-6, is-3)\n"+ "nn(Fe-5, Santa-4)\n"+ "nsubj(worth-6, Fe-5)\n"+ "root(ROOT-0, worth-6)\n","root(ROOT-0, What-1)\n" + "cop(What-1, is-2)\n" + "poss(sister-4, your-3)\n"+ "poss(name-6, sister-4)\n"+ "possessive(sister-4, 's-5)\n"+ "nsubj(What-1, name-6)\n","dobj(called-7, What-1)\n" + "auxpass(called-7, is-2)\n" + "det(fear-4, the-3)\n"+ "nsubjpass(called-7, fear-4)\n"+ "prep(fear-4, of-5)\n"+ "pobj(of-5, cockroaches-6)\n"+ "root(ROOT-0, called-7)\n"};
  String[] noncollapsedAnswers={"nsubj(speaking-3, Sue-1)\n" + "aux(speaking-3, is-2)\n" + "root(ROOT-0, speaking-3)\n","nsubj(speaking-3, Who-1)\n" + "aux(speaking-3, is-2)\n" + "root(ROOT-0, speaking-3)\n","cop(honest-2, Be-1)\n" + "root(ROOT-0, honest-2)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, is-2)\n" + "nsubj(doing-4, he-3)\n"+ "root(ROOT-0, doing-4)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, am-2)\n" + "nsubj(doing-4, I-3)\n"+ "root(ROOT-0, doing-4)\n"+ "prep(doing-4, in-5)\n"+ "nn(Hole-7, Jackson-6)\n"+ "pobj(in-5, Hole-7)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, am-2)\n" + "nsubj(Who-1, I-3)\n"+ "aux(judge-5, to-4)\n"+ "vmod(Who-1, judge-5)\n","nsubj(man-5, Bill-1)\n" + "cop(man-5, is-2)\n" + "det(man-5, an-3)\n"+ "amod(man-5, honest-4)\n"+ "root(ROOT-0, man-5)\n","det(dignity-2, What-1)\n" + "nsubj(is-3, dignity-2)\n" + "root(ROOT-0, is-3)\n"+ "expl(is-3, there-4)\n"+ "prep(is-3, in-5)\n"+ "pobj(in-5, that-6)\n","nsubj(becoming-3, Hand-holding-1)\n" + "aux(becoming-3, is-2)\n" + "root(ROOT-0, becoming-3)\n"+ "det(requirement-7, an-4)\n"+ "nn(requirement-7, investment-banking-5)\n"+ "nn(requirement-7, job-6)\n"+ "xcomp(becoming-3, requirement-7)\n","nsubj(wrong-3, What-1)\n" + "cop(wrong-3, is-2)\n" + "root(ROOT-0, wrong-3)\n"+ "prep(wrong-3, with-4)\n"+ "pcomp(with-4, expecting-5)\n"+ "dobj(expecting-5, pizza-6)\n","nsubj(going-3, Who-1)\n" + "nsubj(carry-5, Who-1)\n" + "aux(going-3, is-2)\n"+ "root(ROOT-0, going-3)\n"+ "aux(carry-5, to-4)\n"+ "xcomp(going-3, carry-5)\n"+ "det(water-7, the-6)\n"+ "dobj(carry-5, water-7)\n","dobj(doing-4, What-1)\n" + "aux(doing-4, am-2)\n" + "nsubj(doing-4, I-3)\n"+ "root(ROOT-0, doing-4)\n"+ "vmod(doing-4, dating-5)\n"+ "dobj(dating-5, her-6)\n","root(ROOT-0, What-1)\n" + "cop(What-1, is-2)\n" + "nsubj(What-1, that-3)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, is-2)\n" + "nsubj(Who-1, John-3)\n","det(dog-2, What-1)\n" + "nsubj(barking-4, dog-2)\n" + "aux(barking-4, is-3)\n"+ "root(ROOT-0, barking-4)\n"+ "advmod(loudly-6, so-5)\n"+ "advmod(barking-4, loudly-6)\n","nsubj(barking-3, Who-1)\n" + "aux(barking-3, is-2)\n" + "root(ROOT-0, barking-3)\n"+ "advmod(much-5, so-4)\n"+ "advmod(barking-3, much-5)\n","advmod(becoming-4, Why-1)\n" + "aux(becoming-4, is-2)\n" + "nsubj(becoming-4, Dave-3)\n"+ "root(ROOT-0, becoming-4)\n"+ "det(problem-6, a-5)\n"+ "xcomp(becoming-4, problem-6)\n","dobj(worth-5, What-1)\n" + "cop(worth-5, is-2)\n" + "nn(stock-4, UAL-3)\n"+ "nsubj(worth-5, stock-4)\n"+ "root(ROOT-0, worth-5)\n","root(ROOT-0, Who-1)\n" + "cop(Who-1, am-2)\n" + "nsubj(Who-1, I-3)\n","nsubj(told-2, Who-1)\n" + "root(ROOT-0, told-2)\n" + "dobj(told-2, him-3)\n","nsubj(lawyer-4, Sue-1)\n" + "cop(lawyer-4, is-2)\n" + "det(lawyer-4, a-3)\n"+ "root(ROOT-0, lawyer-4)\n","nsubj(intelligent-3, Sue-1)\n" + "cop(intelligent-3, is-2)\n" + "root(ROOT-0, intelligent-3)\n","nsubj(nervous-3, Who-1)\n" + "cop(nervous-3, is-2)\n" + "root(ROOT-0, nervous-3)\n","expl(is-2, There-1)\n" + "root(ROOT-0, is-2)\n" + "det(cow-4, a-3)\n"+ "nsubj(is-2, cow-4)\n"+ "prep(is-2, in-5)\n"+ "det(field-7, the-6)\n"+ "pobj(in-5, field-7)\n","nsubj(is-2, What-1)\n" + "root(ROOT-0, is-2)\n" + "expl(is-2, there-3)\n"+ "prep(is-2, in-4)\n"+ "det(field-6, the-5)\n"+ "pobj(in-4, field-6)\n","advmod(are-2, Here-1)\n" + "root(ROOT-0, are-2)\n" + "det(bags-4, some-3)\n"+ "nsubj(are-2, bags-4)\n","nsubj(is-2, He-1)\n" + "root(ROOT-0, is-2)\n" + "prep(is-2, in-3)\n"+ "det(garden-5, the-4)\n"+ "pobj(in-3, garden-5)\n","nsubj('s-2, What-1)\n" + "root(ROOT-0, 's-2)\n" + "prep('s-2, on-3)\n"+ "det(test-5, the-4)\n"+ "pobj(on-3, test-5)\n","advmod(pink-5, Why-1)\n" + "cop(pink-5, is-2)\n" + "det(dog-4, the-3)\n"+ "nsubj(pink-5, dog-4)\n"+ "root(ROOT-0, pink-5)\n","det(dog-2, The-1)\n" + "nsubj(pink-4, dog-2)\n" + "cop(pink-4, is-3)\n"+ "root(ROOT-0, pink-4)\n","det(disease-2, What-1)\n" + "nsubj(causes-3, disease-2)\n" + "root(ROOT-0, causes-3)\n"+ "dobj(causes-3, pain-4)\n","det(disease-2, What-1)\n" + "nsubj(causes-3, disease-2)\n" + "root(ROOT-0, causes-3)\n"+ "dobj(causes-3, pain-4)\n","aux(waiting-2, Be-1)\n" + "root(ROOT-0, waiting-2)\n" + "prep(waiting-2, in-3)\n"+ "pobj(in-3, line-4)\n"+ "prep(waiting-2, at-5)\n"+ "num(p.m.-7, 3-6)\n"+ "pobj(at-5, p.m.-7)\n","cop(man-3, Be-1)\n" + "det(man-3, a-2)\n" + "root(ROOT-0, man-3)\n","advmod(worth-6, So-1)\n" + "dobj(worth-6, what-2)\n" + "cop(worth-6, is-3)\n"+ "nn(Fe-5, Santa-4)\n"+ "nsubj(worth-6, Fe-5)\n"+ "root(ROOT-0, worth-6)\n","root(ROOT-0, What-1)\n" + "cop(What-1, is-2)\n" + "poss(sister-4, your-3)\n"+ "poss(name-6, sister-4)\n"+ "possessive(sister-4, 's-5)\n"+ "nsubj(What-1, name-6)\n","dobj(called-7, What-1)\n" + "auxpass(called-7, is-2)\n" + "det(fear-4, the-3)\n"+ "nsubjpass(called-7, fear-4)\n"+ "prep(fear-4, of-5)\n"+ "pobj(of-5, cockroaches-6)\n"+ "root(ROOT-0, called-7)\n"};
  assertEquals("Test array and basic answer array lengths mismatch!",testTrees.length,basicAnswers.length);
  assertEquals("Test array and noncollapsed answer array lengths mismatch!",testTrees.length,noncollapsedAnswers.length);
  TreeReaderFactory trf=new NPTmpRetainingTreeNormalizer.NPTmpAdvRetainingTreeReaderFactory();
  for (int i=0; i < testTrees.length; i++) {
    String testTree=testTrees[i];
    String basicAnswer=basicAnswers[i];
    String noncollapsedAnswer=noncollapsedAnswers[i];
    Tree tree=Tree.valueOf(testTree,trf);
    GrammaticalStructure gs=new EnglishGrammaticalStructure(tree);
    assertEquals("Unexpected basic dependencies for tree " + testTree,basicAnswer,EnglishGrammaticalStructure.dependenciesToString(gs,gs.typedDependencies(false),tree,false,false));
    assertEquals("Unexpected noncollapsed dependencies for tree " + testTree,noncollapsedAnswer,EnglishGrammaticalStructure.dependenciesToString(gs,gs.typedDependencies(true),tree,false,false));
  }
}
