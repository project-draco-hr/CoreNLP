{
  if (VERBOSE) {
    System.err.print("Sentence splitting ...");
  }
  if (annotation.has(CoreAnnotations.TokensAnnotation.class)) {
    String text=annotation.get(CoreAnnotations.TextAnnotation.class);
    List<CoreLabel> tokens=annotation.get(CoreAnnotations.TokensAnnotation.class);
    int tokenOffset=0;
    List<CoreMap> sentences=new ArrayList<CoreMap>();
    for (    List<CoreLabel> sentenceTokens : this.wts.process(tokens)) {
      if (sentenceTokens.isEmpty()) {
        throw new RuntimeException("unexpected empty sentence: " + sentenceTokens);
      }
      int begin=sentenceTokens.get(0).get(CharacterOffsetBeginAnnotation.class);
      int last=sentenceTokens.size() - 1;
      int end=sentenceTokens.get(last).get(CharacterOffsetEndAnnotation.class);
      String sentenceText=text.substring(begin,end);
      Annotation sentence=new Annotation(sentenceText);
      sentence.set(CharacterOffsetBeginAnnotation.class,begin);
      sentence.set(CharacterOffsetEndAnnotation.class,end);
      sentence.set(CoreAnnotations.TokensAnnotation.class,sentenceTokens);
      sentence.set(CoreAnnotations.TokenBeginAnnotation.class,tokenOffset);
      tokenOffset+=sentenceTokens.size();
      sentence.set(CoreAnnotations.TokenEndAnnotation.class,tokenOffset);
      sentences.add(sentence);
    }
    annotation.set(CoreAnnotations.SentencesAnnotation.class,sentences);
  }
 else {
    throw new RuntimeException("unable to find words/tokens in: " + annotation);
  }
}
