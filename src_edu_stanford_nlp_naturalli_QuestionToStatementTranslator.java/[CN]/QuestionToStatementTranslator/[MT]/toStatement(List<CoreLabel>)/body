{
  TokenSequenceMatcher matcher;
  if ((matcher=triggerWhatIsThere.matcher(question)).matches()) {
    return Collections.singletonList(processWhatIsThere(matcher));
  }
 else   if ((matcher=triggerWhNNIs.matcher(question)).matches()) {
    return Collections.singletonList(processWhNNIs(matcher));
  }
 else   if ((matcher=triggerWhNNHave.matcher(question)).matches()) {
    return Collections.singletonList(processWhNNHave(matcher));
  }
 else   if ((matcher=triggerWhNNHaveNN.matcher(question)).matches()) {
    return Collections.singletonList(processWhNNHaveNN(matcher));
  }
 else   if ((matcher=triggerWhatIs.matcher(question)).matches()) {
    return Collections.singletonList(processWhatIs(matcher));
  }
 else   if ((matcher=triggerWhatHave.matcher(question)).matches()) {
    return Collections.singletonList(processWhatHave(matcher));
  }
 else   if ((matcher=triggerWhereDo.matcher(question)).matches()) {
    return Collections.singletonList(processWhereDo(matcher));
  }
 else   if ((matcher=triggerWhereIs.matcher(question)).matches()) {
    return Collections.singletonList(processWhereIs(matcher));
  }
 else   if ((matcher=triggerWhoIs.matcher(question)).matches()) {
    return Collections.singletonList(processWhoIs(matcher));
  }
 else   if ((matcher=triggerWhoDid.matcher(question)).matches()) {
    return Collections.singletonList(processWhoDid(matcher));
  }
 else   if ((matcher=triggerWhatDo.matcher(question)).matches()) {
    return Collections.singletonList(processWhatDo(matcher));
  }
 else   if ((matcher=triggerWhenDo.matcher(question)).matches()) {
    return Collections.singletonList(processWhenDo(matcher));
  }
 else {
    return Collections.emptyList();
  }
}
