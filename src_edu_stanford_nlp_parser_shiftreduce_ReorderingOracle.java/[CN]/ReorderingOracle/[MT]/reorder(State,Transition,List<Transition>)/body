{
  if (transitions.size() == 0) {
    throw new AssertionError();
  }
  Transition goldTransition=transitions.get(0);
  if (chosenTransition.equals(goldTransition)) {
    transitions.remove(0);
    return true;
  }
  if ((goldTransition instanceof UnaryTransition) || (goldTransition instanceof CompoundUnaryTransition)) {
    transitions.remove(0);
    return reorder(state,chosenTransition,transitions);
  }
  if ((chosenTransition instanceof UnaryTransition) || (chosenTransition instanceof CompoundUnaryTransition)) {
    if (state.transitions.size() > 0) {
      Transition previous=state.transitions.peek();
      if ((previous instanceof UnaryTransition) || (previous instanceof CompoundUnaryTransition)) {
        return false;
      }
    }
    if (state.stack.size() == 0) {
      return false;
    }
    return true;
  }
  if (chosenTransition instanceof BinaryTransition) {
    if (state.stack.size() < 2) {
      return false;
    }
    if (goldTransition instanceof ShiftTransition) {
      return op.trainOptions().oracleBinaryToShift && reorderIncorrectBinaryTransition(transitions);
    }
    if (!(goldTransition instanceof BinaryTransition)) {
      return false;
    }
    BinaryTransition chosenBinary=(BinaryTransition)chosenTransition;
    BinaryTransition goldBinary=(BinaryTransition)goldTransition;
    if (chosenBinary.isBinarized()) {
      if (goldBinary.isBinarized() && chosenBinary.label.equals(goldBinary.label)) {
        transitions.remove(0);
        return true;
      }
 else {
        return false;
      }
    }
    transitions.remove(0);
    return true;
  }
  if ((chosenTransition instanceof ShiftTransition) && (goldTransition instanceof BinaryTransition)) {
    if (state.endOfQueue()) {
      return false;
    }
    BinaryTransition goldBinary=(BinaryTransition)goldTransition;
    if (!goldBinary.isBinarized()) {
      return op.trainOptions().oracleShiftToBinary && reorderIncorrectShiftTransition(transitions);
    }
  }
  return false;
}
