{
  int commas=0;
  String mentionSpanString=spanToString();
  String subTreeSpanString=StringUtils.joinWords(mentionSubTree.yieldWords()," ");
  if (subTreeSpanString.equals(mentionSpanString)) {
    List<Tree> children=mentionSubTree.getChildrenAsList();
    for (    Tree t : children) {
      String label=t.value();
      String ner=null;
      if (t.isLeaf()) {
        ner=((CoreLabel)t.getLeaves().get(0).label()).ner();
      }
      if ("CC".equals(label)) {
        if (ner == null || "O".equals(ner)) {
          return true;
        }
      }
 else       if (label.equals(",")) {
        if (ner == null || "O".equals(ner)) {
          commas++;
        }
      }
    }
  }
  if (commas <= 2) {
    boolean first=true;
    for (    CoreLabel t : originalSpan) {
      String tag=t.tag();
      String ner=t.ner();
      String w=t.word();
      if (tag.equals("TO") || tag.equals("IN") || tag.startsWith("VB")) {
        return false;
      }
      if (!first) {
        if (w.equalsIgnoreCase("and") || w.equalsIgnoreCase("or")) {
          if (ner == null || "O".equals(ner)) {
            return true;
          }
        }
      }
      first=false;
    }
  }
  return (commas > 2);
}
