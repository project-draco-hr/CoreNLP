{
  if (args.length == 0) {
    System.err.println("usage: SentenceProbabilityParser serializedPCFG [testSentences [numGenerate]]");
  }
  SentenceProbabilityParser spparser=new SentenceProbabilityParser(args[0]);
  int numGenerate=2;
  if (args.length > 2) {
    numGenerate=Integer.parseInt(args[2]);
  }
  if (args.length > 1) {
    BufferedReader trainFile=new BufferedReader(new FileReader(args[1]));
    String sentenceLine;
    List<Sampler<Tree>> samplers=new ArrayList<Sampler<Tree>>();
    while ((sentenceLine=trainFile.readLine()) != null) {
      List allWordsCopy=PTBTokenizer.newPTBTokenizer(new StringReader(sentenceLine)).tokenize();
      List allWords=new ArrayList(allWordsCopy);
      System.err.println("Parsing [len. " + allWords.size() + "]: "+ (Sentence.listToString(allWords)));
      allWords.add(Lexicon.BOUNDARY);
      try {
        boolean parsed=spparser.parse(allWords);
        System.out.println("Parsed: " + parsed);
        float score=spparser.getSentenceProbability();
        System.out.println("Score: " + score);
        Sampler<Tree> sampler=spparser.getSampler(allWords);
        samplers.add(sampler);
      }
 catch (      UnsupportedOperationException uoe) {
        System.err.println("Whoops, sentence too long.");
      }
    }
    for (int i=0; i < numGenerate; i++) {
      for (      Sampler<Tree> s : samplers) {
        s.drawSample().pennPrint();
      }
    }
  }
 else {
    List<Sampler<Tree>> samplers=new ArrayList<Sampler<Tree>>();
    List<CoreLabel> taggedSent=new ArrayList<CoreLabel>();
    CoreLabel fl=new CoreLabel();
    fl.setWord("Phil");
    fl.setTag("NNP");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord("Wittman");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord("works");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord("for");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord("Tom");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord("Benson");
    taggedSent.add(fl);
    fl=new CoreLabel();
    fl.setWord(".");
    fl.setTag(".");
    taggedSent.add(fl);
    boolean parsed=spparser.parse(taggedSent);
    System.out.println("Parsed: " + parsed);
    float score=spparser.getSentenceProbability();
    System.out.println("Score: " + score);
    Sampler<Tree> sampler=spparser.getSampler(taggedSent);
    samplers.add(sampler);
    for (int i=0; i < numGenerate; i++) {
      for (      Sampler<Tree> s : samplers) {
        s.drawSample().pennPrint();
      }
    }
  }
}
