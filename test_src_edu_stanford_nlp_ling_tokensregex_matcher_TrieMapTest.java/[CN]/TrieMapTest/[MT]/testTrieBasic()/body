{
  TrieMap<String,Boolean> trieMap=new TrieMap<String,Boolean>();
  trieMap.put(new String[]{"a","white","cat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","white","hat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","black","cat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","black","cat","climbed","on","the","sofa"},Boolean.TRUE);
  System.out.println(trieMap);
  System.out.println(trieMap.toFormattedString());
  assertTrue(trieMap.get(new String[]{"a","white","hat"}));
  assertNull(trieMap.get(new String[]{"a","white"}));
  trieMap.remove(new String[]{"a","white","hat"});
  assertTrue(trieMap.get(new String[]{"a","white","cat"}));
  assertNull(trieMap.get(new String[]{"a","white","hat"}));
  assertTrue(trieMap.containsKey(new String[]{"a","white","cat"}));
  assertFalse(trieMap.containsKey(new String[]{"white","cat"}));
  assertEquals(3,trieMap.size());
  assertEquals(3,trieMap.keySet().size());
  Map<List<String>,Boolean> m=new HashMap<List<String>,Boolean>();
  m.put(Arrays.asList("a","purple","giraffe"),Boolean.TRUE);
  m.put(Arrays.asList("four","orange","bears"),Boolean.TRUE);
  trieMap.putAll(m);
  assertTrue(trieMap.containsKey(new String[]{"a","purple","giraffe"}));
  assertTrue(trieMap.containsKey(new String[]{"four","orange","bears"}));
  assertEquals(5,trieMap.size());
  assertEquals(5,trieMap.keySet().size());
}
