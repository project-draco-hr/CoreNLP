{
  TrieMap<String,Boolean> trieMap=new TrieMap<String,Boolean>();
  trieMap.put(new String[]{"a","white","cat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","white","hat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","black","cat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","black","hat"},Boolean.TRUE);
  trieMap.put(new String[]{"a","colored","hat"},Boolean.TRUE);
  TrieMapMatcher<String,Boolean> matcher=new TrieMapMatcher<String,Boolean>(trieMap);
  List<ApproxMatch<String,Boolean>> matches=matcher.findClosestMatches(new String[]{"the","black","hat"},2);
  List<ApproxMatch<String,Boolean>> expected=new ArrayList<ApproxMatch<String,Boolean>>();
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","hat"),Boolean.TRUE,0,3,1.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3,2.0));
  assertEquals("\nExpecting " + expected + ",\n got "+ matches,expected,matches);
  matches=matcher.findClosestMatches(new String[]{"the","black"},5);
  expected=new ArrayList<ApproxMatch<String,Boolean>>();
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,2,2.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","hat"),Boolean.TRUE,0,2,2.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","colored","hat"),Boolean.TRUE,0,2,3.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","white","cat"),Boolean.TRUE,0,2,3.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","white","hat"),Boolean.TRUE,0,2,3.0));
  assertEquals("\nExpecting " + StringUtils.join(expected,"\n") + ",\ngot "+ StringUtils.join(matches,"\n"),expected,matches);
  matches=matcher.findClosestMatches(new String[]{"the","black","cat","is","wearing","a","white","hat"},5);
  expected=new ArrayList<ApproxMatch<String,Boolean>>();
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","white","hat"),Boolean.TRUE,0,8,5.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,8,6.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","hat"),Boolean.TRUE,0,8,6.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","colored","hat"),Boolean.TRUE,0,8,6.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","white","cat"),Boolean.TRUE,0,8,6.0));
  assertEquals("Expecting " + StringUtils.join(expected,"\n") + ",\ngot "+ StringUtils.join(matches,"\n"),expected,matches);
  matches=matcher.findClosestMatches(new String[]{"the","black","cat","is","wearing","a","white","hat"},6,true,true);
  expected=new ArrayList<ApproxMatch<String,Boolean>>();
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat","a","white","hat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","white","hat"),Boolean.TRUE,5,8)),3.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat","a","black","hat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","black","hat"),Boolean.TRUE,5,8)),4.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat","a","colored","hat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","colored","hat"),Boolean.TRUE,5,8)),4.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat","a","white","cat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","white","cat"),Boolean.TRUE,5,8)),4.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","hat","a","white","hat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","hat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","white","hat"),Boolean.TRUE,5,8)),4.0));
  expected.add(new ApproxMatch<String,Boolean>(Arrays.asList("a","black","cat","a","black","cat","a","white","hat"),Boolean.TRUE,0,8,Arrays.asList(new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,0,3),new Match<String,Boolean>(Arrays.asList("a","black","cat"),Boolean.TRUE,3,5),new Match<String,Boolean>(Arrays.asList("a","white","hat"),Boolean.TRUE,5,8)),4.0));
  assertEquals("\nExpecting " + StringUtils.join(expected,"\n") + ",\ngot "+ StringUtils.join(matches,"\n"),expected,matches);
}
