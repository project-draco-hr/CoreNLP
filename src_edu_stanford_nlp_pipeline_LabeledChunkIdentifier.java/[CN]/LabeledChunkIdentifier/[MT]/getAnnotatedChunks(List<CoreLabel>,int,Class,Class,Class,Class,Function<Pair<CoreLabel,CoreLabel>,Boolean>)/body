{
  List<CoreMap> chunks=new ArrayList();
  LabelTagType prevTagType=null;
  int tokenBegin=-1;
  for (int i=0; i < tokens.size(); i++) {
    CoreLabel token=tokens.get(i);
    String label=(String)token.get(labelKey);
    LabelTagType curTagType=getTagType(label);
    boolean isCompatible=true;
    if (checkTokensCompatible != null) {
      CoreLabel prev=null;
      if (i > 0) {
        prev=tokens.get(i - 1);
      }
      Pair<CoreLabel,CoreLabel> p=Pair.makePair(token,prev);
      isCompatible=checkTokensCompatible.apply(p);
    }
    if (isEndOfChunk(prevTagType,curTagType) || !isCompatible) {
      int tokenEnd=i;
      if (tokenBegin >= 0 && tokenEnd > tokenBegin) {
        CoreMap chunk=ChunkAnnotationUtils.getAnnotatedChunk(tokens,tokenBegin,tokenEnd,totalTokensOffset,tokenChunkKey,textKey,tokenLabelKey);
        chunk.set(labelKey,prevTagType.type);
        chunks.add(chunk);
        tokenBegin=-1;
      }
    }
    if (isStartOfChunk(prevTagType,curTagType) || (!isCompatible && isChunk(curTagType))) {
      if (tokenBegin >= 0) {
        throw new RuntimeException("New chunk started, prev chunk not ended yet!");
      }
      tokenBegin=i;
    }
    prevTagType=curTagType;
  }
  if (tokenBegin >= 0) {
    CoreMap chunk=ChunkAnnotationUtils.getAnnotatedChunk(tokens,tokenBegin,tokens.size(),totalTokensOffset,tokenChunkKey,textKey,tokenLabelKey);
    chunk.set(labelKey,prevTagType.type);
    chunks.add(chunk);
  }
  return chunks;
}
