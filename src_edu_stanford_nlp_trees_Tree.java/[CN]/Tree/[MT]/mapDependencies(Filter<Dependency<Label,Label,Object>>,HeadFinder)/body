{
  if (hf == null) {
    throw new IllegalArgumentException("mapDependencies: need headfinder");
  }
  Set<Dependency<Label,Label,Object>> deps=new HashSet<Dependency<Label,Label,Object>>();
  for (  Tree node : this) {
    if (node.isLeaf() || node.children().length < 2) {
      continue;
    }
    Tree hwt=node.headTerminal(hf);
    if (hwt == null) {
      throw new IllegalStateException("mapDependencies: headFinder failed!");
    }
    for (    Tree child : node.children()) {
      Tree dwt=child.headTerminal(hf);
      if (dwt == null) {
        throw new IllegalStateException("mapDependencies: headFinder failed!");
      }
      if (dwt != hwt) {
        Dependency<Label,Label,Object> p=new UnnamedDependency(hwt.label(),dwt.label());
        if (f.accept(p)) {
          deps.add(p);
        }
      }
    }
  }
  return deps;
}
