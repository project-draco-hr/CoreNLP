{
  SoftReference<T> likelyReferenceOrNull=mapping.get(key);
  T referenceOrNull=likelyReferenceOrNull == null ? null : likelyReferenceOrNull.get();
  if (likelyReferenceOrNull == null) {
    if (!tryFile(key)) {
      return null;
    }
    Collection<Pair<KEY,T>> elemsRead=readBlock(key);
    for (    Pair<KEY,T> pair : elemsRead) {
      if (pair.first.equals(key)) {
        return pair.second;
      }
    }
    return null;
  }
 else   if (referenceOrNull == null) {
    mapping.remove(key);
    return get(key);
  }
 else {
    if (referenceOrNull instanceof Collection) {
      return (T)Collections.unmodifiableCollection((Collection)referenceOrNull);
    }
 else     if (referenceOrNull instanceof Map) {
      return (T)Collections.unmodifiableMap((Map)referenceOrNull);
    }
 else {
      return referenceOrNull;
    }
  }
}
