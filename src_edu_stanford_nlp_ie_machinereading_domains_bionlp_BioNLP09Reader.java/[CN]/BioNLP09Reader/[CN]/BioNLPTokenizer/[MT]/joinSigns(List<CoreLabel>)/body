{
  List<CoreLabel> output=new ArrayList<CoreLabel>();
  for (int i=0; i < tokens.size(); i++) {
    if (i < tokens.size() - 3 && tokens.get(i).endPosition() == tokens.get(i + 1).beginPosition() && tokens.get(i + 1).word().equals("-") && tokens.get(i + 2).word().equals("/") && tokens.get(i + 3).word().equals("-")) {
      String word=tokens.get(i).word() + tokens.get(i + 1).word() + tokens.get(i + 2).word()+ tokens.get(i + 3).word();
      output.add(tokenFactory.makeToken(word,tokens.get(i).beginPosition(),word.length()));
      i+=3;
      continue;
    }
    if (i < tokens.size() - 1) {
      CoreLabel crt=tokens.get(i);
      CoreLabel nxt=tokens.get(i + 1);
      if (crt.endPosition() == nxt.beginPosition() && !isParen(crt.word()) && nxt.word().equals("+")) {
        String word=crt.word() + nxt.word();
        output.add(tokenFactory.makeToken(word,crt.beginPosition(),word.length()));
        i++;
        continue;
      }
      if (crt.endPosition() == nxt.beginPosition() && (i + 2 >= tokens.size() || nxt.endPosition() != tokens.get(i + 2).beginPosition()) && !isParen(crt.word()) && nxt.word().equals("-")) {
        String word=crt.word() + nxt.word();
        output.add(tokenFactory.makeToken(word,crt.beginPosition(),word.length()));
        i++;
        continue;
      }
      if (crt.endPosition() == nxt.beginPosition() && (i == 0 || crt.beginPosition() != tokens.get(i - 1).endPosition()) && !isParen(nxt.word()) && crt.word().equals("-")) {
        String word=crt.word() + nxt.word();
        output.add(tokenFactory.makeToken(word,crt.beginPosition(),word.length()));
        i++;
        continue;
      }
    }
    output.add(tokens.get(i));
  }
  return output;
}
