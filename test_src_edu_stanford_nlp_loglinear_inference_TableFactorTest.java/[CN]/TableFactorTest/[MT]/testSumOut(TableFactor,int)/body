{
  if (!Arrays.stream(factor.neighborIndices).boxed().collect(Collectors.toSet()).contains(marginalize))   return;
  if (factor.neighborIndices.length <= 1)   return;
  TableFactor summedOut=factor.sumOut(marginalize);
  assertEquals(factor.neighborIndices.length - 1,summedOut.neighborIndices.length);
  assertTrue(!Arrays.stream(summedOut.neighborIndices).boxed().collect(Collectors.toSet()).contains(marginalize));
  Map<List<Integer>,List<int[]>> subsetToSuperset=subsetToSupersetAssignments(factor,summedOut);
  for (  List<Integer> subsetAssignmentList : subsetToSuperset.keySet()) {
    double sum=0.0;
    for (    int[] supersetAssignment : subsetToSuperset.get(subsetAssignmentList)) {
      sum+=factor.getAssignmentValue(supersetAssignment);
    }
    int[] subsetAssignment=new int[subsetAssignmentList.size()];
    for (int i=0; i < subsetAssignment.length; i++) {
      subsetAssignment[i]=subsetAssignmentList.get(i);
    }
    assertEquals(sum,summedOut.getAssignmentValue(subsetAssignment),1.0e-5);
  }
}
