{
  if (originalWeights == null)   originalWeights=weights;
  for (int i=0; i < goldVectors.length; i++) {
    Counter<T> featureDiff=goldVectors[i];
    Counters.subtractInPlace(featureDiff,guessedVectors[i]);
    if (true)     Counters.retainNonZeros(featureDiff);
    featureDiff.setCount(datumIDs[i],1.0);
    double origScoreDiff=Counters.dotProduct(featureDiff,originalWeights);
    lossMinusOrigScoreDiffs.add(new Double(losses[i] - origScoreDiff));
    alphas.add(new Double(0.0));
    featureDiffs.add(featureDiff);
  }
  ClassicCounter<T> update=new ClassicCounter<T>();
  for (int i=0; i < alphas.size(); i++) {
    Counters.addInPlace(update,Counters.scale(featureDiffs.get(i),alphas.get(i)));
  }
  return update;
}
