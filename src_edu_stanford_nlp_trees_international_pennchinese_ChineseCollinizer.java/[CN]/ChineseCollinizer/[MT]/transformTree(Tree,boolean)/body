{
  String label=tree.label().value();
  if (tree.isLeaf()) {
    if (deletePunct && ctlp.isPunctuationWord(label)) {
      return null;
    }
 else {
      return tf.newLeaf(new StringLabel(label));
    }
  }
  if (tree.isPreTerminal() && deletePunct && ctlp.isPunctuationTag(label)) {
    return null;
  }
  List<Tree> children=new ArrayList<Tree>();
  if (label.matches("ROOT.*") && tree.numChildren() == 1) {
    return transformTree(tree.children()[0],true);
  }
  label=label.replaceFirst("[^A-Z].*$","");
  label=label.replaceFirst("PRN","ADVP");
  for (int cNum=0; cNum < tree.children().length; cNum++) {
    Tree child=tree.children()[cNum];
    Tree newChild=transformTree(child,false);
    if (newChild != null) {
      children.add(newChild);
    }
  }
  if (children.isEmpty() && !isRoot) {
    if (VERBOSE) {
      System.err.println("ChineseCollinizer: all children of " + label + " deleted; returning null");
    }
    return null;
  }
  return tf.newTreeNode(new StringLabel(label),children);
}
