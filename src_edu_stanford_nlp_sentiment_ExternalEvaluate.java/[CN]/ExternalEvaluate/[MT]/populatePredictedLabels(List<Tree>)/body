{
  if (trees.size() != this.predicted.size()) {
    throw new IllegalArgumentException("Number of gold and predicted trees not equal!");
  }
  for (int i=0; i < trees.size(); i++) {
    Iterator<Tree> goldTree=trees.get(i).iterator();
    Iterator<Tree> predictedTree=this.predicted.get(i).iterator();
    while (goldTree.hasNext() || predictedTree.hasNext()) {
      Tree goldNode=goldTree.next();
      Tree predictedNode=predictedTree.next();
      if (goldNode == null || predictedNode == null) {
        throw new IllegalArgumentException("Trees not of equal length");
      }
      if (goldNode.isLeaf()) {
        continue;
      }
      CoreLabel label=(CoreLabel)goldNode.label();
      label.set(RNNCoreAnnotations.PredictedClass.class,RNNCoreAnnotations.getPredictedClass(predictedNode));
    }
  }
}
