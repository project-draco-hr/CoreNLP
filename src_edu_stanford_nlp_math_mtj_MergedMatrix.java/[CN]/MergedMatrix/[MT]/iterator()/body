{
  return new Iterator<MatrixEntry>(){
    final MergedMatrixEntry entry=new MergedMatrixEntry();
    final ObjectIterator<Int2ObjectMap.Entry<Int2IntOpenHashMap>> rows=which.int2ObjectEntrySet().fastIterator();
    Int2ObjectMap.Entry<Int2IntOpenHashMap> row=null;
    ObjectIterator<Int2IntMap.Entry> col=null;
    public boolean hasNext(){
      if (col != null && col.hasNext()) {
        return true;
      }
 else       if (rows.hasNext()) {
        row=rows.next();
        col=row.getValue().int2IntEntrySet().fastIterator();
        return hasNext();
      }
 else {
        col=null;
        return false;
      }
    }
    public MatrixEntry next(){
      Int2IntMap.Entry e=col.next();
      entry.row=row.getIntKey();
      entry.col=e.getIntKey();
      entry.matrix=underlying[e.getIntValue()];
      return entry;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
