{
  Annotation ann=new Annotation("JSON is neat. Better than XML.");
  StanfordCoreNLP pipeline=new StanfordCoreNLP(new Properties(){
{
      setProperty("annotators","tokenize, ssplit");
    }
  }
);
  pipeline.annotate(ann);
  String actual=new JSONOutputter().print(ann);
  String expected=indent("{\n" + "\t\"sentences\": [\n" + "\t\t{\n"+ "\t\t\t\"index\": 0,\n"+ "\t\t\t\"tokens\": [\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 1,\n"+ "\t\t\t\t\t\"word\": \"JSON\",\n"+ "\t\t\t\t\t\"originalText\": \"JSON\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 0,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 4,\n"+ "\t\t\t\t\t\"before\": \"\",\n"+ "\t\t\t\t\t\"after\": \" \"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 2,\n"+ "\t\t\t\t\t\"word\": \"is\",\n"+ "\t\t\t\t\t\"originalText\": \"is\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 5,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 7,\n"+ "\t\t\t\t\t\"before\": \" \",\n"+ "\t\t\t\t\t\"after\": \" \"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 3,\n"+ "\t\t\t\t\t\"word\": \"neat\",\n"+ "\t\t\t\t\t\"originalText\": \"neat\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 8,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 12,\n"+ "\t\t\t\t\t\"before\": \" \",\n"+ "\t\t\t\t\t\"after\": \"\"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 4,\n"+ "\t\t\t\t\t\"word\": \".\",\n"+ "\t\t\t\t\t\"originalText\": \".\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 12,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 13,\n"+ "\t\t\t\t\t\"before\": \"\",\n"+ "\t\t\t\t\t\"after\": \" \"\n"+ "\t\t\t\t}\n"+ "\t\t\t]\n"+ "\t\t},\n"+ "\t\t{\n"+ "\t\t\t\"index\": 1,\n"+ "\t\t\t\"tokens\": [\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 1,\n"+ "\t\t\t\t\t\"word\": \"Better\",\n"+ "\t\t\t\t\t\"originalText\": \"Better\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 14,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 20,\n"+ "\t\t\t\t\t\"before\": \" \",\n"+ "\t\t\t\t\t\"after\": \" \"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 2,\n"+ "\t\t\t\t\t\"word\": \"than\",\n"+ "\t\t\t\t\t\"originalText\": \"than\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 21,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 25,\n"+ "\t\t\t\t\t\"before\": \" \",\n"+ "\t\t\t\t\t\"after\": \" \"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 3,\n"+ "\t\t\t\t\t\"word\": \"XML\",\n"+ "\t\t\t\t\t\"originalText\": \"XML\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 26,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 29,\n"+ "\t\t\t\t\t\"before\": \" \",\n"+ "\t\t\t\t\t\"after\": \"\"\n"+ "\t\t\t\t},\n"+ "\t\t\t\t{\n"+ "\t\t\t\t\t\"index\": 4,\n"+ "\t\t\t\t\t\"word\": \".\",\n"+ "\t\t\t\t\t\"originalText\": \".\",\n"+ "\t\t\t\t\t\"characterOffsetBegin\": 29,\n"+ "\t\t\t\t\t\"characterOffsetEnd\": 30,\n"+ "\t\t\t\t\t\"before\": \"\",\n"+ "\t\t\t\t\t\"after\": \"\"\n"+ "\t\t\t\t}\n"+ "\t\t\t]\n"+ "\t\t}\n"+ "\t]\n"+ "}");
  assertEquals(expected,actual);
}
