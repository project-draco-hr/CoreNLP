{
  String xmlPath=props.getProperty(prefix + "xml","edu/stanford/nlp/models/sutime/jollyday/Holidays_sutime.xml");
  String xmlPathType=props.getProperty(prefix + "pathtype","classpath");
  varPrefix=props.getProperty(prefix + "prefix",varPrefix);
  System.err.printf("Initializing JollyDayHoliday for SUTime from %s: %s as %s%n",xmlPathType,xmlPath,prefix);
  Properties managerProps=new Properties();
  managerProps.setProperty("manager.impl","edu.stanford.nlp.time.JollyDayHolidays$MyXMLManager");
  try {
    URL holidayXmlUrl;
    if (xmlPathType.equalsIgnoreCase("classpath")) {
      holidayXmlUrl=getClass().getClassLoader().getResource(xmlPath);
    }
 else     if (xmlPathType.equalsIgnoreCase("file")) {
      holidayXmlUrl=new URL("file:///" + xmlPath);
    }
 else     if (xmlPathType.equalsIgnoreCase("url")) {
      holidayXmlUrl=new URL(xmlPath);
    }
 else {
      throw new IllegalArgumentException("Unsupported " + prefix + "pathtype = "+ xmlPathType);
    }
    holidayManager=HolidayManager.getInstance(holidayXmlUrl,managerProps);
  }
 catch (  java.net.MalformedURLException e) {
    throw new RuntimeException(e);
  }
  if (!(holidayManager instanceof MyXMLManager)) {
    throw new AssertionError("Did not get back JollyDayHolidays$MyXMLManager");
  }
  Configuration config=((MyXMLManager)holidayManager).getConfiguration();
  holidays=getAllHolidaysMap(config);
}
