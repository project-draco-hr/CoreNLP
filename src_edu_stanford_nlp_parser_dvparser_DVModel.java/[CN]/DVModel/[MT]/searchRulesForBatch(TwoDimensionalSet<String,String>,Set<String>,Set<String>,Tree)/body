{
  if (tree.isLeaf()) {
    return;
  }
  if (tree.isPreTerminal()) {
    words.add(getVocabWord(tree.children()[0].value()));
    return;
  }
  Tree[] children=tree.children();
  if (children.length == 1) {
    unaryRules.add(basicCategory(children[0].value()));
    searchRulesForBatch(binaryRules,unaryRules,words,children[0]);
  }
 else   if (children.length == 2) {
    binaryRules.add(basicCategory(children[0].value()),basicCategory(children[1].value()));
    searchRulesForBatch(binaryRules,unaryRules,words,children[0]);
    searchRulesForBatch(binaryRules,unaryRules,words,children[1]);
  }
 else {
    throw new AssertionError("Expected a binarized tree");
  }
}
