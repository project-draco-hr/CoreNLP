{
  if (binaryTransform.get(leftBasic,rightBasic) != null) {
    return;
  }
  ++numBinaryMatrices;
  SimpleMatrix score=SimpleMatrix.random(1,numCols,-1.0 / Math.sqrt((double)numCols),1.0 / Math.sqrt((double)numCols),rand);
  binaryScore.put(leftBasic,rightBasic,score.scale(op.trainOptions.scalingForInit));
  SimpleMatrix binary;
  if (op.trainOptions.useContextWords) {
    binary=new SimpleMatrix(numRows,numCols * 4 + 1);
    binary.insertIntoThis(0,numCols * 2 + 1,randomContextMatrix());
  }
 else {
    binary=new SimpleMatrix(numRows,numCols * 2 + 1);
  }
  SimpleMatrix left=randomTransformMatrix();
  SimpleMatrix right=randomTransformMatrix();
  binary.insertIntoThis(0,0,left);
  binary.insertIntoThis(0,numCols,right);
  binaryTransform.put(leftBasic,rightBasic,binary.scale(op.trainOptions.scalingForInit));
}
