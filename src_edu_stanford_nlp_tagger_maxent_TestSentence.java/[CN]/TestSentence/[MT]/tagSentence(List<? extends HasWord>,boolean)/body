{
  this.origWords=new ArrayList<>(s);
  int sz=s.size();
  this.sent=new ArrayList<>(sz + 1);
  for (  HasWord value1 : s) {
    if (maxentTagger.wordFunction != null) {
      sent.add(maxentTagger.wordFunction.apply(value1.word()));
    }
 else {
      sent.add(value1.word());
    }
  }
  sent.add(Tagger.EOS_WORD);
  if (reuseTags) {
    this.originalTags=new ArrayList<>(sz + 1);
    for (    HasWord value : s) {
      if (value instanceof HasTag) {
        originalTags.add(((HasTag)value).tag());
      }
 else {
        originalTags.add(null);
      }
    }
    originalTags.add(Tagger.EOS_TAG);
  }
  size=sz + 1;
  if (VERBOSE) {
    System.err.println("Sentence is " + SentenceUtils.listToString(sent,false,tagSeparator));
  }
  init();
  result=testTagInference();
  if (maxentTagger.wordFunction != null) {
    for (int j=0; j < sz; ++j) {
      result.get(j).setWord(s.get(j).word());
    }
  }
  return result;
}
