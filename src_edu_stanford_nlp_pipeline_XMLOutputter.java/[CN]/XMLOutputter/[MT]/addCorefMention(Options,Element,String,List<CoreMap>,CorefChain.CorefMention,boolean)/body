{
  Element mentionElem=new Element("mention",curNS);
  if (representative) {
    mentionElem.addAttribute(new Attribute("representative","true"));
  }
  setSingleElement(mentionElem,"sentence",curNS,Integer.toString(mention.sentNum));
  setSingleElement(mentionElem,"start",curNS,Integer.toString(mention.startIndex));
  setSingleElement(mentionElem,"end",curNS,Integer.toString(mention.endIndex));
  setSingleElement(mentionElem,"head",curNS,Integer.toString(mention.headIndex));
  String text=mention.mentionSpan;
  setSingleElement(mentionElem,"text",curNS,text);
  if (sentences != null && options.coreferenceContextSize > 0) {
    List<CoreLabel> tokens=sentences.get(mention.sentNum - 1).get(CoreAnnotations.TokensAnnotation.class);
    int contextStart=Math.max(mention.startIndex - 1 - 5,0);
    int contextEnd=Math.min(mention.endIndex - 1 + 5,tokens.size());
    String leftContext=StringUtils.joinWords(tokens," ",contextStart,mention.startIndex - 1);
    String rightContext=StringUtils.joinWords(tokens," ",mention.endIndex - 1,contextEnd);
    setSingleElement(mentionElem,"leftContext",curNS,leftContext);
    setSingleElement(mentionElem,"rightContext",curNS,rightContext);
  }
  chainElem.appendChild(mentionElem);
}
