{
  wordInfo.addAttribute(new Attribute("id",Integer.toString(id)));
  setSingleElement(wordInfo,"word",curNS,token.get(TextAnnotation.class));
  setSingleElement(wordInfo,"lemma",curNS,token.get(LemmaAnnotation.class));
  if (token.containsKey(CharacterOffsetBeginAnnotation.class) && token.containsKey(CharacterOffsetEndAnnotation.class)) {
    setSingleElement(wordInfo,"CharacterOffsetBegin",curNS,Integer.toString(token.get(CharacterOffsetBeginAnnotation.class)));
    setSingleElement(wordInfo,"CharacterOffsetEnd",curNS,Integer.toString(token.get(CharacterOffsetEndAnnotation.class)));
  }
  if (token.containsKey(PartOfSpeechAnnotation.class)) {
    setSingleElement(wordInfo,"POS",curNS,token.get(PartOfSpeechAnnotation.class));
  }
  if (token.containsKey(NamedEntityTagAnnotation.class)) {
    setSingleElement(wordInfo,"NER",curNS,token.get(NamedEntityTagAnnotation.class));
  }
  if (token.containsKey(NormalizedNamedEntityTagAnnotation.class)) {
    setSingleElement(wordInfo,"NormalizedNER",curNS,token.get(NormalizedNamedEntityTagAnnotation.class));
  }
  if (token.containsKey(TimexAnnotation.class)) {
    Timex timex=token.get(TimexAnnotation.class);
    Element timexElem=new Element("Timex",curNS);
    timexElem.addAttribute(new Attribute("tid",timex.tid()));
    timexElem.addAttribute(new Attribute("type",timex.timexType()));
    timexElem.appendChild(timex.value());
    wordInfo.appendChild(timexElem);
  }
  if (token.containsKey(CoreAnnotations.TrueCaseAnnotation.class)) {
    Element cur=new Element("TrueCase",curNS);
    cur.appendChild(token.get(TrueCaseAnnotation.class));
    wordInfo.appendChild(cur);
  }
  if (token.containsKey(CoreAnnotations.TrueCaseTextAnnotation.class)) {
    Element cur=new Element("TrueCaseText",curNS);
    cur.appendChild(token.get(TrueCaseTextAnnotation.class));
    wordInfo.appendChild(cur);
  }
}
