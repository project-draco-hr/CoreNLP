{
  Element top=new Element("triple",curNS);
  top.addAttribute(new Attribute("confidence",triple.confidenceGloss()));
  Element subject=new Element("subject",curNS);
  subject.addAttribute(new Attribute("begin",Integer.toString(triple.subjectTokenSpan().first)));
  subject.addAttribute(new Attribute("end",Integer.toString(triple.subjectTokenSpan().second)));
  Element text=new Element("text",curNS);
  text.appendChild(triple.subjectGloss());
  Element lemma=new Element("lemma",curNS);
  lemma.appendChild(triple.subjectLemmaGloss());
  subject.appendChild(text);
  subject.appendChild(lemma);
  top.appendChild(subject);
  Element relation=new Element("relation",curNS);
  relation.addAttribute(new Attribute("begin",Integer.toString(triple.relationTokenSpan().first)));
  relation.addAttribute(new Attribute("end",Integer.toString(triple.relationTokenSpan().second)));
  text=new Element("text",curNS);
  text.appendChild(triple.relationGloss());
  lemma=new Element("lemma",curNS);
  lemma.appendChild(triple.relationLemmaGloss());
  relation.appendChild(text);
  relation.appendChild(lemma);
  top.appendChild(relation);
  Element object=new Element("object",curNS);
  object.addAttribute(new Attribute("begin",Integer.toString(triple.objectTokenSpan().first)));
  object.addAttribute(new Attribute("end",Integer.toString(triple.objectTokenSpan().second)));
  text=new Element("text",curNS);
  text.appendChild(triple.objectGloss());
  lemma=new Element("lemma",curNS);
  lemma.appendChild(triple.objectLemmaGloss());
  object.appendChild(text);
  object.appendChild(lemma);
  top.appendChild(object);
  return top;
}
