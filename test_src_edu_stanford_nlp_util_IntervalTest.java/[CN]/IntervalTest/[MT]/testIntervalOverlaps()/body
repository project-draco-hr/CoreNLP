{
  Interval<Integer> i1_10=Interval.toInterval(1,10);
  Interval<Integer> i2_9=Interval.toInterval(2,9);
  Interval<Integer> i5_10=Interval.toInterval(5,10);
  Interval<Integer> i1_5=Interval.toInterval(1,5);
  Interval<Integer> i1_15=Interval.toInterval(1,15);
  Interval<Integer> i5_20=Interval.toInterval(5,20);
  Interval<Integer> i10_20=Interval.toInterval(10,20);
  Interval<Integer> i15_20=Interval.toInterval(15,20);
  Interval<Integer> i1_10b=Interval.toInterval(1,10);
  assertTrue(i1_10.overlaps(i2_9));
  assertTrue(i1_10.overlaps(i5_10));
  assertTrue(i1_10.overlaps(i1_5));
  assertTrue(i1_10.overlaps(i1_15));
  assertTrue(i1_10.overlaps(i5_20));
  assertTrue(i1_10.overlaps(i10_20));
  assertFalse(i1_10.overlaps(i15_20));
  assertTrue(i1_10.overlaps(i1_10b));
  assertTrue(i2_9.overlaps(i1_10));
  assertTrue(i5_10.overlaps(i1_10));
  assertTrue(i1_5.overlaps(i1_10));
  assertTrue(i1_15.overlaps(i1_10));
  assertTrue(i5_20.overlaps(i1_10));
  assertTrue(i10_20.overlaps(i1_10));
  assertFalse(i15_20.overlaps(i1_10));
  assertTrue(i1_10b.overlaps(i1_10));
  int openFlags=Interval.INTERVAL_OPEN_BEGIN | Interval.INTERVAL_OPEN_END;
  Interval<Integer> i1_10_open=Interval.toInterval(1,10,openFlags);
  Interval<Integer> i2_9_open=Interval.toInterval(2,9,openFlags);
  Interval<Integer> i5_10_open=Interval.toInterval(5,10,openFlags);
  Interval<Integer> i1_5_open=Interval.toInterval(1,5,openFlags);
  Interval<Integer> i1_15_open=Interval.toInterval(1,15,openFlags);
  Interval<Integer> i5_20_open=Interval.toInterval(5,20,openFlags);
  Interval<Integer> i10_20_open=Interval.toInterval(10,20,openFlags);
  Interval<Integer> i15_20_open=Interval.toInterval(15,20,openFlags);
  Interval<Integer> i1_10b_open=Interval.toInterval(1,10,openFlags);
  assertTrue(i1_10_open.overlaps(i2_9_open));
  assertTrue(i1_10_open.overlaps(i5_10_open));
  assertTrue(i1_10_open.overlaps(i1_5_open));
  assertTrue(i1_10_open.overlaps(i1_15_open));
  assertTrue(i1_10_open.overlaps(i5_20_open));
  assertFalse(i1_10_open.overlaps(i10_20_open));
  assertFalse(i1_10_open.overlaps(i15_20_open));
  assertTrue(i1_10_open.overlaps(i1_10b_open));
  assertTrue(i2_9_open.overlaps(i1_10_open));
  assertTrue(i5_10_open.overlaps(i1_10_open));
  assertTrue(i1_5_open.overlaps(i1_10_open));
  assertTrue(i1_15_open.overlaps(i1_10_open));
  assertTrue(i5_20_open.overlaps(i1_10_open));
  assertFalse(i10_20_open.overlaps(i1_10_open));
  assertFalse(i15_20_open.overlaps(i1_10_open));
  assertTrue(i1_10b_open.overlaps(i1_10_open));
}
