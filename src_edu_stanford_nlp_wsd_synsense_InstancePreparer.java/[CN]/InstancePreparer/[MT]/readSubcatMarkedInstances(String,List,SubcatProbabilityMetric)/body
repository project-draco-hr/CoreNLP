{
  System.out.println("Reading and processing subcat instances from " + filename);
  DiskTreebank subcatTreebank=new DiskTreebank(new TreeReaderFactory(){
    public TreeReader newTreeReader(    Reader in){
      return new PennTreeReader(in,new LabeledScoredTreeFactory(new WordFactory()),new NPTmpRetainingTreeNormalizer(NPTmpRetainingTreeNormalizer.TEMPORAL_ANY_TMP_PERCOLATED,false,0,false));
    }
  }
);
  subcatTreebank.loadPath(filename);
  Iterator it=subcatTreebank.iterator();
  int numTotal=0;
  while (it.hasNext()) {
    Tree tree=(Tree)it.next();
    try {
      Instance instance=new Instance(tree,parser);
      list.add(instance);
      numTotal++;
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    if (numTotal % 10 == 0) {
      System.out.println("processed: " + numTotal);
    }
  }
  System.out.println("Got " + numTotal + " subcat marked data instances");
}
