{
  String[] testTrees={"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))","(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))","(ROOT (S (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))","(ROOT (S (NP (NNP John)) (VP (VBZ works) (PP (DT both) (PP (IN in) (NP (NNP Zurich))) (CC and) (PP (IN in) (NP (NNP London))))) (. .)))","(ROOT (S (NP (NP (NNS Languages)) (PP (PP (IN with) (NP (NNS alphabets))) (CC and) (PP (IN without) (NP (NNS alphabets))))) (VP (VBP are) (ADJP (JJ difficult))) (. .)))","(ROOT (S (NP (PRP$ His) (NN term)) (VP (VP (VBZ has) (VP (VBN produced) (NP (NP (DT no) (JJ spectacular) (NNS failures)) (PP (PP (IN in) (NP (NNS politics))) (, ,) (PP (IN in) (NP (DT the) (NN economy))) (CC or) (PP (IN on) (NP (DT the) (JJ military) (NN front))))))) (, ,) (CC and) (VP (VBZ has) (VP (VBN chalked) (PRT (RP up)) (NP (DT some) (NNS successes))))) (. .)))","(ROOT (S (NP (NNP Fred)) (VP (VBD walked) (PP (PP (IN out) (NP (DT the) (NN door))) (CC and) (PP (RB right) (IN into) (NP (DT a) (NN trap))))) (. .)))","(ROOT (S (NP (NNP Fred)) (VP (VBD walked) (PP (PP (IN into) (NP (DT the) (NN house))) (CC and) (PP (RB right) (IN into) (NP (DT a) (NN trap))))) (. .)))","(ROOT (S (NP (NNP Marie) (CC and) (NNP Chris)) (VP (VP (VBD went) (PRT (RP out))) (, ,) (VP (VBD drank) (NP (NN coffee))) (, ,) (CC and) (VP (VBD talked) (PP (IN about) (NP (NNP Stanford) (NNPS Dependencies))))) (. .)))","(ROOT (S (NP-TMP (DT These) (NNS days)) (NP (PRP he)) (VP (VBZ hustles) (PP (TO to) (NP (JJ house-painting) (NNS jobs))) (PP (IN in) (NP (PRP$ his) (NNP Chevy) (NN pickup))) (PP (IN before) (CC and) (IN after) (S (VP (NN training) (PP (IN with) (NP (DT the) (NNPS Tropics))))))) (. .)))","(ROOT (S (NP (NNP Jill)) (VP (VBD walked) (PP (PP (IN out) (NP (DT the) (NN door))) (, ,) (PP (IN over) (NP (DT the) (NN road))) (, ,) (PP (IN across) (NP (DT the) (JJ deserted) (NN block))) (, ,) (PP (IN around) (NP (DT the) (NN corner))) (, ,) (CC and) (PP (IN through) (NP (DT the) (NN park))))) (. .)))","(ROOT (S (NP (NNP John)) (VP (VP (VBD noticed) (NP (DT a) (NN cockroach))) (CC and) (VP (VBD departed))) (. .)))","( (S (S (NP (RBR More) (JJ common) (NN chrysotile) (NNS fibers)) (VP (VP (VBP are) (ADJP (JJ curly))) (CC and) (VP (VBP are) (VP (ADVP (RBR more) (RB easily)) (VBN rejected) (PP (IN by) (NP (DT the) (NN body))))))) (, ,) (NP (NNP Dr.) (NNP Mossman)) (VP (VBD explained)) (. .)))","( (S (NP (NNP John)) (VP (VP (VBD is) (VP (VBN appalled))) (CC and) (VP (MD will) (VP (VB complain)))) (. .)))","( (SBARQ (WHNP (WP What)) (SQ (VP (VBP are) (NP (NP (NP (NP (NNP Christopher) (NNP Marlowe) (POS 's)) (CC and) (NP (NNP Shakespeare) (POS 's))) (JJ literary) (NNS contributions)) (PP (TO to) (NP (JJ English) (NN literature)))))) (. ?)))","( (SBARQ (WHNP (WP What)) (SQ (VP (VBP are) (NP (NP (NP (NP (NP (NNP Christopher) (NNP Marlowe)) (CC and) (NP (NNP Shakespeare))) (POS 's)) (JJ literary) (NNS contributions)) (PP (TO to) (NP (JJ English) (NN literature)))))) (. ?)))","( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB as) (RB well) (IN as)) (NP (NNS cats)))) (. .)))","( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))","( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))","( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))","((S (NP (NNP Fred)) (VP (VBD flew) (PP (CONJP (RB not) (JJ only)) (PP (TO to) (NP (NNP Greece))) (CONJP (CC but) (RB also)) (PP (TO to) (NP (NNP Serbia))))) (. .)))","( (SINV (ADVP-TMP (RB Only) (RB recently)) (SINV (VBZ has) (NP (PRP it)) (VP (VBN been) (VP (ADVP-MNR (RB attractively)) (VBN redesigned)))) (CC and) (SINV (NP (PRP$ its) (JJ editorial) (NN product)) (VP (VBN improved))) (. .)))","( (S (NP-SBJ (JJP (JJ Political) (CC and) (NN currency)) (NNS gyrations)) (VP (MD can) (VP (VB whipsaw) (NP (DT the) (NNS funds)))) (. .)))","(NP-SBJ (NNS Managers) (CC and) (NNS presenters))","(NP (NN education) (, ,) (NN science) (CC and) (NN culture))","(NP (NN education) (, ,) (NN science) (, ,) (CC and) (NN culture))","(NP (NNP Digital) (, ,) (NNP Hewlett) (CC and) (NNP Sun) ) ","(NP (NNP Digital) (, ,) (NNP Hewlett) (, ,) (CC and) (NNP Sun))","(NP (NP (NNP Home) (NNP Depot) ) (, ,) (NP (NNP Sun) ) (, ,) (CC and) (NP (NNP Coke) ) )","(NP (NP (NNP Home) (NNP Depot) ) (, ,) (NP (NNP Sun) ) (CC and)  (NP (NNP Coke) ) )","(S (NP (NP (NN Activation)) (PP (IN of) (NP (NP (NN Akt)) (, ,) (NP (NN NFkappaB)) (, ,) (CC and) (NP (NN Stat3)) (CONJP (CC but) (RB not)) (NP (NN MAPK) (NNS pathways))))) (VP (VBP are) (NP (NP (NNS characteristics)) (VP (VBN associated) (PP (IN with) (NP (NP (JJ malignant) (NN transformation)) ))))))"};
  String[] testAnswers={"nsubj(big-3, Bill-1)\n" + "nsubj(honest-5, Bill-1)\n" + "cop(big-3, is-2)\n"+ "root(ROOT-0, big-3)\n"+ "conj_and(big-3, honest-5)\n","preconj(boys-3, Both-1)\n" + "det(boys-3, the-2)\n" + "nsubj(are-7, boys-3)\n"+ "det(girls-6, the-5)\n"+ "conj_and(boys-3, girls-6)\n"+ "nsubj(are-7, girls-6)\n"+ "root(ROOT-0, are-7)\n"+ "advmod(are-7, here-8)\n","preconj(they-2, Neither-1)\n" + "nsubjpass(reached-8, they-2)\n" + "nn(McAlpine-5, Mr.-4)\n"+ "conj_nor(they-2, McAlpine-5)\n"+ "nsubjpass(reached-8, McAlpine-5)\n"+ "aux(reached-8, could-6)\n"+ "auxpass(reached-8, be-7)\n"+ "root(ROOT-0, reached-8)\n"+ "prep_for(reached-8, comment-10)\n","nsubj(works-2, John-1)\n" + "root(ROOT-0, works-2)\n" + "preconj(works-2, both-3)\n"+ "prep_in(works-2, Zurich-5)\n"+ "prep_in(works-2, London-8)\n"+ "conj_and(Zurich-5, London-8)\n","conj_and(Languages-1, Languages-1')\n" + "nsubj(difficult-8, Languages-1)\n" + "nsubj(difficult-8, Languages-1')\n"+ "prep_with(Languages-1, alphabets-3)\n"+ "prep_without(Languages-1', alphabets-6)\n"+ "cop(difficult-8, are-7)\n"+ "root(ROOT-0, difficult-8)\n","poss(term-2, His-1)\n" + "nsubj(produced-4, term-2)\n" + "nsubj(chalked-22, term-2)\n"+ "aux(produced-4, has-3)\n"+ "root(ROOT-0, produced-4)\n"+ "neg(failures-7, no-5)\n"+ "amod(failures-7, spectacular-6)\n"+ "dobj(produced-4, failures-7)\n"+ "dobj(produced-4, failures-7')\n"+ "dobj(produced-4, failures-7'')\n"+ "conj_or(failures-7, failures-7')\n"+ "conj_or(failures-7, failures-7'')\n"+ "prep_in(failures-7, politics-9)\n"+ "det(economy-13, the-12)\n"+ "prep_in(failures-7', economy-13)\n"+ "det(front-18, the-16)\n"+ "amod(front-18, military-17)\n"+ "prep_on(failures-7'', front-18)\n"+ "aux(chalked-22, has-21)\n"+ "conj_and(produced-4, chalked-22)\n"+ "prt(chalked-22, up-23)\n"+ "det(successes-25, some-24)\n"+ "dobj(chalked-22, successes-25)\n","nsubj(walked-2, Fred-1)\n" + "nsubj(walked-2', Fred-1)\n" + "root(ROOT-0, walked-2)\n"+ "conj_and(walked-2, walked-2')\n"+ "det(door-5, the-4)\n"+ "prep_out(walked-2, door-5)\n"+ "advmod(walked-2, right-7)\n"+ "det(trap-10, a-9)\n"+ "prep_into(walked-2', trap-10)\n","nsubj(walked-2, Fred-1)\n" + "root(ROOT-0, walked-2)\n" + "det(house-5, the-4)\n"+ "prep_into(walked-2, house-5)\n"+ "advmod(walked-2, right-7)\n"+ "det(trap-10, a-9)\n"+ "prep_into(walked-2, trap-10)\n"+ "conj_and(house-5, trap-10)\n","nsubj(went-4, Marie-1)\n" + "nsubj(drank-7, Marie-1)\n" + "nsubj(talked-11, Marie-1)\n"+ "conj_and(Marie-1, Chris-3)\n"+ "nsubj(went-4, Chris-3)\n"+ "root(ROOT-0, went-4)\n"+ "prt(went-4, out-5)\n"+ "conj_and(went-4, drank-7)\n"+ "dobj(drank-7, coffee-8)\n"+ "conj_and(went-4, talked-11)\n"+ "nn(Dependencies-14, Stanford-13)\n"+ "prep_about(talked-11, Dependencies-14)\n","det(days-2, These-1)\n" + "tmod(hustles-4, days-2)\n" + "nsubj(hustles-4, he-3)\n"+ "nsubj(hustles-4', he-3)\n"+ "root(ROOT-0, hustles-4)\n"+ "conj_and(hustles-4, hustles-4')\n"+ "amod(jobs-7, house-painting-6)\n"+ "prep_to(hustles-4, jobs-7)\n"+ "poss(pickup-11, his-9)\n"+ "nn(pickup-11, Chevy-10)\n"+ "prep_in(hustles-4, pickup-11)\n"+ "prepc_after(hustles-4', training-15)\n"+ "prepc_before(hustles-4, training-15)\n"+ "det(Tropics-18, the-17)\n"+ "prep_with(training-15, Tropics-18)\n","nsubj(walked-2, Jill-1)\n" + "nsubj(walked-2', Jill-1)\n" + "nsubj(walked-2'', Jill-1)\n"+ "nsubj(walked-2''', Jill-1)\n"+ "nsubj(walked-2'''', Jill-1)\n"+ "root(ROOT-0, walked-2)\n"+ "conj_and(walked-2, walked-2')\n"+ "conj_and(walked-2, walked-2'')\n"+ "conj_and(walked-2, walked-2''')\n"+ "conj_and(walked-2, walked-2'''')\n"+ "det(door-5, the-4)\n"+ "prep_out(walked-2, door-5)\n"+ "det(road-9, the-8)\n"+ "prep_over(walked-2', road-9)\n"+ "det(block-14, the-12)\n"+ "amod(block-14, deserted-13)\n"+ "prep_across(walked-2'', block-14)\n"+ "det(corner-18, the-17)\n"+ "prep_around(walked-2''', corner-18)\n"+ "det(park-23, the-22)\n"+ "prep_through(walked-2'''', park-23)\n","nsubj(noticed-2, John-1)\n" + "nsubj(departed-6, John-1)\n" + "root(ROOT-0, noticed-2)\n"+ "det(cockroach-4, a-3)\n"+ "dobj(noticed-2, cockroach-4)\n"+ "conj_and(noticed-2, departed-6)\n","advmod(fibers-4, More-1)\n" + "amod(fibers-4, common-2)\n" + "nn(fibers-4, chrysotile-3)\n"+ "nsubj(curly-6, fibers-4)\n"+ "nsubjpass(rejected-11, fibers-4)\n"+ "cop(curly-6, are-5)\n"+ "ccomp(explained-18, curly-6)\n"+ "auxpass(rejected-11, are-8)\n"+ "advmod(easily-10, more-9)\n"+ "advmod(rejected-11, easily-10)\n"+ "conj_and(curly-6, rejected-11)\n"+ "ccomp(explained-18, rejected-11)\n"+ "det(body-14, the-13)\n"+ "agent(rejected-11, body-14)\n"+ "nn(Mossman-17, Dr.-16)\n"+ "nsubj(explained-18, Mossman-17)\n"+ "root(ROOT-0, explained-18)\n","nsubjpass(appalled-3, John-1)\n" + "nsubj(complain-6, John-1)\n" + "auxpass(appalled-3, is-2)\n"+ "root(ROOT-0, appalled-3)\n"+ "aux(complain-6, will-5)\n"+ "conj_and(appalled-3, complain-6)\n","nsubj(contributions-10, What-1)\n" + "cop(contributions-10, are-2)\n" + "nn(Marlowe-4, Christopher-3)\n"+ "poss(contributions-10, Marlowe-4)\n"+ "conj_and(Marlowe-4, Shakespeare-7)\n"+ "poss(contributions-10, Shakespeare-7)\n"+ "amod(contributions-10, literary-9)\n"+ "root(ROOT-0, contributions-10)\n"+ "amod(literature-13, English-12)\n"+ "prep_to(contributions-10, literature-13)\n","nsubj(contributions-9, What-1)\n" + "cop(contributions-9, are-2)\n" + "nn(Marlowe-4, Christopher-3)\n"+ "poss(contributions-9, Marlowe-4)\n"+ "conj_and(Marlowe-4, Shakespeare-6)\n"+ "poss(contributions-9, Shakespeare-6)\n"+ "amod(contributions-9, literary-8)\n"+ "root(ROOT-0, contributions-9)\n"+ "amod(literature-12, English-11)\n"+ "prep_to(contributions-9, literature-12)\n","nsubj(like-2, I-1)\n" + "root(ROOT-0, like-2)\n" + "dobj(like-2, dogs-3)\n"+ "dobj(like-2, cats-7)\n"+ "conj_and(dogs-3, cats-7)\n","nsubj(like-2, I-1)\n" + "root(ROOT-0, like-2)\n" + "dobj(like-2, dogs-3)\n"+ "dobj(like-2, cats-6)\n"+ "conj_negcc(dogs-3, cats-6)\n","nsubj(like-2, I-1)\n" + "root(ROOT-0, like-2)\n" + "dobj(like-2, brandy-3)\n"+ "dobj(like-2, cognac-7)\n"+ "conj_and(brandy-3, cognac-7)\n","nsubj(like-2, I-1)\n" + "root(ROOT-0, like-2)\n" + "neg(only-4, not-3)\n"+ "preconj(cats-5, only-4)\n"+ "dobj(like-2, cats-5)\n"+ "dobj(like-2, dogs-8)\n"+ "conj_and(cats-5, dogs-8)\n","nsubj(flew-2, Fred-1)\n" + "root(ROOT-0, flew-2)\n" + "neg(only-4, not-3)\n"+ "preconj(flew-2, only-4)\n"+ "prep_to(flew-2, Greece-6)\n"+ "prep_to(flew-2, Serbia-10)\n"+ "conj_and(Greece-6, Serbia-10)\n","advmod(recently-2, Only-1)\n" + "advmod(redesigned-7, recently-2)\n" + "aux(redesigned-7, has-3)\n"+ "nsubjpass(redesigned-7, it-4)\n"+ "auxpass(redesigned-7, been-5)\n"+ "advmod(redesigned-7, attractively-6)\n"+ "root(ROOT-0, redesigned-7)\n"+ "poss(product-11, its-9)\n"+ "amod(product-11, editorial-10)\n"+ "nsubj(improved-12, product-11)\n"+ "conj_and(redesigned-7, improved-12)\n","amod(gyrations-4, Political-1)\n" + "conj_and(Political-1, currency-3)\n" + "amod(gyrations-4, currency-3)\n"+ "nsubj(whipsaw-6, gyrations-4)\n"+ "aux(whipsaw-6, can-5)\n"+ "root(ROOT-0, whipsaw-6)\n"+ "det(funds-8, the-7)\n"+ "dobj(whipsaw-6, funds-8)\n","root(ROOT-0, Managers-1)\n" + "conj_and(Managers-1, presenters-3)\n","root(ROOT-0, education-1)\n" + "conj_and(education-1, science-3)\n" + "conj_and(education-1, culture-5)\n","root(ROOT-0, education-1)\n" + "conj_and(education-1, science-3)\n" + "conj_and(education-1, culture-6)\n","root(ROOT-0, Digital-1)\n" + "conj_and(Digital-1, Hewlett-3)\n" + "conj_and(Digital-1, Sun-5)\n","root(ROOT-0, Digital-1)\n" + "conj_and(Digital-1, Hewlett-3)\n" + "conj_and(Digital-1, Sun-6)\n","nn(Depot-2, Home-1)\n" + "root(ROOT-0, Depot-2)\n" + "conj_and(Depot-2, Sun-4)\n"+ "conj_and(Depot-2, Coke-7)\n","nn(Depot-2, Home-1)\n" + "root(ROOT-0, Depot-2)\n" + "conj_and(Depot-2, Sun-4)\n"+ "conj_and(Depot-2, Coke-6)\n","nsubj(characteristics-14, Activation-1)\n" + "prep_of(Activation-1, Akt-3)\n" + "prep_of(Activation-1, NFkappaB-5)\n"+ "conj_and(Akt-3, NFkappaB-5)\n"+ "prep_of(Activation-1, Stat3-8)\n"+ "conj_and(Akt-3, Stat3-8)\n"+ "nn(pathways-12, MAPK-11)\n"+ "prep_of(Activation-1, pathways-12)\n"+ "conj_negcc(Akt-3, pathways-12)\n"+ "cop(characteristics-14, are-13)\n"+ "root(ROOT-0, characteristics-14)\n"+ "vmod(characteristics-14, associated-15)\n"+ "amod(transformation-18, malignant-17)\n"+ "prep_with(associated-15, transformation-18)\n"};
  assertEquals("Test array lengths mismatch!",testTrees.length,testAnswers.length);
  TreeReaderFactory trf=new PennTreeReaderFactory();
  for (int i=0; i < testTrees.length; i++) {
    String testTree=testTrees[i];
    String testAnswer=testAnswers[i];
    Tree tree=Tree.valueOf(testTree,trf);
    GrammaticalStructure gs=new EnglishGrammaticalStructure(tree);
    assertEquals("Unexpected CC processed dependencies for tree " + testTree,testAnswer,EnglishGrammaticalStructure.dependenciesToString(gs,gs.typedDependenciesCCprocessed(GrammaticalStructure.Extras.MAXIMAL),tree,false,false));
  }
}
