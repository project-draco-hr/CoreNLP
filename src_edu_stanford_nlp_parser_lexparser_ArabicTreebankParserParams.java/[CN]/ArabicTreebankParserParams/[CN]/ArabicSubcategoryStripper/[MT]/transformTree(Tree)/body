{
  Label lab=tree.label();
  String s=lab.value();
  if (tree.isLeaf()) {
    Tree leaf=tf.newLeaf(lab);
    leaf.setScore(tree.score());
    return leaf;
  }
 else   if (tree.isPhrasal()) {
    if (retainNPTmp && s.startsWith("NP-TMP")) {
      s="NP-TMP";
    }
 else     if (retainNPSbj && s.startsWith("NP-SBJ")) {
      s="NP-SBJ";
    }
 else     if (retainPRD && s.matches("VB[^P].*PRD.*")) {
      s=tlp.basicCategory(s);
      s+="-PRD";
    }
 else {
      s=tlp.basicCategory(s);
    }
  }
 else   if (tree.isPreTerminal()) {
    s=tlp.basicCategory(s);
  }
 else {
    System.err.printf("Encountered a non-leaf/phrasal/pre-terminal node %s\n",s);
    s=tlp.basicCategory(s);
  }
  List<Tree> children=new ArrayList<>(tree.numChildren());
  for (  Tree child : tree.getChildrenAsList()) {
    Tree newChild=transformTree(child);
    children.add(newChild);
  }
  Tree node=tf.newTreeNode(lab,children);
  node.setValue(s);
  node.setScore(tree.score());
  if (node.label() instanceof HasTag)   ((HasTag)node.label()).setTag(s);
  return node;
}
