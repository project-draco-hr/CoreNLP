{
  if (!(globalFlags.crossValidationFolds > 0 && !globalFlags.printCrossValidationDecisions)) {
    String message="";
    if (globalFlags.csvOutput != null) {
      message+=formatCsv(globalFlags.csvOutput,storedHeader.split("\t"),null);
    }
 else {
      message+="Output format: ";
      if (globalFlags.displayedColumn >= 0) {
        message+="dataColumn" + globalFlags.displayedColumn + "\t";
      }
      message+="goldAnswer\t";
      if (globalFlags.displayAllAnswers) {
        Logging.logger(ColumnDataClassifier.class).info(message + "[P(class) class]+ {sorted by probability}");
      }
 else {
        Logging.logger(ColumnDataClassifier.class).info(message + "classifierAnswer\tP(clAnswer)\tP(goldAnswer)");
      }
    }
  }
  Counter<String> contingency=new ClassicCounter<String>();
  for (int i=0, sz=test.size(); i < sz; i++) {
    testExample(cl,test,lineInfos,contingency,i);
  }
  if (globalFlags.groupingColumn >= 0 && globalFlags.rankingAccuracyClass != null)   finishRanking(contingency,bestSim);
  return writeResultsSummary(test.size(),contingency,cl.labels());
}
