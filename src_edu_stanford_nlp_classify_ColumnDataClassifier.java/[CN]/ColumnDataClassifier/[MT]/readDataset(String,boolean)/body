{
  Timing tim=new Timing();
  System.err.print("Reading dataset from " + filename + " ... ");
  GeneralDataset<String,String> dataset;
  List<String[]> lineInfos=null;
  if ((inTestPhase && Flags.testFromSVMLight) || (!inTestPhase && Flags.trainFromSVMLight)) {
    List<String> lines=null;
    if (inTestPhase) {
      lines=new ArrayList<String>();
    }
    if (globalFlags.usesRealValues) {
      dataset=RVFDataset.readSVMLightFormat(filename,lines);
    }
 else {
      dataset=Dataset.readSVMLightFormat(filename,lines);
    }
    if (lines != null) {
      lineInfos=makeSVMLightLineInfos(lines);
    }
  }
 else {
    try {
      if (inTestPhase) {
        lineInfos=new ArrayList<String[]>();
      }
      if (globalFlags.usesRealValues) {
        dataset=new RVFDataset<String,String>();
      }
 else {
        dataset=new Dataset<String,String>();
      }
      int lineNo=0;
      int minColumns=Integer.MAX_VALUE;
      int maxColumns=0;
      for (      String line : ObjectBank.getLineIterator(new File(filename),Flags.encoding)) {
        lineNo++;
        if (Flags.inputFormat == InputFormat.HEADER) {
          if (lineNo == 1) {
            if (storedHeader == null) {
              storedHeader=line;
            }
            continue;
          }
        }
 else         if (Flags.inputFormat == InputFormat.COMMENTS) {
          if (line.matches("\\s#.*")) {
            continue;
          }
        }
        String[] strings=splitLineToFields(line);
        if (strings.length < 2) {
          throw new RuntimeException("Line format error at line " + lineNo + ": "+ line);
        }
        if (strings.length < minColumns) {
          minColumns=strings.length;
        }
        if (strings.length > maxColumns) {
          maxColumns=strings.length;
        }
        if (inTestPhase) {
          lineInfos.add(strings);
        }
        if (strings.length < flags.length) {
          throw new RuntimeException("Error: Line has too few tab-separated columns (" + maxColumns + ") for "+ flags.length+ " columns required by specified properties: "+ line);
        }
        dataset.add(makeDatumFromStrings(strings));
      }
      if (lineNo > 0 && minColumns != maxColumns) {
        System.err.println();
        System.err.println("WARNING: Number of tab-separated columns in " + filename + " varies between "+ minColumns+ " and "+ maxColumns);
      }
    }
 catch (    Exception e) {
      throw new RuntimeException("Dataset could not be loaded",e);
    }
  }
  System.err.println("done [" + tim.toSecondsString() + "s, "+ dataset.size()+ " items].");
  return new Pair<GeneralDataset<String,String>,List<String[]>>(dataset,lineInfos);
}
