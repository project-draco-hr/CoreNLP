{
  Collection<IndexedWord> newRoots=getVerticesWithoutParents();
  if (newRoots.size() > 0) {
    roots.clear();
    roots.addAll(newRoots);
    return;
  }
  TwoDimensionalCounter<IndexedWord,IndexedWord> nodeDists=TwoDimensionalCounter.identityHashMapCounter();
  for (  IndexedWord node1 : vertexSet()) {
    for (    IndexedWord node2 : vertexSet()) {
      List<SemanticGraphEdge> path=getShortestDirectedPathEdges(node1,node2);
      if (path != null) {
        int dist=path.size();
        nodeDists.setCount(node1,node2,dist);
      }
    }
  }
  ClassicCounter<IndexedWord> dominatedEdgeCount=ClassicCounter.identityHashMapCounter();
  for (  IndexedWord outer : vertexSet()) {
    for (    IndexedWord inner : vertexSet()) {
      dominatedEdgeCount.incrementCount(outer,nodeDists.getCount(outer,inner));
    }
  }
  IndexedWord winner=Counters.argmax(dominatedEdgeCount);
  setRoot(winner);
}
