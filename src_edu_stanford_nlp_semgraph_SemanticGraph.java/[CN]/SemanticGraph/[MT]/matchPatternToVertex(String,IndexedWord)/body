{
  if (!containsVertex(vertex)) {
    throw new IllegalArgumentException();
  }
  String pat=pattern.replaceAll("<",",<");
  pat=pat.replaceAll(">",",>");
  String[] nodePath=pat.split(",");
  for (  String s : nodePath) {
    if (s.equals("")) {
      continue;
    }
    String word=s.substring(1);
    char dir=s.charAt(0);
    if (dir == '<') {
      boolean match=false;
      for (      IndexedWord parent : getParents(vertex)) {
        String lemma=parent.get(CoreAnnotations.LemmaAnnotation.class);
        if (lemma.equals(word)) {
          match=true;
          break;
        }
      }
      if (!match) {
        return false;
      }
    }
 else     if (dir == '>') {
      boolean match=false;
      for (      IndexedWord child : getChildren(vertex)) {
        String lemma=child.get(CoreAnnotations.LemmaAnnotation.class);
        if (lemma == null || lemma.equals("")) {
          lemma=child.word().toLowerCase();
        }
        if (lemma.equals(word)) {
          match=true;
          break;
        }
      }
      if (!match) {
        return false;
      }
    }
 else {
      throw new RuntimeException("Warning: bad pattern \"%s\"\n" + pattern);
    }
  }
  return true;
}
