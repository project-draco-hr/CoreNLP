{
  Morphology morphology=(lemmatize) ? new Morphology() : null;
  graph=new DirectedMultiGraph<IndexedWord,SemanticGraphEdge>();
  roots=Generics.newHashSet();
  Map<Integer,IndexedWord> indexToWord=Generics.newHashMap();
  for (  TypedDependency d : dependencies) {
    TreeGraphNode dep=d.dep();
    TreeGraphNode gov=d.gov();
    GrammaticalRelation reln=d.reln();
    int depIndex=dep.index();
    if (!indexToWord.containsKey(depIndex)) {
      IndexedWord depVertex=new IndexedWord(docID,sentIndex,dep.index(),dep.label());
      depVertex.setTag(dep.highestNodeWithSameHead().headTagNode().value());
      if (lemmatize) {
        depVertex.setLemma(morphology.lemma(depVertex.value(),depVertex.tag(),true));
      }
      indexToWord.put(depIndex,depVertex);
    }
    if (reln == ROOT) {
      continue;
    }
    int govIndex=gov.index();
    if (!indexToWord.containsKey(govIndex)) {
      IndexedWord govVertex=new IndexedWord(docID,sentIndex,gov.index(),gov.label());
      govVertex.setTag(gov.highestNodeWithSameHead().headTagNode().value());
      if (lemmatize) {
        govVertex.setLemma(morphology.lemma(govVertex.value(),govVertex.tag(),true));
      }
      indexToWord.put(govIndex,govVertex);
    }
  }
  for (  TypedDependency d : dependencies) {
    TreeGraphNode gov=d.gov();
    TreeGraphNode dep=d.dep();
    GrammaticalRelation reln=d.reln();
    if (reln != ROOT) {
      IndexedWord govVertex=indexToWord.get(d.gov().index());
      IndexedWord depVertex=indexToWord.get(d.dep().index());
      addEdge(govVertex,depVertex,reln,Double.NEGATIVE_INFINITY,d.extra());
    }
 else {
      IndexedWord depVertex=indexToWord.get(d.dep().index());
      addVertex(depVertex);
      roots.add(depVertex);
    }
  }
}
