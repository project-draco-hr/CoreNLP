{
  Structure[] children;
  double max=-1;
  double result;
  int argmax=-1;
  int num_ops=3 + parent.numPrefixes() + parent.numTargets()+ parent.numSuffixes();
  children=new Structure[num_ops];
  if (verbose) {
    System.err.println("\nExpanding structure:");
    new HMM(parent,HMM.REGULAR_HMM).printTransitions();
    System.err.println(num_ops + " children to be checked");
  }
  for (int k=0; k < num_ops; k++) {
    children[k]=doOp(parent,k);
    children[k].initializeTransitions();
    result=crossValidateTest(children[k]);
    if (verbose) {
      System.err.println("cross validated mean result = " + result);
      System.err.println("..............................");
    }
    if (result > max) {
      max=result;
      argmax=k;
    }
  }
  if (verbose) {
    System.err.println("Done expanding");
    System.err.println("--------------");
    System.err.print("Max: op " + argmax);
    System.err.println(" F1: " + max);
    System.err.println("--------------");
  }
  if (stopEarly) {
    if (max > bestResult) {
      HMM hmm=new HMM(children[argmax],HMM.REGULAR_HMM);
      if (verbose) {
        System.err.println("Training on full set of training documents to get MDL score...");
      }
      hmm.train(trainDocs,props,false);
      double curMdlScore=hmm.mdlScore(trainDocs);
      if (curMdlScore > mdlScore) {
        if (verbose) {
          System.err.println("MDL score improved.");
        }
        mdlScore=curMdlScore;
        bestResult=max;
        argBest=children[argmax];
        oneWorse=false;
      }
 else {
        if (verbose) {
          System.err.println("MDL score did not improve.");
        }
        improving=false;
      }
    }
 else {
      if (oneWorse) {
        improving=false;
      }
 else {
        oneWorse=true;
      }
    }
  }
  bestStructures[depth]=children[argmax];
  bestF1s[depth]=max;
  return children[argmax];
}
