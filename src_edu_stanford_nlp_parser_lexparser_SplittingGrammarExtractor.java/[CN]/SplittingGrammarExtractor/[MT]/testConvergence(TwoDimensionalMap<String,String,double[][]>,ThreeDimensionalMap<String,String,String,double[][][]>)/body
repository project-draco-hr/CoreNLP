{
  for (  String parentLabel : unaryBetas.firstKeySet()) {
    for (    String childLabel : unaryBetas.get(parentLabel).keySet()) {
      double[][] betas=unaryBetas.get(parentLabel,childLabel);
      double[][] newBetas=tempUnaryBetas.get(parentLabel,childLabel);
      int parentStates=betas.length;
      int childStates=betas[0].length;
      for (int i=0; i < parentStates; ++i) {
        for (int j=0; j < childStates; ++j) {
          double oldValue=betas[i][j];
          double newValue=newBetas[i][j];
          if (Math.abs(newValue - oldValue) > EPSILON) {
            return false;
          }
        }
      }
    }
  }
  for (  String parentLabel : binaryBetas.firstKeySet()) {
    for (    String leftLabel : binaryBetas.get(parentLabel).firstKeySet()) {
      for (      String rightLabel : binaryBetas.get(parentLabel).get(leftLabel).keySet()) {
        double[][][] betas=binaryBetas.get(parentLabel,leftLabel,rightLabel);
        double[][][] newBetas=tempBinaryBetas.get(parentLabel,leftLabel,rightLabel);
        int parentStates=betas.length;
        int leftStates=betas[0].length;
        int rightStates=betas[0][0].length;
        for (int i=0; i < parentStates; ++i) {
          for (int j=0; j < leftStates; ++j) {
            for (int k=0; k < rightStates; ++k) {
              double oldValue=betas[i][j][k];
              double newValue=newBetas[i][j][k];
              if (Math.abs(newValue - oldValue) > EPSILON) {
                return false;
              }
            }
          }
        }
      }
    }
  }
  return true;
}
