{
  Map<String,int[]> mergeCorrespondence=new HashMap<String,int[]>();
  for (  String state : originalStates) {
    int states=getStateSplitCount(state);
    int[] correspondence=new int[states];
    for (int i=0; i < states; ++i) {
      correspondence[i]=i;
    }
    mergeCorrespondence.put(state,correspondence);
  }
  for (  Triple<String,Integer,Double> merge : deltas) {
    int states=getStateSplitCount(merge.first());
    int split=merge.second();
    int[] correspondence=mergeCorrespondence.get(merge.first());
    for (int i=split + 1; i < states; ++i) {
      correspondence[i]=correspondence[i] - 1;
    }
  }
  return mergeCorrespondence;
}
