{
  System.out.println("Thread " + Thread.currentThread().getName() + " starting file "+ filename);
  ArrayList<CoreLabel> testList;
  try {
    testList=CMMSampler.readWordInfos(filename);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  cmmSampler=new CMMSampler(testList,classifier,numSamples,sampleTemplates);
  cmmSampler.sampleDocuments();
  Distribution phase1Distrib=cmmSampler.getDistribution();
  OverloadedPascalTemplate goldAnswerTemplate=cmmSampler.getGoldAnswerTemplate();
  PascalTemplate bestRawFieldValuesTemplate=cmmSampler.getBestFieldValuesTemplate();
  PascalTemplate bestRawSingleTemplate=(PascalTemplate)phase1Distrib.argmax();
  CliqueTemplates cliqueTemplates=cmmSampler.getCliqueTemplates();
  PascalTemplate bestProcessCliquesTemplate=getBestTemplateFromCliques(cliqueTemplates);
  System.err.println("Gold answer: \n" + goldAnswerTemplate.toString());
  System.err.println("Best Process Cliques Template: \n" + bestProcessCliquesTemplate.toString());
  cmmSampler.printBestFieldValues();
  addMarkupToWordInfos(testList,bestRawFieldValuesTemplate,BestFullAnnotation.class,null);
  addMarkupToWordInfos(testList,bestProcessCliquesTemplate,BestCliquesAnnotation.class,cmmSampler);
  Iterator<CoreLabel> wiIter=testList.iterator();
synchronized (phase1Out) {
    while (wiIter.hasNext()) {
      CoreLabel wi=wiIter.next();
      phase1Out.println(wi.word() + " " + wi.get(GoldAnswerAnnotation.class)+ " "+ wi.get(BestFullAnnotation.class));
      phase2Out.println(wi.word() + " " + wi.get(GoldAnswerAnnotation.class)+ " "+ wi.get(BestCliquesAnnotation.class));
    }
    phase1Out.println();
    phase2Out.println();
  }
  System.out.println("Thread " + Thread.currentThread().getName() + " finishing file "+ filename);
}
