{
  List<Field> fields=new ArrayList<Field>();
  boolean useCMM=false;
  CliqueTemplates ct=null;
  if (cmmSampler != null) {
    useCMM=true;
    ct=cmmSampler.getCliqueTemplates();
  }
  String wacro;
  String cacro;
  try {
    wacro=template.getValue("workshopacronym");
  }
 catch (  NullPointerException e) {
    wacro="!!!!!!!";
  }
  try {
    cacro=template.getValue("conferenceacronym");
  }
 catch (  NullPointerException e) {
    cacro="!!!!!!!";
  }
  for (int fieldIdx=0; fieldIdx < PascalTemplate.fields.length; ++fieldIdx) {
    String label=PascalTemplate.fields[fieldIdx];
    if (useStemming && (label.indexOf("acronym") != -1)) {
      String stemmedAcro=template.getValue(label);
      if (stemmedAcro != null && !stemmedAcro.equals("null")) {
        HashSet acroSet=(HashSet)ct.inverseAcronymMap.get(stemmedAcro);
        System.err.println("Rewriting acronym stem:" + stemmedAcro);
        for (Iterator iter=acroSet.iterator(); iter.hasNext(); ) {
          fields.add(new Field(label,(String)iter.next()));
        }
      }
    }
 else {
      if (!label.equals("1/1/1000")) {
        fields.add(new Field(label,template.getValue(label)));
      }
    }
  }
  if (!useCMM)   return fields;
  addSimilarCandidatesToTargetLabels("conferencename",cmmSampler.getCandidateFieldValues("conferencename"),template.getValue("conferencename"),fields);
  addSimilarCandidatesToTargetLabels("workshopname",cmmSampler.getCandidateFieldValues("workshopname"),template.getValue("workshopname"),fields);
  return fields;
}
