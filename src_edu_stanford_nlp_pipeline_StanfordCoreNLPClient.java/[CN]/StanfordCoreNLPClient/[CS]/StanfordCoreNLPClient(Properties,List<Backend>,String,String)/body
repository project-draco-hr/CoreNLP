{
  this.properties=properties;
  Properties serverProperties=new Properties();
  for (  String key : properties.stringPropertyNames()) {
    serverProperties.setProperty(key,properties.getProperty(key));
  }
  Collections.shuffle(backends,new Random(System.currentTimeMillis()));
  this.scheduler=new BackendScheduler(backends);
  this.apiKey=apiKey;
  this.apiSecret=apiSecret;
  serverProperties.setProperty("inputFormat","serialized");
  serverProperties.setProperty("outputFormat","serialized");
  serverProperties.setProperty("inputSerializer",ProtobufAnnotationSerializer.class.getName());
  serverProperties.setProperty("outputSerializer",ProtobufAnnotationSerializer.class.getName());
  List<String> jsonProperties=new ArrayList<>();
  for (  String key : serverProperties.stringPropertyNames()) {
    jsonProperties.add("\"" + JSONOutputter.cleanJSON(key) + "\": \""+ JSONOutputter.cleanJSON(serverProperties.getProperty(key))+ "\"");
  }
  this.propsAsJSON="{ " + StringUtils.join(jsonProperties,", ") + " }";
  this.scheduler.start();
}
