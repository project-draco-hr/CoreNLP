{
  if (!extractorNames.contains(extractorName)) {
    if (verbose) {
      System.err.println("Can't remove nonexistent extractor: " + extractorName);
    }
    return (false);
  }
  extractorNames.remove(extractorName);
  extractorsByName.remove(extractorName);
  extractableFieldsByName.remove(extractorName);
  descriptionsByName.remove(extractorName);
  classNamesByName.remove(extractorName);
  if (newExtractorNames.contains(extractorName)) {
    newExtractorNames.remove(extractorName);
  }
 else {
    oldExtractorFiles.add(getSerializedExtractorFile(extractorName));
  }
  Iterator<String> classNameIter=extractableSlotsByClassName.keySet().iterator();
  while (classNameIter.hasNext()) {
    Map extractorFieldsBySlotName=extractableSlotsByClassName.get(classNameIter.next());
    Iterator slotNameIter=extractorFieldsBySlotName.keySet().iterator();
    while (slotNameIter.hasNext()) {
      List extractorFields=(List)extractorFieldsBySlotName.get(slotNameIter.next());
      Iterator efIter=extractorFields.iterator();
      while (efIter.hasNext()) {
        ExtractorField ef=(ExtractorField)efIter.next();
        if (ef.getExtractorName().equals(extractorName)) {
          efIter.remove();
        }
      }
      if (extractorFields.isEmpty()) {
        slotNameIter.remove();
      }
    }
    if (extractorFieldsBySlotName.isEmpty()) {
      classNameIter.remove();
    }
  }
  return (true);
}
