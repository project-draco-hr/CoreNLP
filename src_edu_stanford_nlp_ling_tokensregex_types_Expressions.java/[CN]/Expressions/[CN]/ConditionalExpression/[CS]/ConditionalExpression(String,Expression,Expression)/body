{
  if (">=".equals(op)) {
    expr=new FunctionCallExpression("GE",Arrays.asList(expr1,expr2));
  }
 else   if ("<=".equals(op)) {
    expr=new FunctionCallExpression("LE",Arrays.asList(expr1,expr2));
  }
 else   if (">".equals(op)) {
    expr=new FunctionCallExpression("GT",Arrays.asList(expr1,expr2));
  }
 else   if ("<".equals(op)) {
    expr=new FunctionCallExpression("LT",Arrays.asList(expr1,expr2));
  }
 else   if ("==".equals(op)) {
    expr=new FunctionCallExpression("EQ",Arrays.asList(expr1,expr2));
  }
 else   if ("!=".equals(op)) {
    expr=new FunctionCallExpression("NE",Arrays.asList(expr1,expr2));
  }
 else   if ("=~".equals(op)) {
    expr=new FunctionCallExpression("Match",Arrays.asList(expr1,expr2));
  }
 else   if ("!~".equals(op)) {
    expr=new NotExpression(new FunctionCallExpression("Match",Arrays.asList(expr1,expr2)));
  }
}
