{
switch (op) {
case ">=":
    expr=new FunctionCallExpression("GE",Arrays.asList(expr1,expr2));
  break;
case "<=":
expr=new FunctionCallExpression("LE",Arrays.asList(expr1,expr2));
break;
case ">":
expr=new FunctionCallExpression("GT",Arrays.asList(expr1,expr2));
break;
case "<":
expr=new FunctionCallExpression("LT",Arrays.asList(expr1,expr2));
break;
case "==":
expr=new FunctionCallExpression("EQ",Arrays.asList(expr1,expr2));
break;
case "!=":
expr=new FunctionCallExpression("NE",Arrays.asList(expr1,expr2));
break;
case "=~":
expr=new FunctionCallExpression("Match",Arrays.asList(expr1,expr2));
break;
case "!~":
expr=new NotExpression(new FunctionCallExpression("Match",Arrays.asList(expr1,expr2)));
break;
}
}
