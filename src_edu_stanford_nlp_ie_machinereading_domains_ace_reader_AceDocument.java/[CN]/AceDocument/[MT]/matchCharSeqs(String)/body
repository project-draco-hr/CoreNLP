{
  Set<String> keys=mEntityMentions.keySet();
  for (  String key : keys) {
    AceEntityMention m=mEntityMentions.get(key);
    try {
      m.getHead().match(mTokens);
    }
 catch (    MatchException e) {
      mLog.severe("READER ERROR: Failed to match entity mention head: " + "[" + m.getHead().getText() + ", "+ m.getHead().getByteStart()+ ", "+ m.getHead().getByteEnd()+ "]");
      mLog.severe("Document tokens: " + tokensWithByteSpan(m.getHead().getByteStart(),m.getHead().getByteEnd()));
      mLog.severe("Document prefix: " + filePrefix);
      System.exit(1);
    }
    try {
      m.getExtent().match(mTokens);
    }
 catch (    MatchException e) {
      mLog.severe("READER ERROR: Failed to match entity mention extent: " + "[" + m.getExtent().getText() + ", "+ m.getExtent().getByteStart()+ ", "+ m.getExtent().getByteEnd()+ "]");
      mLog.severe("Document tokens: " + tokensWithByteSpan(m.getExtent().getByteStart(),m.getExtent().getByteEnd()));
      System.exit(1);
    }
    m.detectHeadToken(this);
  }
  Set<String> eventKeys=mEventMentions.keySet();
  for (  String key : eventKeys) {
    AceEventMention m=mEventMentions.get(key);
    try {
      m.getExtent().match(mTokens);
    }
 catch (    MatchException e) {
      mLog.severe("READER ERROR: Failed to match event mention extent: " + "[" + m.getExtent().getText() + ", "+ m.getExtent().getByteStart()+ ", "+ m.getExtent().getByteEnd()+ "]");
      mLog.severe("Document tokens: " + tokensWithByteSpan(m.getExtent().getByteStart(),m.getExtent().getByteEnd()));
      System.exit(1);
    }
  }
}
