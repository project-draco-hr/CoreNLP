{
  List<Tree> hypotheses=topParses.get(tree);
  if (hypotheses == null || hypotheses.size() == 0) {
    throw new AssertionError("Failed to get any hypothesis trees for " + tree);
  }
  double bestScore=Double.NEGATIVE_INFINITY;
  Tree bestTree=null;
  IdentityHashMap<Tree,SimpleMatrix> bestVectors=null;
  for (  Tree hypothesis : hypotheses) {
    IdentityHashMap<Tree,SimpleMatrix> nodeVectors=new IdentityHashMap<>();
    double scoreHyp=score(hypothesis,nodeVectors);
    double deltaMargin=0;
    if (lambda != 0) {
      deltaMargin=op.trainOptions.deltaMargin * lambda * getMargin(tree,hypothesis);
    }
    scoreHyp=scoreHyp + deltaMargin;
    if (bestTree == null || scoreHyp > bestScore) {
      bestTree=hypothesis;
      bestScore=scoreHyp;
      bestVectors=nodeVectors;
    }
  }
  DeepTree returnTree=new DeepTree(bestTree,bestVectors,bestScore);
  return returnTree;
}
