{
  Sentence sentence=new Sentence("The cat is blue.");
  assertEquals(new Integer(1),sentence.governor(0).orElse(-42));
  assertEquals(new Integer(3),sentence.governor(1).orElse(-42));
  assertEquals(new Integer(3),sentence.governor(2).orElse(-42));
  assertEquals(new Integer(-1),sentence.governor(3).orElse(-42));
  assertEquals(new Integer(3),sentence.governor(4).orElse(-42));
  assertEquals("det",sentence.incomingDependencyLabel(0).orElse("???"));
  assertEquals("nsubj",sentence.incomingDependencyLabel(1).orElse("???"));
  assertEquals("cop",sentence.incomingDependencyLabel(2).orElse("???"));
  assertEquals("root",sentence.incomingDependencyLabel(3).orElse("???"));
  assertEquals("punct",sentence.incomingDependencyLabel(4).orElse("???"));
  assertNotNull(sentence.asCoreMap().get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class));
  assertNotNull(sentence.asCoreMap().get(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class));
  assertNotNull(sentence.asCoreMap().get(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class));
  assertNull(sentence.asCoreMap().get(TreeCoreAnnotations.TreeAnnotation.class));
  for (int i=0; i < sentence.length(); ++i) {
    assertEquals(sentence.governor(i),sentence.governors().get(i));
    assertEquals(sentence.incomingDependencyLabel(i),sentence.incomingDependencyLabels().get(i));
  }
}
