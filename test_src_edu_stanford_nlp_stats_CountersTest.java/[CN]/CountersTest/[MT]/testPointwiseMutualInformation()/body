{
  Counter<String> x=new ClassicCounter<>();
  x.incrementCount("0",0.8);
  x.incrementCount("1",0.2);
  Counter<Integer> y=new ClassicCounter<>();
  y.incrementCount(0,0.25);
  y.incrementCount(1,0.75);
  Counter<Pair<String,Integer>> joint;
  joint=new ClassicCounter<>();
  joint.incrementCount(new Pair<>("0",0),0.1);
  joint.incrementCount(new Pair<>("0",1),0.7);
  joint.incrementCount(new Pair<>("1",0),0.15);
  joint.incrementCount(new Pair<>("1",1),0.05);
  double pmi;
  Pair<String,Integer> pair;
  pair=new Pair<>("0",0);
  pmi=Counters.pointwiseMutualInformation(x,y,joint,pair);
  assertEquals(-1,pmi,10e-5);
  pair=new Pair<>("0",1);
  pmi=Counters.pointwiseMutualInformation(x,y,joint,pair);
  assertEquals(0.222392421,pmi,10e-5);
  pair=new Pair<>("1",0);
  pmi=Counters.pointwiseMutualInformation(x,y,joint,pair);
  assertEquals(1.584962501,pmi,10e-5);
  pair=new Pair<>("1",1);
  pmi=Counters.pointwiseMutualInformation(x,y,joint,pair);
  assertEquals(-1.584962501,pmi,10e-5);
}
