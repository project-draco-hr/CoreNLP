{
  boolean words=evalTypes.contains(WordCatConstituent.wordType);
  boolean tags=evalTypes.contains(WordCatConstituent.tagType);
  boolean cats=evalTypes.contains(WordCatConstituent.catType);
  List<WordCatConstituent> brackets=new ArrayList<WordCatConstituent>();
  if (words || cats || tags) {
    root=ext.transformTree(root);
    for (Iterator<Tree> iterator=root.iterator(); iterator.hasNext(); ) {
      Tree tree=iterator.next();
      if (tree.isPrePreTerminal() && !tree.value().equals("ROOT")) {
        if (words) {
          brackets.add(new WordCatConstituent(tree,root,WordCatConstituent.wordType));
        }
        if (tags) {
          brackets.add(new WordCatConstituent(tree,root,WordCatConstituent.tagType));
        }
      }
 else       if (cats && tree.isPhrasal() && !tree.value().equals("ROOT")) {
        brackets.add(new WordCatConstituent(tree,root,WordCatConstituent.catType));
      }
    }
  }
  return brackets;
}
