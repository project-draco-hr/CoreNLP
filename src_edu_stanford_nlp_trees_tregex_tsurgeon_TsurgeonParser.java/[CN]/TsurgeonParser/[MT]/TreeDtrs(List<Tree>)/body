{
  SimpleNode jjtn000=new SimpleNode(JJTTREEDTRS);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  Tree tree;
  try {
switch ((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
case IDENTIFIER:
case TREE_NODE_TERMINAL_LABEL:
case TREE_NODE_NONTERMINAL_LABEL:
{
        tree=TreeNode();
        TreeDtrs(dtrs);
        jjtree.closeNodeScope(jjtn000,true);
        jjtc000=false;
        dtrs.add(0,tree);
{
          if ("" != null)           return dtrs;
        }
        break;
      }
case 29:
{
      jj_consume_token(29);
      jjtree.closeNodeScope(jjtn000,true);
      jjtc000=false;
{
        if ("" != null)         return dtrs;
      }
      break;
    }
default :
  jj_la1[8]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
}
}
throw new Error("Missing return statement in function");
}
