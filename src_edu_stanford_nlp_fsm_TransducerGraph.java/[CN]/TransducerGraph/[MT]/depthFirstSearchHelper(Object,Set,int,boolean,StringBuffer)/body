{
  if (marked.contains(node)) {
    return;
  }
  marked.add(node);
  Set arcs;
  if (forward) {
    arcs=this.getArcsBySource(node);
  }
 else {
    arcs=this.getArcsByTarget(node);
  }
  if (arcs == null) {
    return;
  }
  for (Iterator iter=arcs.iterator(); iter.hasNext(); ) {
    Arc newArc=(Arc)iter.next();
    for (int i=0; i < level; i++) {
      b.append("  ");
    }
    if (getEndNodes().contains(newArc.getTargetNode())) {
      b.append(newArc + " END\n");
    }
 else {
      b.append(newArc + "\n");
    }
    if (forward) {
      depthFirstSearchHelper(newArc.getTargetNode(),marked,level + 1,forward,b);
    }
 else {
      depthFirstSearchHelper(newArc.getSourceNode(),marked,level + 1,forward,b);
    }
  }
}
