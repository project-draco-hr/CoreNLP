{
  NumberFormat nf=NumberFormat.getNumberInstance();
  nf.setMaximumFractionDigits(3);
  nf.setMinimumFractionDigits(1);
  StringBuilder result=new StringBuilder();
  Set nodes=getNodes();
  result.append("digraph G {\n");
  int sz=arcs.size();
  int ht=105;
  int mag=250;
  while (sz > mag) {
    ht+=105;
    mag*=2;
  }
  int wd=8;
  mag=500;
  while (sz > mag) {
    wd+=8;
    mag*=4;
  }
  double htd=ht / 10.0;
  result.append("size = \"" + wd + ","+ htd+ "\";\n");
  result.append("graph [rankdir = \"LR\"];\n");
  result.append("graph [ranksep = \"0.2\"];\n");
  for (  Object node : nodes) {
    String cleanString=StringUtils.fileNameClean(node.toString());
    result.append(cleanString);
    result.append(" [ ");
    result.append("label=\"" + node.toString() + "\"");
    result.append("height=\"0.3\", width=\"0.3\"");
    result.append(" ];\n");
    for (    Arc arc : getArcsBySource(node)) {
      result.append(StringUtils.fileNameClean(arc.getSourceNode().toString()));
      result.append(" -> ");
      result.append(StringUtils.fileNameClean(arc.getTargetNode().toString()));
      result.append(" [ ");
      result.append("label=\"");
      result.append(arc.getInput());
      result.append(" : ");
      Object output=arc.getOutput();
      String wt="";
      if (output instanceof Number) {
        double dd=((Number)output).doubleValue();
        if (dd == -0.0d) {
          result.append(nf.format(0.0d));
        }
 else {
          result.append(nf.format(output));
        }
        int weight;
        if (dotWeightInverted) {
          weight=(int)(20.0 - dd);
        }
 else {
          weight=(int)dd;
        }
        if (weight > 0) {
          wt=", weight = \"" + weight + "\"";
        }
        if (dotWeightInverted && dd <= 2.0 || (!dotWeightInverted) && dd >= 20.0) {
          wt+=", style=bold";
        }
      }
 else {
        result.append(output);
      }
      result.append("\"");
      result.append(wt);
      if (arc.getInput().toString().equals("EPSILON")) {
        result.append(", style = \"dashed\" ");
      }
 else {
        result.append(", style = \"solid\" ");
      }
      result.append("];\n");
    }
  }
  result.append("}\n");
  return result.toString();
}
