{
  List<Arc> bs=new ArrayList<Arc>();
  if (isTag[v.goal] && v.start + 1 == v.end) {
    List<Vertex> tails=new ArrayList<Vertex>();
    double score=iScore[v.start][v.end][v.goal];
    Arc arc=new Arc(tails,v,score);
    bs.add(arc);
  }
  for (int split=v.start + 1; split < v.end; split++) {
    for (    BinaryRule br : bg.ruleListByParent(v.goal)) {
      Vertex lChild=new Vertex(br.leftChild,v.start,split);
      Vertex rChild=new Vertex(br.rightChild,split,v.end);
      List<Vertex> tails=new ArrayList<Vertex>();
      tails.add(lChild);
      tails.add(rChild);
      Arc arc=new Arc(tails,v,br.score);
      bs.add(arc);
    }
  }
  for (  UnaryRule ur : ug.rulesByParent(v.goal)) {
    Vertex child=new Vertex(ur.child,v.start,v.end);
    List<Vertex> tails=new ArrayList<Vertex>();
    tails.add(child);
    Arc arc=new Arc(tails,v,ur.score);
    bs.add(arc);
  }
  return bs;
}
