{
  if (t.isLeaf()) {
    Tree leaf=tf.newLeaf(t.label());
    leaf.setScore(t.score());
    return leaf;
  }
  List<Tree> newChildren=new ArrayList<>();
  for (int childNum=0, numKids=t.numChildren(); childNum < numKids; childNum++) {
    Tree child=t.getChild(childNum);
    Tree newChild=transformTreeHelper(child);
    if ((!newChild.isLeaf()) && newChild.label().value().indexOf('@') >= 0) {
      newChildren.addAll(newChild.getChildrenAsList());
    }
 else {
      newChildren.add(newChild);
    }
  }
  Tree node=tf.newTreeNode(t.label(),newChildren);
  node.setScore(t.score());
  return node;
}
