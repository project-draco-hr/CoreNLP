{
  final JPanel encodingPanel=new JPanel();
  encodingPanel.setLayout(new BoxLayout(encodingPanel,BoxLayout.PAGE_AXIS));
  JLabel text=new JLabel("<html>A head finder or tree reader was selected that has the default encoding " + encoding + "; this differs from "+ oldEncoding+ ", which was being used. If the encoding is changed, all newly loaded"+ "treebanks will be read using the new encoding. Choosing an encoding that is not the true encoding of your tree "+ "files may cause errors and unexpected behavior.</html>");
  text.setAlignmentX(SwingConstants.LEADING);
  JPanel textPanel=new JPanel(new BorderLayout());
  textPanel.setPreferredSize(new Dimension(100,100));
  textPanel.add(text);
  encodingPanel.add(textPanel);
  encodingPanel.add(Box.createVerticalStrut(5));
  final JOptionPane fileFilterDialog=new JOptionPane();
  fileFilterDialog.setMessage(encodingPanel);
  JButton[] options=new JButton[3];
  JButton useNewEncoding=new JButton("Use " + encoding);
  JButton useOldEncoding=new JButton("Use " + oldEncoding);
  JButton useAnotherEncoding=new JButton("Use encoding...");
  options[0]=useNewEncoding;
  options[1]=useOldEncoding;
  options[2]=useAnotherEncoding;
  fileFilterDialog.setOptions(options);
  final JDialog dialog=fileFilterDialog.createDialog(null,"Default encoding changed...");
  useNewEncoding.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      FileTreeModel.setCurEncoding(encoding);
      if (setEncoding == null)       System.out.println("encoding null!!");
      setEncoding.setText(encoding);
      dialog.setVisible(false);
    }
  }
);
  useOldEncoding.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      dialog.setVisible(false);
    }
  }
);
  useAnotherEncoding.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      dialog.setVisible(false);
      alternateEncodingPrompt(encoding);
    }
  }
);
  dialog.getRootPane().setDefaultButton(useNewEncoding);
  dialog.pack();
  dialog.setLocationRelativeTo(this);
  dialog.setVisible(true);
}
