{
  StringBuilder result=new StringBuilder();
  result.append("GENERAL OPTIONS\n");
  result.append("randomSeed=" + randomSeed + "\n");
  result.append("wordVectors=" + wordVectors + "\n");
  result.append("unkWord=" + unkWord + "\n");
  result.append("randomWordVectors=" + randomWordVectors + "\n");
  result.append("numHid=" + numHid + "\n");
  result.append("numClasses=" + numClasses + "\n");
  result.append("lowercaseWordVectors=" + lowercaseWordVectors + "\n");
  result.append("useTensors=" + useTensors + "\n");
  result.append("simplifiedModel=" + simplifiedModel + "\n");
  result.append("combineClassification=" + combineClassification + "\n");
  result.append(trainOptions.toString());
  result.append("classNames=" + StringUtils.join(classNames,",") + "\n");
  result.append("equivalenceClasses=");
  if (equivalenceClasses != null) {
    for (int i=0; i < equivalenceClasses.length; ++i) {
      if (i > 0)       result.append(";");
      for (int j=0; j < equivalenceClasses[i].length; ++j) {
        if (j > 0)         result.append(",");
        result.append(equivalenceClasses[i][j]);
      }
    }
  }
  result.append("\n");
  result.append("equivalenceClassNames=");
  if (equivalenceClassNames != null) {
    result.append(StringUtils.join(equivalenceClassNames,","));
  }
  result.append("\n");
  return result.toString();
}
