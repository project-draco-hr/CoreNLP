{
  String docText=null;
  Annotation document=new Annotation(docText);
  document.set(CoreAnnotations.DocIDAnnotation.class,documentID);
  document.set(CoreAnnotations.SentencesAnnotation.class,sentences);
  List<CoreLabel> docTokens=new ArrayList<CoreLabel>();
  int sentenceIndex=0;
  int tokenBegin=0;
  for (  CoreMap sentenceAnnotation : sentences) {
    List<CoreLabel> sentenceTokens=sentenceAnnotation.get(CoreAnnotations.TokensAnnotation.class);
    docTokens.addAll(sentenceTokens);
    int tokenEnd=tokenBegin + sentenceTokens.size();
    sentenceAnnotation.set(CoreAnnotations.TokenBeginAnnotation.class,tokenBegin);
    sentenceAnnotation.set(CoreAnnotations.TokenEndAnnotation.class,tokenEnd);
    sentenceAnnotation.set(CoreAnnotations.SentenceIndexAnnotation.class,sentenceIndex);
    sentenceIndex++;
    tokenBegin=tokenEnd;
  }
  document.set(CoreAnnotations.TokensAnnotation.class,docTokens);
  int i=0;
  for (  CoreLabel token : docTokens) {
    String tokenText=token.get(CoreAnnotations.TextAnnotation.class);
    token.set(CoreAnnotations.CharacterOffsetBeginAnnotation.class,i);
    i+=tokenText.length();
    token.set(CoreAnnotations.CharacterOffsetEndAnnotation.class,i);
    i++;
  }
  for (  CoreMap sentenceAnnotation : sentences) {
    List<CoreLabel> sentenceTokens=sentenceAnnotation.get(CoreAnnotations.TokensAnnotation.class);
    sentenceAnnotation.set(CoreAnnotations.CharacterOffsetBeginAnnotation.class,sentenceTokens.get(0).get(CoreAnnotations.CharacterOffsetBeginAnnotation.class));
    sentenceAnnotation.set(CoreAnnotations.CharacterOffsetEndAnnotation.class,sentenceTokens.get(sentenceTokens.size() - 1).get(CoreAnnotations.CharacterOffsetEndAnnotation.class));
  }
  return document;
}
