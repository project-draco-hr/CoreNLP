{
  List<List<String>> entries=new ArrayList<>();
  entries.add(new ArrayList<String>(){
{
      add("3424");
      add("d2-s1-a1");
      add("0");
      add("{Chess,is,not,a,predominantly,physical,sport,\"\",\"\",yet,neither,are,shooting,and,curling,-LRB-,which,\"\",\"\",in,fact,\"\",\"\",has,been,nicknamed,``,chess,on,ice,'',5,-RRB-,.}");
      add("{chess,be,not,a,predominantly,physical,sport,\"\",\"\",yet,neither,be,shooting,and,curling,-lrb-,which,\"\",\"\",in,fact,\"\",\"\",have,be,nickname,``,chess,on,ice,'',5,-rrb-,.}");
      add("{NN,VBZ,RB,DT,RB,JJ,NN,\"\",\"\",RB,DT,VBP,JJ,CC,NN,-LRB-,WDT,\"\",\"\",IN,NN,\"\",\"\",VBZ,VBN,VBN,``,NN,IN,NN,'',LS,-RRB-,.}");
      add("{O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,O,NUMBER,O,O}");
      add("{0,6,9,13,15,29,38,43,45,49,57,61,70,74,82,83,88,90,93,97,99,103,108,118,119,125,128,131,132,133,134}");
      add("{5,8,12,14,28,37,43,44,48,56,60,69,73,81,83,88,89,92,97,98,102,107,117,119,124,127,131,132,133,134,135}");
      add("Chess is not a predominantly physical sport, yet neither are shooting and curling (which, in fact, has been nicknamed ???chess on ice???5).");
    }
  }
);
  TSVSentenceIterator it=new TSVSentenceIterator(entries.iterator(),new ArrayList<SentenceField>(){
{
      add(SentenceField.ID);
      add(SentenceField.DOC_ID);
      add(SentenceField.SENTENCE_INDEX);
      add(SentenceField.WORDS);
      add(SentenceField.LEMMAS);
      add(SentenceField.POS_TAGS);
      add(SentenceField.NER_TAGS);
      add(SentenceField.DOC_CHAR_BEGIN);
      add(SentenceField.DOC_CHAR_END);
      add(SentenceField.GLOSS);
    }
  }
);
  Sentence sentence=it.next();
  Assert.assertEquals("3424",sentence.sentenceid().orElse("-1"));
  Assert.assertEquals("d2-s1-a1",sentence.document.docid().orElse("???"));
  Assert.assertEquals(0,sentence.sentenceIndex());
  Assert.assertEquals("Chess is not a predominantly physical sport, yet neither are shooting and curling (which, in fact, has been nicknamed ???chess on ice???5).",sentence.text());
  Assert.assertArrayEquals(new String[]{"Chess","is","not","a","predominantly","physical","sport",",","yet","neither","are","shooting","and","curling","-LRB-","which",",","in","fact",",","has","been","nicknamed","``","chess","on","ice","''","5","-RRB-","."},sentence.words().toArray());
  Assert.assertArrayEquals(new String[]{"chess","be","not","a","predominantly","physical","sport",",","yet","neither","be","shooting","and","curling","-lrb-","which",",","in","fact",",","have","be","nickname","``","chess","on","ice","''","5","-rrb-","."},sentence.lemmas().toArray());
  Assert.assertArrayEquals(new String[]{"NN","VBZ","RB","DT","RB","JJ","NN",",","RB","DT","VBP","JJ","CC","NN","-LRB-","WDT",",","IN","NN",",","VBZ","VBN","VBN","``","NN","IN","NN","''","LS","-RRB-","."},sentence.posTags().toArray());
  Assert.assertArrayEquals(new String[]{"O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","O","NUMBER","O","O"},sentence.nerTags().toArray());
  Assert.assertArrayEquals(new Integer[]{0,6,9,13,15,29,38,43,45,49,57,61,70,74,82,83,88,90,93,97,99,103,108,118,119,125,128,131,132,133,134},sentence.characterOffsetBegin().toArray());
  Assert.assertArrayEquals(new Integer[]{5,8,12,14,28,37,43,44,48,56,60,69,73,81,83,88,89,92,97,98,102,107,117,119,124,127,131,132,133,134,135},sentence.characterOffsetEnd().toArray());
}
