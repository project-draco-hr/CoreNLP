{
  List<CoreLabel> sent=s.get(CoreAnnotations.TokensAnnotation.class);
  Tree tree=s.get(TreeCoreAnnotations.TreeAnnotation.class);
  tree.indexLeaves();
  SemanticGraph basicDependency=s.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);
  SemanticGraph collapsedDependency=s.get(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class);
  if (collapsedDependency == null) {
    collapsedDependency=s.get(SemanticGraphCoreAnnotations.EnhancedDependenciesAnnotation.class);
  }
  TregexPattern tgrepPattern=npOrPrpMentionPattern;
  TregexMatcher matcher=tgrepPattern.matcher(tree);
  while (matcher.find()) {
    Tree t=matcher.getMatch();
    List<Tree> mLeaves=t.getLeaves();
    int beginIdx=((CoreLabel)mLeaves.get(0).label()).get(CoreAnnotations.IndexAnnotation.class) - 1;
    int endIdx=((CoreLabel)mLeaves.get(mLeaves.size() - 1).label()).get(CoreAnnotations.IndexAnnotation.class);
    if (",".equals(sent.get(endIdx - 1).word())) {
      endIdx--;
    }
    IntPair mSpan=new IntPair(beginIdx,endIdx);
    if (!mentionSpanSet.contains(mSpan) && (!insideNE(mSpan,namedEntitySpanSet) || t.value().startsWith("PRP"))) {
      int dummyMentionId=-1;
      Mention m=new Mention(dummyMentionId,beginIdx,endIdx,sent,basicDependency,collapsedDependency,new ArrayList<>(sent.subList(beginIdx,endIdx)),t);
      mentions.add(m);
      mentionSpanSet.add(mSpan);
      if (m.originalSpan.size() > 1) {
        boolean isNE=true;
        for (        CoreLabel cl : m.originalSpan) {
          if (!cl.tag().startsWith("NNP"))           isNE=false;
        }
        if (isNE) {
          namedEntitySpanSet.add(mSpan);
        }
      }
    }
  }
}
