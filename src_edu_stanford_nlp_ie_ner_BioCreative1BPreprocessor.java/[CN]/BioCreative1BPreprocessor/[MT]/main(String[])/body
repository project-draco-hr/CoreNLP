{
  if (args.length != 1) {
    System.err.println("Usage: BioCreative1BPreprocessor <text_dir>");
    System.exit(1);
  }
  try {
    File[] files=new File(args[0]).listFiles(new FilenameFilter(){
      public boolean accept(      File dir,      String name){
        return name.endsWith(".txt");
      }
    }
);
    for (int i=0; i < files.length; i++) {
      BufferedReader br=new BufferedReader(new FileReader(files[i]));
      StringBuffer sb=new StringBuffer();
      String line;
      while ((line=br.readLine()) != null) {
        sb.append(line);
        sb.append(' ');
      }
      for (int j=0; j < sb.length(); j++) {
        if (sb.charAt(j) == '!' || sb.charAt(j) == '?') {
          sb.insert(j + 1,'\n');
        }
 else         if (sb.charAt(j) == '.' && isSentenceBoundary(sb,j)) {
          sb.insert(j + 1,'\n');
        }
      }
      String name=files[i].getName();
      name=name.substring(0,name.lastIndexOf(".txt"));
      System.out.print("@@" + name + " ");
      LexerTokenizer t=new LexerTokenizer(new BioCreativeLexer(new StringReader(sb.toString())));
      while (t.hasNext()) {
        String s=t.next();
        System.out.print(s);
        if (!"\n".equals(s)) {
          System.out.print(' ');
        }
      }
      System.out.print('\n');
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
