{
  Counter<F> features=block.features;
  Collection<Pair<L,Integer>> classAlternatives=block.classAlternatives;
  InternalSIFeatureBlock siBlock=new InternalSIFeatureBlock();
  int total=0;
  for (  F feature : features.keySet()) {
    inputFeatureIndex.add(feature);
    total+=(int)features.getCount(feature);
  }
  int[] indices=new int[total];
  int index=0;
  siBlock.inputFIndices=indices;
  for (  F feature : features.keySet()) {
    int fIndex=inputFeatureIndex.indexOf(feature);
    int cnt=(int)features.getCount(feature);
    for (int j=0; j < cnt; j++) {
      indices[index]=fIndex;
      index++;
    }
  }
  siBlock.locations=new IntPair[classAlternatives.size()];
  index=0;
  for (  Pair<L,Integer> p : classAlternatives) {
    labelIndex.add(p.first());
    siBlock.locations[index]=intern.intern(new IntPair(labelIndex.indexOf(p.first()),p.second().intValue()));
    index++;
  }
  return siBlock;
}
