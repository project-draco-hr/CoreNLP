{
  edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph result=new edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph(this);
  int from_bitField0_=bitField0_;
  if (nodesBuilder_ == null) {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      nodes_=java.util.Collections.unmodifiableList(nodes_);
      bitField0_=(bitField0_ & ~0x00000001);
    }
    result.nodes_=nodes_;
  }
 else {
    result.nodes_=nodesBuilder_.build();
  }
  if (edgesBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      edges_=java.util.Collections.unmodifiableList(edges_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.edges_=edges_;
  }
 else {
    result.edges_=edgesBuilder_.build();
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    roots_=java.util.Collections.unmodifiableList(roots_);
    bitField0_=(bitField0_ & ~0x00000004);
  }
  result.roots_=roots_;
  onBuilt();
  return result;
}
