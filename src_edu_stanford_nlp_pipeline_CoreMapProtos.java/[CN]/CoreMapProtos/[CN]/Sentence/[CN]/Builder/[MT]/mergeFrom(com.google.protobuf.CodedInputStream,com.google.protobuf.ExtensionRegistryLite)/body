{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 8:
{
bitField0_|=0x00000001;
tokenOffsetBegin_=input.readUInt32();
break;
}
case 16:
{
bitField0_|=0x00000002;
tokenOffsetEnd_=input.readUInt32();
break;
}
case 24:
{
bitField0_|=0x00000004;
sentenceIndex_=input.readUInt32();
break;
}
case 32:
{
bitField0_|=0x00000008;
characterOffsetBegin_=input.readUInt32();
break;
}
case 40:
{
bitField0_|=0x00000010;
characterOffsetEnd_=input.readUInt32();
break;
}
case 50:
{
edu.stanford.nlp.pipeline.CoreMapProtos.ParseTree.Builder subBuilder=edu.stanford.nlp.pipeline.CoreMapProtos.ParseTree.newBuilder();
if (hasParseTree()) {
subBuilder.mergeFrom(getParseTree());
}
input.readMessage(subBuilder,extensionRegistry);
setParseTree(subBuilder.buildPartial());
break;
}
case 58:
{
edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.Builder subBuilder=edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.newBuilder();
if (hasBasicDependencies()) {
subBuilder.mergeFrom(getBasicDependencies());
}
input.readMessage(subBuilder,extensionRegistry);
setBasicDependencies(subBuilder.buildPartial());
break;
}
case 66:
{
edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.Builder subBuilder=edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.newBuilder();
if (hasCollapsedDependencies()) {
subBuilder.mergeFrom(getCollapsedDependencies());
}
input.readMessage(subBuilder,extensionRegistry);
setCollapsedDependencies(subBuilder.buildPartial());
break;
}
case 74:
{
edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.Builder subBuilder=edu.stanford.nlp.pipeline.CoreMapProtos.DependencyGraph.newBuilder();
if (hasCollapsedCCProcessedDependencies()) {
subBuilder.mergeFrom(getCollapsedCCProcessedDependencies());
}
input.readMessage(subBuilder,extensionRegistry);
setCollapsedCCProcessedDependencies(subBuilder.buildPartial());
break;
}
case 80:
{
bitField0_|=0x00000200;
paragraph_=input.readUInt32();
break;
}
}
}
}
