{
  if (other == edu.stanford.nlp.pipeline.CoreMapProtos.CorefChain.getDefaultInstance())   return this;
  if (other.hasChainID()) {
    setChainID(other.getChainID());
  }
  if (mentionBuilder_ == null) {
    if (!other.mention_.isEmpty()) {
      if (mention_.isEmpty()) {
        mention_=other.mention_;
        bitField0_=(bitField0_ & ~0x00000002);
      }
 else {
        ensureMentionIsMutable();
        mention_.addAll(other.mention_);
      }
      onChanged();
    }
  }
 else {
    if (!other.mention_.isEmpty()) {
      if (mentionBuilder_.isEmpty()) {
        mentionBuilder_.dispose();
        mentionBuilder_=null;
        mention_=other.mention_;
        bitField0_=(bitField0_ & ~0x00000002);
        mentionBuilder_=com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getMentionFieldBuilder() : null;
      }
 else {
        mentionBuilder_.addAllMessages(other.mention_);
      }
    }
  }
  if (other.hasRepresentative()) {
    setRepresentative(other.getRepresentative());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
