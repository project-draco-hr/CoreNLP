{
  String testText="Claudia had ruled the duchy well in her regency from 1632 to 1646, and was successful in keeping Tyrol out of the Thirty Years War.\n" + "The focus of today's Daily Eye Candy is the 22-year old fashion supermodel Chad White who is a native of Portland , Oregon.\n";
  Iterator<Timex> expectedTimexes=Arrays.asList(Timex.fromXml("<TIMEX3 tid=\"t3\" value=\"PT122736H\" type=\"DURATION\" beginPoint=\"t1\" endPoint=\"t2\">from 1632 to 1646</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t4\" value=\"P30Y\" type=\"DURATION\">the Thirty Years</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t5\" alt_value=\"THIS P1D INTERSECT P1D\" type=\"DATE\" temporalFunction=\"true\" valueFromFunction=\"tf0\" anchorTimeID=\"t6\">today's Daily</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t7\" value=\"P22Y\" type=\"DURATION\">22-year old</TIMEX3>")).iterator();
  Iterator<Timex> expectedTimexesResolved=Arrays.asList(Timex.fromXml("<TIMEX3 tid=\"t3\" value=\"PT122736H\" type=\"DURATION\" beginPoint=\"t1\" endPoint=\"t2\">from 1632 to 1646</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t4\" value=\"P30Y\" type=\"DURATION\">the Thirty Years</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t5\" value=\"2010-02-17\" type=\"SET\" quant=\"EVERY\" freq=\"P1X\" periodicity=\"P1D\">today's Daily</TIMEX3>"),Timex.fromXml("<TIMEX3 tid=\"t6\" value=\"P22Y\" type=\"DURATION\">22-year old</TIMEX3>")).iterator();
  Annotation document=createDocument(testText);
  Properties props=getDefaultProperties();
  props.setProperty(TIME_ANNOTATOR_NAME + ".markTimeRanges","true");
  TimeAnnotator sutime=getTimeAnnotator(props);
  sutime.annotate(document);
  for (  CoreMap timexAnn : document.get(TimeAnnotations.TimexAnnotations.class)) {
    Timex expectedTimex=expectedTimexes.next();
    testTimex(testText,expectedTimex.text(),expectedTimex,timexAnn);
  }
  assertFalse(expectedTimexes.hasNext());
  Annotation documentWithRefTime=createDocument(testText,"20100217");
  sutime.annotate(documentWithRefTime);
  for (  CoreMap timexAnn : documentWithRefTime.get(TimeAnnotations.TimexAnnotations.class)) {
    Timex expectedTimex=expectedTimexesResolved.next();
    testTimex(testText,expectedTimex.text(),expectedTimex,timexAnn);
  }
  assertFalse(expectedTimexes.hasNext());
}
