{
  pipeline.annotate(ann);
  if (ann.get(CoreAnnotations.SentencesAnnotation.class).size() == 1) {
    CoreMap sentence=ann.get(CoreAnnotations.SentencesAnnotation.class).get(0);
    if (sentence.get(NaturalLogicAnnotations.RelationTriplesAnnotation.class) != null) {
      if (sentence.get(NaturalLogicAnnotations.RelationTriplesAnnotation.class).isEmpty()) {
        for (        CoreLabel token : sentence.get(CoreAnnotations.TokensAnnotation.class)) {
          token.remove(NaturalLogicAnnotations.OperatorAnnotation.class);
          token.remove(NaturalLogicAnnotations.PolarityAnnotation.class);
        }
        sentence.remove(NaturalLogicAnnotations.RelationTriplesAnnotation.class);
        sentence.remove(NaturalLogicAnnotations.EntailedSentencesAnnotation.class);
        sentence.remove(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);
        sentence.remove(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class);
        sentence.remove(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class);
        backoff.annotate(ann);
      }
    }
  }
}
