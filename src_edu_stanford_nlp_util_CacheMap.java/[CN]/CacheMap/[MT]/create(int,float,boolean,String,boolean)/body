{
  try {
    ObjectInputStream ois=new ObjectInputStream(new FileInputStream(file));
    CacheMap<K,V> c=ErasureUtils.uncheckedCast(ois.readObject());
    log.info("Read cache from " + file + ", contains "+ c.size()+ " entries.  Backing file is "+ c.backingFile);
    if (!useFileParams) {
      c.backingFile=file;
      c.hits=c.misses=c.puts=0;
      c.CACHE_ENTRIES=numEntries;
    }
    return c;
  }
 catch (  FileNotFoundException ex) {
    log.info("Cache file " + file + " has not been created yet.  Making new one.");
    return new CacheMap<>(numEntries,loadFactor,accessOrder,file);
  }
catch (  Exception ex) {
    log.info("Error reading cache file " + file + ".  Making a new cache and NOT backing to file.");
    return new CacheMap<>(numEntries,loadFactor,accessOrder);
  }
}
